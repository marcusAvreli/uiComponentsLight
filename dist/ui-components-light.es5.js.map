{"version":3,"file":"ui-components-light.es5.js","sources":["ts/ui-components-light.ts","ts/src/clarity-light/wigfrid-light/comp-light/ComboBox/ComboBox.ts","ts/src/clarity-light/wigfrid-light/comp-light/ListBox/ListBox.ts","ts/src/clarity-light/wigfrid-light/comp-light/DropDown/DropDown.ts","ts/src/clarity-light/wigfrid-light/comp-light/Control.ts","ts/src/clarity-light/wigfrid-light/event/Event.ts","ts/src/clarity-light/wigfrid-light/event/EventHandler.ts","ts/src/clarity-light/wigfrid-light/core/src/common/clipboard.ts","ts/src/clarity-light/wigfrid-light/core/src/common/Binding.ts","ts/src/clarity-light/wigfrid-light/core/src/common/ui/Rectangle.ts","ts/src/clarity-light/wigfrid-light/core/src/common/ui/color.ts","ts/src/clarity-light/wigfrid-light/core/src/globalization/Globalize.ts","ts/src/clarity-light/wigfrid-light/core/src/common/geom/vector3d.ts","ts/src/clarity-light/wigfrid-light/core/src/common/ui/size.ts","ts/src/clarity-light/wigfrid-light/core/src/common/geom/matrix.ts","ts/src/clarity-light/wigfrid-light/core/src/common/datetime/datetime.ts","ts/src/clarity-light/wigfrid-light/core/src/globalization/Localization.ts","ts/src/clarity-light/wigfrid-light/core/src/util/type/get-type.ts","ts/src/clarity-light/wigfrid-light/core/src/util/string-manipulation/to-hyphen-case.ts","ts/src/clarity-light/wigfrid-light/core/src/util/string-manipulation/to-header-case.ts","ts/src/clarity-light/wigfrid-light/core/src/util/string-manipulation/escape-html.ts","ts/src/clarity-light/wigfrid-light/core/src/util/math/to-fixed.ts","ts/src/clarity-light/wigfrid-light/core/src/util/math/clamp.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-present.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-undefined.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-primitive.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-null-or-whitespace.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/set-text.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/set-css.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/get-element.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/enable.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/toggle-class.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/remove-class.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/contains.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/closest.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/add-class.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/has-class.ts","ts/src/clarity-light/wigfrid-light/core/src/util/browser/max-css-width.ts","ts/src/clarity-light/wigfrid-light/core/src/util/browser/max-css-height.ts","ts/src/clarity-light/wigfrid-light/core/src/util/browser/is-rtl-mode.ts","ts/src/clarity-light/wigfrid-light/core/src/util/dom/create-element.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/asType.ts","ts/src/clarity-light/wigfrid-light/core/src/common/global.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/asString.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-string.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/asInt.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-int.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/asEnum.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/asDate.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/assert-data-source.ts","ts/src/clarity-light/wigfrid-light/data-source/DataSource.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/asCollectionView.ts","ts/src/clarity-light/wigfrid-light/collections-light/CollectionView.ts","ts/src/clarity-light/wigfrid-light/eventArgs/CancelEventArgs.ts","ts/src/clarity-light/wigfrid-light/eventArgs/EventArgs.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/asBoolean.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-boolean.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/asArray.ts","ts/src/clarity-light/wigfrid-light/core/src/util/animate/animate.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/asNumber.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/asFunction.ts","ts/src/clarity-light/wigfrid-light/core/src/util/mouseToPage.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-number.ts","ts/src/clarity-light/wigfrid-light/core/src/common/ui/point.ts","ts/src/clarity-light/wigfrid-light/core/src/util/copy.ts","ts/src/clarity-light/wigfrid-light/core/src/util/asserts/assert.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-function.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-object.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-date.ts","ts/src/clarity-light/wigfrid-light/core/src/util/lang/is-array.ts","ts/src/clarity-light/clarity.module.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {DropDown,ComboBox,ClarityModule} from './public_api';\n\nexport {Control as Éµa} from './src/clarity-light/wigfrid-light/comp-light/Control';","\n//import {Color} from '../../core';\n\nimport {DropDown} from './../DropDown/DropDown';\nimport {ListBox} from './../ListBox/ListBox';\nimport {hasItems} from '../../core';\n//import {setSelectionRange} from  '../../core';\n//import {clamp} from  '../../core';\n\nimport {CollectionView} from '../../collections-light/CollectionView';\nimport {asBoolean} from '../../core';\n//import {asFunction} from   '../../core';\n\nimport {EventArgs} from '../../eventArgs/EventArgs';\n//import {CancelEventArgs} from \"../../eventArgs/CancelEventArgs\";\n//import {Key} from \"../../enum/Key\";\n//import {asNumber} from   '../../core';\n\nimport {asString} from '../../core';\nimport {Event} from '../../event/Event';\n/**\n * The \\@see:ComboBox control allows users to pick strings from lists.\n * \n * The control automatically completes entries as the user types, and allows users\n * to show a drop-down list with the items available.\n * \n * Use the \\@see:selectedIndex or the \\@see:text properties to determine which\n * item is currently selected.\n * \n * The \\@see:isEditable property determines whether users can enter values that\n * are not present in the list.\n * \n * The example below creates a \\@see:ComboBox control and populates it with a list\n * of countries. The \\@see:ComboBox searches for the country as the user types.\n * The <b>isEditable</b> property is set to false, so the user is forced to\n * select one of the items in the list.\n * \n * The example also shows how to create and populate a \\@see:ComboBox using\n * an HTML <b>&lt;select;&gt</b> element with <b>&lt;option;&gt</b> child\n * elements.\n * \n * \\@fiddle:8HnLx\n */\nexport class ComboBox extends DropDown {\n\n\t// child elements\n\t_lbx: ListBox;\n\n\t// property storage\n\t_required = true;\n\t_editable = false;\n\n\t// private stuff\n\t_composing = false;\n\t_deleting = false;\n\t_settingText = false;\n\t_cvt: HTMLElement;\n\t_hdrPath: string;\n/**\n * Initializes a new instance of a \\@see:ComboBox control.\n * \n * @param {?} element The DOM element that hosts the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options The JavaScript object containing initialization data for the control.\n */\nconstructor(element: any, options?) {\n\t\tsuper(element);\n//console.log(\"combo_constructor_start\");\n\t\t\n\t\t// handle IME\n\t\t/*\n\t\tthis.addEventListener(this._tbx, 'compositionstart', () => {\n\t\t\tthis._composing = true;\n\t\t});\n\t\tthis.addEventListener(this._tbx, 'compositionend', () => {\n\t\t\tthis._composing = false;\n\t\t\tthis._setText(this.text, true);\n\t\t});\n\t\t*/\n\t\t\t// initialize control options\n\t\tthis.initialize(options);\n\t\t//console.log(\"combo_constructor_finish\");\n\t}\n/**\n * @return {?}\n */\nget displayMemberPath(): string {\n\t\treturn this._lbx.displayMemberPath;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset displayMemberPath(value: string) {\n\t\tthis._lbx.displayMemberPath = value;\n\t\tconst /** @type {?} */ text = this.getDisplayText();\n\t\tif (this.text != text) {\n\t\t\tthis._setText(text, true);\n\t\t}\n\t}\n/**\n * @param {?} text\n * @param {?} fullMatch\n * @return {?}\n */\n_setText(text: string, fullMatch: boolean) {\n\t\t\t//console.log(\"combo_box_set_text_start\");\n\t\t// not while composing IME text...\n\t\tif (this._composing) return;\n\n\t\t// prevent reentrant calls while moving CollectionView cursor\n\t\tif (this._settingText) return;\n\t\tthis._settingText = true;\n\n\t\t// make sure we have a string\n\t\tif (text == null) text = '';\n\t\ttext = text.toString();\n\t\tsuper._setText(text, fullMatch);\n\t\t//console.log(\"combo_box_set_text_finish\");\n\t\t\n\t\tthis._settingText = false;\n\n}\n/**\n * Gets or sets the array or \\@see:ICollectionView object that contains the items to select from.\n * @return {?}\n */\nget itemsSource(): any {\n\t\treturn this._lbx.itemsSource;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset itemsSource(value: any) {\n\t\tthis._lbx.itemsSource = value;\n\t\tthis._updateBtn();\n\t}\n/**\n * @return {?}\n */\n_createDropDown() {\n\t\t//console.log(\"create drop down\");\n\t\tthis._lbx = new ListBox(this._dropDown);\n\t\t\tthis._lbx.selectedIndexChanged.addHandler(() => {\n\t\t\tthis._updateBtn();\n\t\t\tthis.selectedIndex = this._lbx.selectedIndex;\n\t\t\tthis.onSelectedIndexChanged();\n\t\t});\n\n\t\t// update button display when item list changes\n\t\tthis._lbx.itemsChanged.addHandler(() => {\n\t\t\tthis._updateBtn();\n\t\t});\n\n\t\t// close the drop-down when the user clicks to select an item\n\t\tthis.addEventListener(this._dropDown, 'click', (e: MouseEvent) => {\n\t\t\tif (e.target != this._dropDown) { // an item, not the list itself...\n\t\t\t\tthis.isDroppedDown = false;\n\t\t\t}\n\t\t});\n\t}\n/**\n * @return {?}\n */\nget headerPath(): string {\n\t\treturn this._hdrPath;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset headerPath(value: string) {\n\t\tthis._hdrPath = asString(value);\n\t\tconst /** @type {?} */ text = this.getDisplayText();\n\t\tif (this.text != text) {\n\t\t\tthis._setText(text, true);\n\t\t}\n\t}\n\t\tselectedIndexChanged = new Event();\n/**\n * Raises the \\@see:selectedIndexChanged event.\n * @param {?=} e\n * @return {?}\n */\nonSelectedIndexChanged(e?: EventArgs) {\n\t\tthis._updateBtn();\n\t\tthis.selectedIndexChanged.raise(this, e);\n\t}\n/**\n * Gets or sets the index of the currently selected item in the drop-down list.\n * @return {?}\n */\nget selectedIndex(): number {\n\t\treturn this._lbx.selectedIndex;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number) {\n\t\tif (value != this.selectedIndex) {\n\t\t\tthis._lbx.selectedIndex = value;\n\t\t}\n\t\tconst /** @type {?} */ text = this.getDisplayText(value);\n\t\tif (this.text != text) {\n\t\t\tthis._setText(text, true);\n\t\t}\n\t}\n/**\n * @return {?}\n */\nget collectionView(): CollectionView {\n\t\treturn this._lbx.collectionView;\n\t}\n/**\n * @param {?=} index\n * @return {?}\n */\ngetDisplayText(index = this.selectedIndex): string {\n\n\t\t// get display text directly from the headerPath if that was specified\n\t\tif (this.headerPath && index > -1 && hasItems(this.collectionView)) {\n\t\t\tconst /** @type {?} */ item = this.collectionView.items[index][this.headerPath];\n            let /** @type {?} */ text   = item != null ? item.toString() : '';\n\t\t\tif (this.isContentHtml) {\n\t\t\t\tif (!this._cvt) {\n\t\t\t\t\tthis._cvt = document.createElement('div');\n\t\t\t\t}\n\t\t\t\tthis._cvt.innerHTML = text;\n\t\t\t\ttext = this._cvt.textContent;\n\t\t\t}\n\t\t\treturn text;\n\t\t}\n\n\t\t// headerPath not specified, get text straight from the ListBox\n\t\treturn this._lbx.getDisplayText(index);\n\t}\n/**\n * @return {?}\n */\nget isContentHtml(): boolean {\n\t\treturn this._lbx.isContentHtml;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset isContentHtml(value: boolean) {\n\t\tif (value != this.isContentHtml) {\n\t\t\tthis._lbx.isContentHtml = asBoolean(value);\n\t\t\tlet /** @type {?} */ text = this.getDisplayText();\n\t\t\tif (this.text != text) {\n\t\t\t\tthis._setText(text, true);\n\t\t\t}\n\t\t}\n\t}\n/**\n * Gets or sets the item that is currently selected in the drop-down list.\n * @return {?}\n */\nget selectedItem(): any {\n\t\treturn this._lbx.selectedItem;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedItem(value: any) {\n\t\tthis._lbx.selectedItem = value;\n\t}\n/**\n * Gets or sets the value of the \\@see:selectedItem, obtained using the \\@see:selectedValuePath.\n * @return {?}\n */\nget selectedValue(): any {\n\t\treturn this._lbx.selectedValue;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValue(value: any) {\n\t\tthis._lbx.selectedValue = value;\n\t}\n\n}\n\nfunction ComboBox_tsickle_Closure_declarations() {\n/** @type {?} */\nComboBox.prototype._lbx;\n/** @type {?} */\nComboBox.prototype._required;\n/** @type {?} */\nComboBox.prototype._editable;\n/** @type {?} */\nComboBox.prototype._composing;\n/** @type {?} */\nComboBox.prototype._deleting;\n/** @type {?} */\nComboBox.prototype._settingText;\n/** @type {?} */\nComboBox.prototype._cvt;\n/** @type {?} */\nComboBox.prototype._hdrPath;\n/** @type {?} */\nComboBox.prototype.selectedIndexChanged;\n}\n\n","\n//import {Color} from '../../core';\n\nimport {Control} from '../Control';\n//import {FormatItemEventArgs} from './../FormatItemEventArgs';\n\nimport {asCollectionView} from '../../core';\n//import {asFunction} from '../../core';\n\nimport {asString} from '../../core';\nimport {hasItems} from '../../core';\nimport {asNumber} from '../../core';\nimport {toggleClass} from '../../core';\nimport {contains} from '../../core';\n//import {isObject} from '../../core';\n//import {asArray} from '../../core';\n\nimport {EventArgs} from '../../eventArgs/EventArgs';\n//import {escapeHtml} from '../../core';\n\nimport {hasClass} from '../../core';\n//import {Key} from \"../../enum/Key\";\n//import {tryCast} from '../../core';\n\nimport {Event} from '../../event/Event';\nimport {asBoolean} from '../../core';\n//import { Subscription } from 'rxjs';\n//import {ICollectionView} from \"../../collections-light/interface/ICollectionView\";\n\nimport {CollectionView} from '../../collections-light/CollectionView';\n/**\n * The \\@see:ListBox control displays a list of items which may contain\n * plain text or HTML, and allows users to select items with the mouse or\n * the keyboard.\n * \n * Use the \\@see:selectedIndex property to determine which item is currently\n * selected.\n * \n * You can populate a \\@see:ListBox using an array of strings or you can use\n * an array of objects, in which case the \\@see:displayPath property determines\n * which object property is displayed on the list.\n * \n * To display HTML rather than plain text, set the \\@see:isContentHtml property\n * to true.\n * \n * The example below creates a \\@see:ListBox control and populates it using\n * a 'countries' array. The control updates its \\@see:selectedIndex and\n * \\@see:selectedItem properties as the user moves the selection.\n * \n * \\@fiddle:8HnLx\n */\nexport class ListBox extends Control {\n\n\t// property storage\n\t_items: any; // any[] or ICollectionView\n\t_cv: CollectionView;\n\t_itemFormatter: Function;\n\t_pathDisplay: string;\n\t_pathValue: string;\n\t_pathChecked: string;\n\t_html = false;\n\n\t// work variables\n\t_checking: boolean;\n\t_search = '';\n\t_toSearch: number;\n/**\n * Initializes a new instance of a \\@see:ListBox.\n * \n * @param {?} element The DOM element that hosts the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options The JavaScript object containing initialization data for the control.\n */\nconstructor(element: any, options?) {\n\t\tsuper(element);\n\n\t\t// instantiate and apply template\n\t\tthis.applyTemplate('wj-control wj-listbox wj-content', null, null);\n\n\t\t// initializing from <select> tag\n\t\tif (this._orgTag == 'SELECT') {\n\t\t\t//this._copyOriginalAttributes(this.hostElement);\n\t\t\t//this._populateSelectElement(this.hostElement);\n\t\t}\n\n\t\t// handle mouse and keyboard\n\t\tconst host = this.hostElement;\n\t\tthis.addEventListener(host, 'click', this._click.bind(this));\n\t\t//this.addEventListener(host, 'keydown', this._keydown.bind(this));\n\t\t//this.addEventListener(host, 'keypress', this._keypress.bind(this));\n\n\t\t// prevent wheel from propagating to parent elements\n\t\t/*this.addEventListener(host, 'onmousewheel' in document ? 'mousewheel' : 'DOMMouseScroll', (e: MouseWheelEvent) => {\n\t\t\tif (host.scrollHeight > host.clientHeight) {\n\t\t\t\tif ((e.wheelDelta > 0 && host.scrollTop == 0) ||\n\t\t\t\t\t(e.wheelDelta < 0 && host.scrollTop + host.clientHeight >= host.scrollHeight)) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t*/\n\n\t\t// initialize control options\n\t\t//this.initialize(options);\n\t}\n/**\n * @return {?}\n */\nget isContentHtml(): boolean {\n\t\treturn this._html;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset isContentHtml(value: boolean) {\n\t\tif (value != this._html) {\n\t\t\tthis._html = asBoolean(value);\n\t\t\tthis._populateList();\n\t\t}\n\t}\n/**\n * @param {?} index\n * @return {?}\n */\ngetDisplayText(index: number): string {\n\t\tconst /** @type {?} */ children = this.hostElement.children, /** @type {?} */\n              item     = index > -1 && index < children.length\n                  ? /** @type {?} */(( <HTMLElement>children[index]))\n                  : null;\n\t\treturn item != null ? item.textContent : '';\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _click(e: MouseEvent) {\n\t\tconsole.log(\"click on list box\");\n\t\t// select the item that was clicked\n\t\tconst /** @type {?} */ children = this.hostElement.children;\n\t\tfor (let /** @type {?} */ index = 0; index < children.length; index++) {\n\t\t\tif (contains(children[index], e.target)) {\n\t\t\t\tthis.selectedIndex = index;\n\t\t\t\tthis._cv.removeAt(index);\n\t\t\t\t//console.log(\"list_box_selected_index_set:\"+this.selectedIndex);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// handle checkboxes\n\t\t/*if (this.checkedMemberPath && this.selectedIndex > -1) {\n\t\t\tconst cb = this._getCheckbox(this.selectedIndex);\n\t\t\tif (cb == e.target) {\n\t\t\t\tthis.setItemChecked(this.selectedIndex, cb.checked);\n\t\t\t}\n\t\t}*/\n\t}\n/**\n * Refreshes the list.\n * @return {?}\n */\nrefresh() {\n\t\tconsole.log(\"list_box_refresh_csalled\");\n\t\t//super.refresh();\n\t\t//this._populateList();\n\t}\n/**\n * @return {?}\n */\nget collectionView(): CollectionView {\n\t\treturn this._cv;\n\t}\n/**\n * @return {?}\n */\nget selectedIndex(): number {\n\t\tconsole.log(\"list_box_get_selected_index\");\n\t\tconsole.log(\"list_box_cv_current_position:\"+this._cv.currentPosition);\n\t\treturn this._cv ? this._cv.currentPosition : -1;\n\t\t\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number) {\n\t\t//console.log(\"list_box_set_selected_index\");\n\t\tif (this._cv) {\n\t\t\tthis._cv.moveCurrentToPosition(asNumber(value));\n\t\t}\n\t}\n/**\n * Gets or sets the array or \\@see:ICollectionView object that contains the list items.\n * @return {?}\n */\nget itemsSource(): any {\n\t\treturn this._items;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset itemsSource(value: any) {\n\t\tif (this._items != value) {\n\n\t\t\t// unbind current collection view\n\t\t\tthis._items = value;\n\t\t\tthis._cv = asCollectionView(value);\n\t\t\t\n\t\t\tif (this._cv != null) {\n\t\t\t\tthis._cv.currentChanged.subscribe(this._cvCurrentChanged.bind(this));\n\t\t\t\tthis._cv.collectionChanged.subscribe(this._cvCollectionChanged.bind(this));\n\t\t\t}\n\t\t\t// update the list\n\t\t\tthis._populateList();\n\t\t//\tthis.onItemsChanged();\n\t\t//\tthis.onSelectedIndexChanged();\n\t\t}\n\t}\n/**\n * @return {?}\n */\nprivate _cvCollectionChanged() {\n\t\t//if (!this._checking) {\n\t\tconsole.log(\"list_box_cv_collection_view_changed_started\");\n\t\t\tthis._populateList();\n\t\t\tthis.onItemsChanged();\n\t\t\tconsole.log(\"list_box_cv_collection_view_changed_finished\");\n\t\t//}\n\t}\n/**\n * @param {?} sender\n * @param {?} e\n * @return {?}\n */\nprivate _cvCurrentChanged(sender: any, e: EventArgs) {\n\t\tconsole.log(\"list_box_current_changed\");\n\t\tthis.showSelection();\n\t\tthis.onSelectedIndexChanged();\n\t}\n/**\n * Occurs when the list of items changes.\n */\nitemsChanged = new Event();\n/**\n * Raises the \\@see:itemsChanged event.\n * @param {?=} e\n * @return {?}\n */\nonItemsChanged(e?: EventArgs) {\n\t\tthis.itemsChanged.raise(this, e);\n\t}\n/**\n * @return {?}\n */\nget selectedItem(): any {\n\t\treturn this._cv ? this._cv.currentItem: null;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedItem(value: any) {\n\t\tif (this._cv) {\n\t\t\tthis._cv.moveCurrentTo(value);\n\t\t}\n\t}\n/**\n * @return {?}\n */\nprivate _populateList() {\n\t\tconsole.log(\"populate_list_start\");\n\t\t// get ready to populate\n\t\tconst /** @type {?} */ host = this.hostElement;\n\t\tif (host) {\n\n\t\t\t// remember if we have focus\n\t\t\tconst /** @type {?} */ focus = this.containsFocus();\n\n\t\t\t// fire event so user can clean up any current items\n\t\t//\tthis.onLoadingItems();\n\n\t\t\t// populate\n\t\t\thost.innerHTML = '';\n\t\t\tif (this._cv) {\n\t\t\t\tfor (let /** @type {?} */ i = 0; i < this._cv.items.length; i++) {\n\n\t\t\t\t\t// get item text\n\t\t\t\t\t///let text = this.getDisplayValue(i);\n\t\t\t\t\tlet /** @type {?} */ text = this.getDisplayValue(i);\n\t\t\t\t\tif (this._html != true) {\n\t\t\t\t\t//\ttext = escapeHtml(text);\n\t\t\t\t\t}\n\n\t\t\t\t\t// add checkbox (without tabindex attribute: TFS 135857)\n\t\t\t\t\t//if (this.checkedMemberPath) {\n\t\t\t\t\t\t//const checked = this._cv.items[i][this.checkedMemberPath];\n\t\t\t\t\t\t//text          = '<label><input type=\"checkbox\"' + (checked ? ' checked' : '') + '> ' + text + '</label>';\n\t\t\t\t\t//}\n\n\t\t\t\t\t// build item\n\t\t\t\t\tconst /** @type {?} */ item = document.createElement('div');\n\t\t\t\t\titem.innerHTML = text;\n\t\t\t\t\titem.className = 'wj-listbox-item';\n\t\t\t\t\tif (hasClass( /** @type {?} */((<HTMLElement>item.firstChild)), 'wj-separator')) {\n\t\t\t\t\t\titem.className += ' wj-separator';\n\t\t\t\t\t}\n\n\t\t\t\t\t// allow custom formatting\n\t\t\t\t\t//if (this.formatItem.hasHandlers) {\n\t\t\t\t\t//\tconst e = new FormatItemEventArgs(i, this._cv.items[i], item);\n\t\t\t\t\t\t//this.onFormatItem(e);\n\t\t\t\t\t//}\n\n\t\t\t\t\t// add item to list\n\t\t\t\t\thost.appendChild(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// make sure the list is not totally empty\n\t\t\t// or min-height/max-height won't work properly in IE/Edge\n\t\t\tif (host.children.length == 0) {\n\t\t\t\thost.appendChild(document.createElement('div'));\n\t\t\t}\n\n\t\t\t// restore focus\n\t\t\t//if (focus && !this.containsFocus()) {\n\t\t\t//\tthis.focus();\n\t\t\t//}\n\n\t\t\t// scroll selection into view\n\t\t\tthis.showSelection();\n\n\t\t\t// fire event so user can hook up to items\n\t\t\t//this.onLoadedItems();\n\t\t}\n\t\tconsole.log(\"populate_list_finish\");\n\t}\n/**\n * Occurs when the value of the \\@see:selectedIndex property changes.\n */\nselectedIndexChanged = new Event();\n/**\n * Raises the \\@see:selectedIndexChanged event.\n * @param {?=} e\n * @return {?}\n */\nonSelectedIndexChanged(e?: EventArgs) {\n\t\tthis.selectedIndexChanged.raise(this, e);\n\t}\n/**\n * @param {?} index\n * @return {?}\n */\ngetDisplayValue(index: number): string {\n\n\t\t// get the text or html\n\t\tlet /** @type {?} */ item = null;\n\t\tif (index > -1 && hasItems(this._cv)) {\n\t\t\titem = this._cv.items[index];\n\t\t\tif (this.displayMemberPath) {\n\t\t\t\titem = item[this.displayMemberPath];\n\t\t\t}\n\t\t}\n\t\tlet /** @type {?} */ text = item != null ? item.toString() : '';\n\n\t\t// allow caller to override/modify the text or html\n\t\t/*\n\t\tif (this.itemFormatter) {\n\t\t\ttext = this.itemFormatter(index, text);\n\t\t}\n*/\n\t\t// return the result\n\t\treturn text;\n\t}\n/**\n * Gets or sets the name of the property to use as the visual representation of the items.\n * @return {?}\n */\nget displayMemberPath(): string {\n\t\treturn this._pathDisplay;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset displayMemberPath(value: string) {\n\t\tif (value != this._pathDisplay) {\n\t\t\tthis._pathDisplay = asString(value);\n\t\t\tthis._populateList();\n\t\t}\n\t}\n/**\n * Highlights the selected item and scrolls it into view.\n * @return {?}\n */\nshowSelection() {\n\t\tconsole.log(\"list_box_show_selection_started\");\n\t\tconst /** @type {?} */ index    = this.selectedIndex, /** @type {?} */\n              host     = this.hostElement, /** @type {?} */\n              children = host.children;\n\t\tconsole.log(\"list_box_selected_index:\"+index);\n        let /** @type {?} */ e: HTMLElement;\n\n\t\t// highlight\n\t\tfor (let /** @type {?} */ i = 0; i < children.length; i++) {\n\t\t\te = /** @type {?} */(( <HTMLElement>children[i]));\n\t\t\ttoggleClass(e, 'wj-state-selected', i == index);\n\t\t}\n\n\t\t// scroll into view\n\t\tif (index > -1 && index < children.length) {\n\t\t\te = /** @type {?} */(( <HTMLElement>children[index]));\n\t\t\tconst /** @type {?} */ rco = e.getBoundingClientRect();\n\t\t\tconst /** @type {?} */ rcc = this.hostElement.getBoundingClientRect();\n\t\t\tif (rco.bottom > rcc.bottom) {\n\t\t\t\thost.scrollTop += rco.bottom - rcc.bottom;\n\t\t\t} else if (rco.top < rcc.top) {\n\t\t\t\thost.scrollTop -= rcc.top - rco.top;\n\t\t\t}\n\t\t}\n\n\t\t// make sure the focus is within the selected element (TFS 135278)\n\t\tif (index > -1 && this.containsFocus()) {\n\t\t\te = /** @type {?} */(( <HTMLElement>children[index]));\n\t\t\tif (e instanceof HTMLElement && !contains(e, document.activeElement)) {\n\t\t\t\te.focus();\n\t\t\t}\n\t\t}\n\t\tconsole.log(\"list_box_show_selection_finished\");\n\t}\n/**\n * @return {?}\n */\nget selectedValue(): any {\n\t\tlet /** @type {?} */ item = this.selectedItem;\n\t\tif (item && this.selectedValuePath) {\n\t\t\titem = item[this.selectedValuePath];\n\t\t}\n\t\treturn item;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValue(value: any) {\n\t\tlet /** @type {?} */ path  = this.selectedValuePath, /** @type {?} */\n            index = -1;\n\t\tif (this._cv) {\n\t\t\tfor (let /** @type {?} */ i = 0; i < this._cv.items.length; i++) {\n\t\t\t\tconst /** @type {?} */ item = this._cv.items[i];\n\t\t\t\tif ((path && item[path] == value) || (!path && item == value)) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.selectedIndex = index;\n\t\t}\n\t}\n/**\n * Gets or sets the name of the property used to get the \\@see:selectedValue\n * from the \\@see:selectedItem.\n * @return {?}\n */\nget selectedValuePath(): string {\n\t\treturn this._pathValue;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValuePath(value: string) {\n\t\tthis._pathValue = asString(value);\n\t}\n}\n\nfunction ListBox_tsickle_Closure_declarations() {\n/** @type {?} */\nListBox.prototype._items;\n/** @type {?} */\nListBox.prototype._cv;\n/** @type {?} */\nListBox.prototype._itemFormatter;\n/** @type {?} */\nListBox.prototype._pathDisplay;\n/** @type {?} */\nListBox.prototype._pathValue;\n/** @type {?} */\nListBox.prototype._pathChecked;\n/** @type {?} */\nListBox.prototype._html;\n/** @type {?} */\nListBox.prototype._checking;\n/** @type {?} */\nListBox.prototype._search;\n/** @type {?} */\nListBox.prototype._toSearch;\n/**\n * Occurs when the list of items changes.\n * @type {?}\n */\nListBox.prototype.itemsChanged;\n/**\n * Occurs when the value of the \\@see:selectedIndex property changes.\n * @type {?}\n */\nListBox.prototype.selectedIndexChanged;\n}\n\n","//import {Color} from '../../core';\n\nimport {Control} from '../Control';\n//import {showPopup, hidePopup} from '../../core/popup'\n\nimport {setSelectionRange} from '../../core';\nimport {CancelEventArgs} from '../../eventArgs/CancelEventArgs';\nimport {asBoolean} from '../../core';\nimport {EventArgs} from '../../eventArgs/EventArgs';\nimport {contains} from '../../core';\n//import {Key} from \"../../enum/Key\";\n\nimport {Event} from '../../event/Event';\n/**\n * DropDown control (abstract).\n * \n * Contains an input element and a button used to show or hide the drop-down.\n * \n * Derived classes must override the _createDropDown method to create whatever\n * editor they want to show in the drop down area (a list of items, a calendar,\n * a color editor, etc).\n */\nexport class DropDown extends Control {\n\n    // child elements\n    _tbx: HTMLInputElement;\n    _elRef: HTMLElement;\n    _btn: HTMLElement;\n    _dropDown: HTMLElement;\n\n    // property storage\n    _showBtn    = true;\n    _autoExpand = true;\n\n    // private stuff\n    _oldText: string;\n/**\n * Gets or sets the template used to instantiate \\@see:DropDown controls.\n */\nstatic controlTemplate = '<div style=\"position:relative\" class=\"wj-template\">' +\n        '<div class=\"wj-input\">' +\n        '<div class=\"wj-input-group wj-input-btn-visible\">' +\n        '<input wj-part=\"input\" type=\"text\" class=\"wj-form-control\" />' +\n        '<span wj-part=\"btn\" class=\"wj-input-group-btn\" tabindex=\"-1\">' +\n        '<button class=\"wj-btn wj-btn-default\" type=\"button\" tabindex=\"-1\">' +\n        '<span class=\"wj-glyph-down\"></span>' +\n        '</button>' +\n        '</span>' +\n        '</div>' +\n        '</div>' +\n        '<div wj-part=\"dropdown\" class=\"wj-content wj-dropdown-panel\" ' +\n        'style=\"display:none;position:absolute;z-index:100;width:auto\">' +\n        '</div>' +\n        '</div>';\n/**\n * Initializes a new instance of a \\@see:DropDown control.\n * \n * @param {?} element The DOM element that hosts the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options The JavaScript object containing initialization data for the control.\n */\nconstructor(element: any, options?) {\n        super(element,  true);\n\t\t//console.log(\"drop_down_constructor_start\");\n        // instantiate and apply template\n        const tpl =  '<div style=\"position:relative\" class=\"wj-template\">' +\n        '<div class=\"wj-input\">' +\n        '<div class=\"wj-input-group wj-input-btn-visible\">' +\n        '<input wj-part=\"input\" type=\"text\" class=\"wj-form-control\" />' +\n        '<span wj-part=\"btn\" class=\"wj-input-group-btn\" tabindex=\"-1\">' +\n        '<button class=\"wj-btn wj-btn-default\" type=\"button\" tabindex=\"-1\">' +\n        '<span class=\"wj-glyph-down\"></span>' +\n        '</button>' +\n        '</span>' +\n        '</div>' +\n        '</div>' +\n        '<div wj-part=\"dropdown\" class=\"wj-content wj-dropdown-panel\" ' +\n        'style=\"display:none;position:absolute;z-index:100;width:auto\">' +\n        '</div>' +\n        '</div>';\n        this.applyTemplate(\n            'wj-control wj-dropdown wj-content', tpl, {\n                _tbx     : 'input',\n                _btn     : 'btn',\n                _dropDown: 'dropdown'\n            }, 'input'\n        );\n\n        // set reference element (used for positioning the drop-down)\n        this._elRef = this._tbx;\n\n        // disable autocomplete (important for mobile browsers including Chrome/Android)\n        this._tbx.autocomplete = 'off';\n\n        // create drop-down element, update button display\n        this._createDropDown();\n        this._updateBtn();\n\n        // update focus state when the drop-down loses focus\n          this.addEventListener(\n            this._dropDown, 'blur', () => {\n                this._updateFocusState();\n            }, true\n        );\n  // textbox events\n        this.addEventListener(\n            this._tbx, 'input', () => {\n                this._setText(this.text, false);\n            }\n        );\n\t\t this.addEventListener(\n            this._tbx, 'click', () => {\n                if (this._autoExpand) {\n                    this._expandSelection(); // expand the selection to the whole number/word that was clicked\n                }\n            }\n        );\n\t\t // in case the drop-down is shown but the control is not (e.g. context menu)\n        this.addEventListener(\n            this.dropDown, 'focus', () => {\n                this._updateFocusState();\n            }\n        );\n // handle clicks on the drop-down button\n        this.addEventListener(this._btn, 'click', this._btnclick.bind(this));\n\n        // stop propagation of clicks on the drop-down element\n        // (since they are not children of the hostElement, which can confuse\n        // elements such as Bootstrap menus)\n        this.addEventListener(\n            this._dropDown, 'click', (e) => {\n                e.stopPropagation();\n            }\n        );\n     //  console.log(\"drop_down_constructor_finish\");\n    }\n/**\n * @return {?}\n */\n_createDropDown() {\n        // override in derived classes\n    }\n/**\n * Gets the drop down element shown when the \\@see:isDroppedDown\n * property is set to true.\n * @return {?}\n */\nget dropDown(): HTMLElement {\n        return this._dropDown;\n    }\n/**\n * @return {?}\n */\n_updateBtn() {\n        this._btn.tabIndex      = -1;\n        this._btn.style.display = this._showBtn ? '' : 'none';\n    }\n/**\n * @param {?} text\n * @param {?} pos\n * @return {?}\n */\n_getCharType(text: string, pos: number) {\n        const /** @type {?} */ chr = text[pos];\n        if (chr >= '0' && chr <= '9') return 0;\n        if ((chr >= 'a' && chr <= 'z') || (chr >= 'A' && chr <= 'Z')) return 1;\n        return -1;\n    }\n/**\n * @return {?}\n */\n_expandSelection() {\n        const /** @type {?} */ tbx = this._tbx, /** @type {?} */\n              val = tbx.value;\n        let /** @type {?} */ start = tbx.selectionStart, /** @type {?} */\n              end = tbx.selectionEnd;\n        if (val && start == end) {\n            const /** @type {?} */ ct = this._getCharType(val, start);\n            if (ct > -1) {\n                for (; end < val.length; end++) {\n                    if (this._getCharType(val, end) != ct) {\n                        break;\n                    }\n                }\n                for (; start > 0; start--) {\n                    if (this._getCharType(val, start - 1) != ct) {\n                        break;\n                    }\n                }\n                if (start != end) {\n                    tbx.setSelectionRange(start, end);\n                }\n            }\n        }\n    }\n/**\n * @param {?} e\n * @return {?}\n */\n_btnclick(e: MouseEvent) {\n        this.isDroppedDown = !this.isDroppedDown;\n    }\n/**\n * @return {?}\n */\nget isDroppedDown(): boolean {\n        return this._dropDown.style.display != 'none';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset isDroppedDown(value: boolean) {\n        value = asBoolean(value) && !this.disabled;\n        if (value != this.isDroppedDown && this.onIsDroppedDownChanging(new CancelEventArgs())) {\n            const /** @type {?} */ dd = this._dropDown;\n            if (value) {\n                if (!dd.style.minWidth) {\n                    dd.style.minWidth = this.hostElement.getBoundingClientRect().width + 'px';\n                }\n                dd.style.display = 'block';\n                this._updateDropDown();\n            } else {\n                if (this.containsFocus()) {\n                    if (!this.isTouching || !this.showDropDownButton) {\n                       this.selectAll();\n\t\t\t\t\t//  console.log(\"select_all\");\n                    }\n                }\n               // hidePopup(dd);\n\t\t\t   dd.style.display='none';\n            }\n            this._updateFocusState();\n            this.onIsDroppedDownChanged();\n        }\n    }\n/**\n * Occurs after the drop down is shown or hidden.\n */\nisDroppedDownChanged = new Event();\n/**\n * Raises the \\@see:isDroppedDownChanged event.\n * @param {?=} e\n * @return {?}\n */\nonIsDroppedDownChanged(e?: EventArgs) {\n        this.isDroppedDownChanged.raise(this, e);\n    }\n/**\n * @return {?}\n */\n_updateDropDown() {\n        if (this.isDroppedDown) {\n          //  this._commitText();\n\t\t//  console.log(\"update_drop_down\");\n          //  showPopup(this._dropDown, this.hostElement);\n        }\n    }\n/**\n * @return {?}\n */\nget showDropDownButton(): boolean {\n        return this._showBtn;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset showDropDownButton(value: boolean) {\n        this._showBtn = asBoolean(value);\n        this._updateBtn();\n    }\n/**\n * @return {?}\n */\ncontainsFocus(): boolean {\n        return super.containsFocus() || contains(this._dropDown, document.activeElement);\n    }\n/**\n * Occurs before the drop down is shown or hidden.\n */\nisDroppedDownChanging = new Event();\n/**\n * Raises the \\@see:isDroppedDownChanging event.\n * @param {?} e\n * @return {?}\n */\nonIsDroppedDownChanging(e: CancelEventArgs): boolean {\n        this.isDroppedDownChanging.raise(this, e);\n\t\t//console.log(\"changing\");\n        return !e.cancel;\n    }\n/**\n * @param {?=} e\n * @return {?}\n */\nonLostFocus(e?: EventArgs) {\n        this._commitText();\n        if (!this.containsFocus()) {\n            this.isDroppedDown = false;\n        }\n\t\t//console.log(\"on_lost_focus\");\n        super.onLostFocus(e);\n    }\n/**\n * @return {?}\n */\n_commitText() {\n        // override in derived classes\n    }\n/**\n * @param {?=} e\n * @return {?}\n */\nonGotFocus(e?: EventArgs) {\n        if (!this.isTouching) {\n            this.selectAll();\n        }\n\t\t//console.log(\"on_got_focus\");\n        super.onGotFocus(e);\n    }\n/**\n * Sets the focus to the control and selects all its content.\n * @return {?}\n */\nselectAll() {\n        if (this._elRef == this._tbx) {\n            setSelectionRange(this._tbx, 0, this.text.length);\n        }\n    }\n/**\n * Gets or sets the text shown on the control.\n * @return {?}\n */\nget text(): string {\n        return this._tbx.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset text(value: string) {\n        if (value != this.text) {\n            this._setText(value, true);\n        }\n    }\n/**\n * @param {?} text\n * @param {?} fullMatch\n * @return {?}\n */\n_setText(text: string, fullMatch: boolean) {\n\n        // make sure we have a string\n        if (text == null) text = '';\n        text = text.toString();\n\n        // update element\n        if (text != this._tbx.value) {\n            this._tbx.value = text;\n        }\n\n        // fire change event\n        if (text != this._oldText) {\n            this._oldText = text;\n            this.onTextChanged();\n        }\n    }\n/**\n * Occurs when the value of the \\@see:text property changes.\n */\ntextChanged = new Event();\n/**\n * Raises the \\@see:textChanged event.\n * @param {?=} e\n * @return {?}\n */\nonTextChanged(e?: EventArgs) {\n        this.textChanged.raise(this, e);\n    }\n}\n\nfunction DropDown_tsickle_Closure_declarations() {\n/**\n * Gets or sets the template used to instantiate \\@see:DropDown controls.\n * @type {?}\n */\nDropDown.controlTemplate;\n/** @type {?} */\nDropDown.prototype._tbx;\n/** @type {?} */\nDropDown.prototype._elRef;\n/** @type {?} */\nDropDown.prototype._btn;\n/** @type {?} */\nDropDown.prototype._dropDown;\n/** @type {?} */\nDropDown.prototype._showBtn;\n/** @type {?} */\nDropDown.prototype._autoExpand;\n/** @type {?} */\nDropDown.prototype._oldText;\n/**\n * Occurs after the drop down is shown or hidden.\n * @type {?}\n */\nDropDown.prototype.isDroppedDownChanged;\n/**\n * Occurs before the drop down is shown or hidden.\n * @type {?}\n */\nDropDown.prototype.isDroppedDownChanging;\n/**\n * Occurs when the value of the \\@see:text property changes.\n * @type {?}\n */\nDropDown.prototype.textChanged;\n}\n\n","import {Size} from './../core/index';\nimport {EventArgs} from '../eventArgs/EventArgs';\nimport {Event} from '../event/Event';\nimport {CollectionView} from '../collections-light/CollectionView';\nimport {\n    assert,\n    getElement,\n    addClass,\n    createElement,\n    asType,\n    contains,\n    asBoolean,\n    enable,\n    copy,\n    toggleClass\n} from '../core';\nimport {isPresent} from '../core';\n/**\n * Base class for all Wijmo controls.\n * \n * The \\@see:Control class handles the association between DOM elements and the\n * actual control. Use the \\@see:hostElement property to get the DOM element\n * that is hosting a control, or the \\@see:getControl method to get the control\n * hosted in a given DOM element.\n * \n * The \\@see:Control class also provides a common pattern for invalidating and\n * refreshing controls, for updating the control layout when its size changes,\n * and for handling the HTML templates that define the control structure.\n */\nexport class Control {\nprivate static _DATA_KEY = 'wj-Control';\nprivate static _REFRESH_INTERVAL = 10;\nprivate static _wme: HTMLElement;           // watermark element\n    static _touching: boolean;\nprivate _focus = false;\nprivate _updating = 0;\nprivate _fullUpdate = false;\nprivate _toInv: number;\nprivate _szCtl: Size;\nprivate _e: HTMLElement;\nprivate _orgOuter: string;\nprivate _orgInner: string;\nprivate _listeners;                         // list of event listeners attached to this control\n    _orgTag: string;                            // host element's original tag (if not DIV)\n    _orgAtts: NamedNodeMap;\n/**\n * Initializes a new instance of a \\@see:Control and attaches it to a DOM element.\n * \n * @param {?} element The DOM element that will host the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options JavaScript object containing initialization data for the control.\n * @param {?=} invalidateOnResize Whether the control should be invalidated when it is resized.\n */\nconstructor(element: any, options = null, invalidateOnResize = false) {\n\t//console.log(\"control_constructor\");\n        // get the host element\n        let host = getElement(element);\n\t\t  this._e = host;\n        host[Control._DATA_KEY] = this;\n\t\t const hd = this._handleDisabled.bind(this);\n this.addEventListener(host, 'click', hd, true);\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _handleDisabled(e: any) {\n        if (this.disabled) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n/**\n * Gets or sets whether the control is disabled.\n * \n * Disabled controls cannot get mouse or keyboard events.\n * @return {?}\n */\nget disabled(): boolean {\n        return this._e && this._e.getAttribute('disabled') != null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: boolean) {\n        value = asBoolean(value, true);\n        if (value != this.disabled) {\n            enable(this._e, !value);\n        }\n    }\n/**\n * @param {?} target\n * @param {?} type\n * @param {?} fn\n * @param {?=} capture\n * @return {?}\n */\naddEventListener(target: EventTarget, type: string, fn: any, capture = false) {\n            if (target) {\n                target.addEventListener(type, fn, capture);\n                if (this._listeners == null) {\n                    this._listeners = [];\n                }\n                this._listeners.push({ target: target, type: type, fn: fn, capture: capture });\n            }\n        }\n/**\n * Applies the template to a new instance of a control, and returns the root element.\n * \n * This method should be called by constructors of templated controls.\n * It is responsible for binding the template parts to the\n * corresponding control members.\n * \n * For example, the code below applies a template to an instance\n * of an \\@see:InputNumber control. The template must contain elements\n * with the 'wj-part' attribute set to 'input', 'btn-inc', and 'btn-dec'.\n * The control members '_tbx', '_btnUp', and '_btnDn' will be assigned\n * references to these elements.\n * \n * <pre>this.applyTemplate('wj-control wj-inputnumber', template, {\n *   _tbx: 'input',\n *   _btnUp: 'btn-inc',\n *   _btnDn: 'btn-dec'\n * }, 'input');</pre>\n * \n * @param {?} classNames Names of classes to add to the control's host element.\n * @param {?} template An HTML string that defines the control template.\n * @param {?} parts A dictionary of part variables and their names.\n * @param {?=} namePart Name of the part to be named after the host element. This\n * determines how the control submits data when used in forms.\n * @return {?}\n */\napplyTemplate(classNames: string, template: string, parts: Object, namePart?: string): HTMLElement {\n\t\t//console.log(\"apply_template_start\");\n        const /** @type {?} */ host = this._e;\n\n        // apply standard classes to host element\n        if (classNames) {\n            addClass(host, classNames);\n        }\n\n        // convert string into HTML template and append to host\n        let /** @type {?} */ tpl = null;\n        if (template) {\n            tpl = createElement(template);\n            tpl = host.appendChild(tpl);\n        }\n\n        // make sure the control can get the focus\n        // this is a little tricky:\n        // - Chrome won't give divs the focus unless we set tabIndex to something > -1\n        // - But if we do set it and the control contains input elements, the back-tab key won't work\n        // so we set the tabIndex to -1 or zero depending on whether the control contains input elements.\n        // http://wijmo.com/topic/shift-tab-not-working-for-input-controls-in-ff-and-chrome/, TFS 123457\n        if (host && !host.getAttribute('tabindex')) {\n            host.tabIndex = host.querySelector('input') ? -1 : 0;\n        }\n\n        // bind control variables to template parts\n        if (parts) {\n            for (let /** @type {?} */ part in parts) {\n                const /** @type {?} */ wjPart = parts[part];\n                this[part]   = tpl.querySelector('[wj-part=\"' + wjPart + '\"]');\n\n                // look in the root as well (querySelector doesn't...)\n                if (this[part] == null && tpl.getAttribute('wj-part') == wjPart) {\n                    this[part] = tpl;\n                }\n\n                // make sure we found the part\n                if (this[part] == null) {\n                    throw 'Missing template part: \"' + wjPart + '\"';\n                }\n\n                // copy/move attributes from host to input element\n                if (wjPart == namePart) {\n\n                    // copy parent element's name attribute to the namePart element\n                    // (to send data when submitting forms).\n                    let /** @type {?} */ att = host.attributes['name'];\n                    if (att && att.value) {\n                        this[part].setAttribute('name', att.value);\n                    }\n\n                    // transfer access key\n                    att = host.attributes['accesskey'];\n                    if (att && att.value) {\n                        this[part].setAttribute('accesskey', att.value);\n                        host.removeAttribute('accesskey');\n                    }\n                }\n            }\n        }\n\n        // return template\n\t\t//console.log(\"apply_template_finish\");\n        return tpl;\n    }\n/**\n * Gets the HTML template used to create instances of the control.\n * \n * This method traverses up the class hierarchy to find the nearest ancestor that\n * specifies a control template. For example, if you specify a prototype for the\n * \\@see:ComboBox control, it will override the template defined by the \\@see:DropDown\n * base class.\n * @return {?}\n */\ngetTemplate(): string {\n        for (let /** @type {?} */ p = Object.getPrototypeOf(this); p; p = Object.getPrototypeOf(p)) {\n\n            const /** @type {?} */ tpl = \"sssss\";\n\n        }\n\n        return null;\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nstatic getControl(element: any): Control {\n        const /** @type {?} */ e = getElement(element);\n        return e ? asType(e[Control._DATA_KEY], Control, true) : null;\n    }\n/**\n * @param {?} options\n * @return {?}\n */\ninitialize(options: any) {\n        if (options) {\n         //   this.beginUpdate();\n            copy(this, options);\n          //  this.endUpdate();\n        }\n    }\n/**\n * @return {?}\n */\nget hostElement(): HTMLElement {\n        return this._e;\n    }\n/**\n * @return {?}\n */\nget isTouching(): boolean {\n        return Control._touching;\n    }\n/**\n * @return {?}\n */\n_updateFocusState() {\n\n        // use a timeOut since Chrome and FF sometimes move the focus to the body\n        // before moving it to the new focused element\n        setTimeout(() => {\n\n            // update state for this control\n            const /** @type {?} */ focus = this.containsFocus();\n            if (focus != this._focus) {\n                this._focus = focus;\n                if (focus) {\n                    this.onGotFocus();\n                } else {\n                    this.onLostFocus();\n                }\n                toggleClass(this._e, 'wj-state-focused', focus);\n            }\n\n            // update state for any parent controls as well\n            if (this._e) {\n                for (let /** @type {?} */ e = this._e.parentElement; e; e = e.parentElement) {\n                    const /** @type {?} */ ctl = Control.getControl(e);\n                    if (ctl) {\n                        ctl._updateFocusState();\n                        break;\n                    }\n                }\n            }\n        });\n    }\n/**\n * @return {?}\n */\ncontainsFocus(): boolean {\n\n        // test for disposed controls\n        if (!this._e) {\n            return false;\n        }\n\n        // scan child controls (they may have popups, TFS 112676)\n        const /** @type {?} */ c = this._e.getElementsByClassName('wj-control');\n        for (let /** @type {?} */ i = 0; i < c.length; i++) {\n            const /** @type {?} */ ctl = Control.getControl(c[i]);\n            if (ctl && ctl != this && ctl.containsFocus()) {\n                return true;\n            }\n        }\n\n        // check for actual HTML containment\n        return contains(this._e, /** @type {?} */(( <HTMLElement>document.activeElement)));\n    }\n/**\n * Occurs when the control gets the focus.\n */\ngotFocus = new Event();\n/**\n * Raises the \\@see:gotFocus event.\n * @param {?=} e\n * @return {?}\n */\nonGotFocus(e?: EventArgs) {\n        this.gotFocus.raise(this, e);\n    }\n/**\n * Occurs when the control loses the focus.\n */\nlostFocus = new Event();\n/**\n * Raises the \\@see:lostFocus event.\n * @param {?=} e\n * @return {?}\n */\nonLostFocus(e?: EventArgs) {\n        this.lostFocus.raise(this, e);\n    }\n}\n\nfunction Control_tsickle_Closure_declarations() {\n/** @type {?} */\nControl._DATA_KEY;\n/** @type {?} */\nControl._REFRESH_INTERVAL;\n/** @type {?} */\nControl._wme;\n/** @type {?} */\nControl._touching;\n/** @type {?} */\nControl.prototype._focus;\n/** @type {?} */\nControl.prototype._updating;\n/** @type {?} */\nControl.prototype._fullUpdate;\n/** @type {?} */\nControl.prototype._toInv;\n/** @type {?} */\nControl.prototype._szCtl;\n/** @type {?} */\nControl.prototype._e;\n/** @type {?} */\nControl.prototype._orgOuter;\n/** @type {?} */\nControl.prototype._orgInner;\n/** @type {?} */\nControl.prototype._listeners;\n/** @type {?} */\nControl.prototype._orgTag;\n/** @type {?} */\nControl.prototype._orgAtts;\n/**\n * Occurs when the control gets the focus.\n * @type {?}\n */\nControl.prototype.gotFocus;\n/**\n * Occurs when the control loses the focus.\n * @type {?}\n */\nControl.prototype.lostFocus;\n}\n\n","\nimport {asFunction} from '../core/index';\nimport {EventHandler} from './EventHandler';\nimport {IEventHandler} from './IEventHandler';\nimport {EventArgs} from '../eventArgs/EventArgs';\n/**\n * Represents an event.\n * \n * Wijmo events are similar to .NET events. Any class may define events by\n * declaring them as fields. Any class may subscribe to events using the\n * event's \\@see:addHandler method and unsubscribe using the \\@see:removeHandler\n * method.\n * \n * Wijmo event handlers take two parameters: <i>sender</i> and <i>args</i>.\n * The first is the object that raised the event, and the second is an object\n * that contains the event parameters.\n * \n * Classes that define events follow the .NET pattern where for every event\n * there is an <i>on[EVENTNAME]</i> method that raises the event. This pattern\n * allows derived classes to override the <i>on[EVENTNAME]</i> method and\n * handle the event before and/or after the base class raises the event.\n * Derived classes may even suppress the event by not calling the base class\n * implementation.\n * \n * For example, the TypeScript code below overrides the <b>onValueChanged</b>\n * event for a control to perform some processing before and after the\n * <b>valueChanged</b> event fires:\n * <pre>\n *   // override base class\n *   onValueChanged(e: EventArgs) {\n *   // execute some code before the event fires\n *   console.log('about to fire valueChanged');\n *   // optionally, call base class to fire the event\n *   super.onValueChanged(e);\n *   // execute some code after the event fired\n *   console.log('valueChanged event just fired');\n * }\n * </pre>\n * @deprecated\n */\nexport class Event {\nprivate _handlers: EventHandler[] = [];\n/**\n * @deprecated\n */\nconstructor(){\n\n    }\n/**\n * Adds a handler to this event.\n * \n * @deprecated\n * @param {?} handler Function invoked when the event is raised.\n * @param {?=} self Object that defines the event handler\n * (accessible as 'this' from the handler code).\n * @return {?}\n */\naddHandler(handler: IEventHandler, self?: any) {\n        asFunction(handler);\n        this._handlers.push(new EventHandler(handler, self));\n    }\n/**\n * Removes a handler from this event.\n * \n * @deprecated\n * @param {?} handler Function invoked when the event is raised.\n * @param {?=} self Object that defines the event handler (accessible as 'this' from the handler code).\n * @return {?}\n */\nremoveHandler(handler: IEventHandler, self?: any) {\n        asFunction(handler);\n        for (let /** @type {?} */ i = 0; i < this._handlers.length; i++) {\n            const /** @type {?} */ l = this._handlers[i];\n            if (l.handler == handler || handler == null) {\n                if (l.self == self || self == null) {\n                    this._handlers.splice(i, 1);\n                    if (handler && self) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n/**\n * Removes all handlers associated with this event.\n * @deprecated\n * @return {?}\n */\nremoveAllHandlers() {\n        this._handlers.length = 0;\n    }\n/**\n * Raises this event, causing all associated handlers to be invoked.\n * \n * @deprecated use EventEmitter.emit() instead\n * @param {?} sender Source object.\n * @param {?=} args Event parameters.\n * @return {?}\n */\nraise(sender: any, args = EventArgs.empty) {\n        for (let /** @type {?} */ i = 0; i < this._handlers.length; i++) {\n            const /** @type {?} */ l = this._handlers[i];\n            l.handler.call(l.self, sender, args);\n        }\n    }\n/**\n * Gets a value that indicates whether this event has any handlers.\n * @deprecated\n * @return {?}\n */\nget hasHandlers(): boolean {\n        return this._handlers.length > 0;\n    }\n}\n\nfunction Event_tsickle_Closure_declarations() {\n/** @type {?} */\nEvent.prototype._handlers;\n}\n\n","/*\n * Represents an event handler (private class)\n */\n\nimport {IEventHandler} from './IEventHandler';\nexport class EventHandler {\n    handler: IEventHandler;\n    self: any;\n/**\n * @param {?} handler\n * @param {?} self\n */\nconstructor(handler: IEventHandler, self: any) {\n        this.handler = handler;\n        this.self = self;\n    }\n}\n\nfunction EventHandler_tsickle_Closure_declarations() {\n/** @type {?} */\nEventHandler.prototype.handler;\n/** @type {?} */\nEventHandler.prototype.self;\n}\n","\n/**\n * Static class that provides utility methods for clipboard operations.\n * \n * The \\@see:Clipboard class provides static \\@see:copy and \\@see:paste methods\n * that can be used by controls to customize the clipboard content during\n * clipboard operations.\n * \n * For example, the code below shows how a control could intercept the\n * clipboard shortcut keys and provide custom clipboard handling:\n * \n * <pre>\n * rootElement.addEventListener('keydown', function(e) {\n *   // copy: ctrl+c or ctrl+Insert\n *   if (e.ctrlKey && (e.keyCode == 67 || e.keyCode == 45)) {\n *     var text = this.getClipString();\n *     Clipboard.copy(text);\n *     return;\n *   }\n *   // paste: ctrl+v or shift+Insert\n *   if ((e.ctrlKey && e.keyCode == 86) || (e.shiftKey && e.keyCode == 45)) {\n *     Clipboard.paste(function (text) {\n *       this.setClipString(text);\n *     });\n *     return;\n *   }\n * });</pre>\n */\nexport class Clipboard {\n/**\n * Copies a string to the clipboard.\n * \n * This method only works if invoked immediately after the user\n * pressed a clipboard copy command (such as ctrl+c).\n * \n * @param {?} text Text to copy to the clipboard.\n * @return {?}\n */\nstatic copy(text: string) {\n        Clipboard._copyPasteInternal(text);\n    }\n/**\n * Gets a string from the clipboard.\n * \n * This method only works if invoked immediately after the user\n * pressed a clipboard paste command (such as ctrl+v).\n * \n * @param {?} callback Function called when the clipboard content\n * has been retrieved. The function receives the clipboard\n * content as a parameter.\n * @return {?}\n */\nstatic paste(callback: Function) {\n        Clipboard._copyPasteInternal(callback);\n    }\n/**\n * @param {?} textOrCallback\n * @return {?}\n */\nprivate static _copyPasteInternal(textOrCallback: any) {\n\n        // get active element to restore later\n        const /** @type {?} */ activeElement = /** @type {?} */(( <HTMLElement>document.activeElement));\n                // find parent for temporary input element (so it works with jQuery dialogs...)\n                let /** @type {?} */ parent  = activeElement;\n                for (; parent; parent = parent.parentElement) {\n                    if (parent == document.body || parent.getAttribute('aria-describedby') == 'dialog') {\n                        break;\n                    }\n                }\n\n        // create hidden input element, append it to document\n        const /** @type {?} */ el = document.createElement('textarea');\n        el.style.position = 'fixed';\n        el.style.opacity = '0';\n                parent.appendChild(el);\n\n        // initialize text and give element the focus\n        if (typeof (textOrCallback) == 'string') {\n            el.value = textOrCallback;\n        }\n        el.select();\n\n        // when the clipboard operation is done, remove element, restore focus\n        // and invoke the paste callback\n        setTimeout(function () {\n            const /** @type {?} */ text = el.value;\n                        parent.removeChild(el);\n            activeElement.focus();\n            if (typeof (textOrCallback) == 'function') {\n                textOrCallback(text);\n            }\n        }, 100); // Apple needs extra timeOut\n    }\n}\n","\n/**\n * Provides binding to complex properties (e.g. 'customer.address.city')\n */\nexport class Binding {\n    _path: string;\n    _parts: any[];\n    _key: string;\n/**\n * Initializes a new instance of a \\@see:Binding object.\n * \n * @param {?} path Name of the property to bind to.\n */\nconstructor(path: string) {\n        this.path = path;\n    }\n/**\n * Gets or sets the path for the binding.\n * \n * In the simplest case, the path is the name of the property of the source\n * object to use for the binding (e.g. 'street').\n * \n * Subproperties of a property can be specified by a syntax similar to that\n * used in JavaScript (e.g. 'address.street').\n * @return {?}\n */\nget path(): string {\n        return this._path;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset path(value: string) {\n        this._path = value;\n        this._parts = value.split('.'); // e.g. 'customer.balance'\n        for (let /** @type {?} */ i = 0; i < this._parts.length; i++) {\n            const /** @type {?} */ part = this._parts[i], /** @type {?} */\n                  ib   = part.indexOf('['); // e.g. 'customer.balance[0]'\n            if (ib > -1) {\n                this._parts[i] = part.substr(0, ib);\n                this._parts.splice(++i, 0, parseInt(part.substr(ib + 1)));\n            }\n        }\n        this._key = this._parts.length == 1 ? this._parts[0] : null;\n    }\n/**\n * Gets the binding value for a given object.\n * \n * If the object does not contain the property specified by the\n * binding \\@see:path, the method returns null.\n * \n * @param {?} object The object that contains the data to be retrieved.\n * @return {?}\n */\ngetValue(object: any): any {\n        if (object) {\n\n            // optimize common case\n            if (this._key) {\n                return object[this._key];\n            }\n\n            // handle case where property name has a decimal point (TFS 139176)\n            if (this._path in object) {\n                return object[this._path];\n            }\n\n            // traverse path for complex properties\n            for (let /** @type {?} */ i = 0; i < this._parts.length && object; i++) {\n                object = object[this._parts[i]];\n            }\n        }\n        return object;\n    }\n/**\n * Sets the binding value on a given object.\n * \n * If the object does not contain the property specified by the\n * binding \\@see:path, the value is not set.\n * \n * @param {?} object The object that contains the data to be set.\n * @param {?} value Data value to set.\n * @return {?}\n */\nsetValue(object: any, value: any) {\n        if (object) {\n\n            // handle simple cases (and cases where the property name has a decimal point)\n            if (this._path in object) {\n                object[this._path] = value;\n                return;\n            }\n\n            // traverse parts for complex properties\n            for (let /** @type {?} */ i = 0; i < this._parts.length - 1; i++) {\n                object = object[this._parts[i]];\n                if (object == null) {\n                    return;\n                }\n            }\n\n            // make the assignment\n            object[this._parts[this._parts.length - 1]] = value;\n        }\n    }\n}\n\nfunction Binding_tsickle_Closure_declarations() {\n/** @type {?} */\nBinding.prototype._path;\n/** @type {?} */\nBinding.prototype._parts;\n/** @type {?} */\nBinding.prototype._key;\n}\n\n","import {asNumber, assert} from '../../util/util';\nimport {Point} from './point';\n/**\n * Class that represents a rectangle (with left, top, width, and height).\n */\nexport class Rectangle {\n/**\n * Gets or sets the left coordinate of this \\@see:Rectangle.\n */\nx: number;\n/**\n * Gets or sets the top coordinate of this \\@see:Rectangle.\n */\ny: number;\n/**\n * Gets or sets the width of this \\@see:Rectangle.\n */\nwidth: number;\n/**\n * Gets or sets the height of this \\@see:Rectangle.\n */\nheight: number;\n/**\n * Initializes a new instance of a \\@see:Rectangle object.\n * \n * @param {?=} x Left coordinate of the new \\@see:Rectangle.\n * @param {?=} y Top coordinate of the new \\@see:Rectangle.\n * @param {?=} width Width of the new \\@see:Rectangle.\n * @param {?=} height Height of the new \\@see:Rectangle.\n */\nconstructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n        this.x      = asNumber(x);\n        this.y      = asNumber(y);\n        this.width  = asNumber(width);\n        this.height = asNumber(height);\n    }\n/**\n * The sum of the <code>y</code> and <code>height</code> properties.\n * @return {?}\n */\npublic get bottom(): number {\n        return this.y + this.height;\n    }\nprivate _bottomRight: Point;\n/**\n * The location of the Rectangle object's bottom-right corner, determined by\n * the values of the <code>right</code> and <code>bottom</code> properties.\n * @return {?}\n */\npublic get bottomRight(): Point {\n        if (this._bottomRight == null)\n            this._bottomRight = new Point();\n        this._bottomRight.x = this.right;\n        this._bottomRight.y = this.bottom;\n        return this._bottomRight;\n    }\n/**\n * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n * the <code>left</code> property of a Rectangle object has no effect on the\n * <code>y</code> and <code>height</code> properties. However it does affect\n * the <code>width</code> property, whereas changing the <code>x</code> value\n * does <i>not</i> affect the <code>width</code> property.\n * \n * <p>The value of the <code>left</code> property is equal to the value of\n * the <code>x</code> property.</p>\n * @return {?}\n */\npublic get left(): number {\n        return this.x;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set left(value: number) {\n        this.x = value;\n    }\n/**\n * The sum of the <code>x</code> and <code>width</code> properties.\n * @return {?}\n */\npublic get right(): number {\n        return this.x + this.width;\n    }\nprivate _size: Point;\n/**\n * The size of the Rectangle object, expressed as a Point object with the\n * values of the <code>width</code> and <code>height</code> properties.\n * @return {?}\n */\npublic get size(): Point {\n        if (this._size == null)\n            this._size = new Point();\n        this._size.x = this.width;\n        this._size.y = this.height;\n        return this._size;\n    }\n/**\n * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n * the <code>top</code> property of a Rectangle object has no effect on the\n * <code>x</code> and <code>width</code> properties. However it does affect\n * the <code>height</code> property, whereas changing the <code>y</code>\n * value does <i>not</i> affect the <code>height</code> property.\n * \n * <p>The value of the <code>top</code> property is equal to the value of the\n * <code>y</code> property.</p>\n * @return {?}\n */\npublic get top(): number {\n        return this.y;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set top(value: number) {\n        this.y = value;\n    }\nprivate _topLeft: Point;\n/**\n * The location of the Rectangle object's top-left corner, determined by the\n * <i>x</i> and <i>y</i> coordinates of the point.\n * @return {?}\n */\npublic get topLeft(): Point {\n        if (this._topLeft == null)\n            this._topLeft = new Point();\n        this._topLeft.x = this.x;\n        this._topLeft.y = this.y;\n        return this._topLeft;\n    }\n/**\n * Creates a copy of this \\@see:Rectangle.\n * @return {?}\n */\nclone(): Rectangle {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    }\n/**\n * Creates a \\@see:Rectangle from <b>ClientRect</b> or <b>SVGRect</b> objects.\n * \n * @param {?} rc Rectangle obtained by a call to the DOM's <b>getBoundingClientRect</b>\n * or <b>GetBoundingBox</b> methods.\n * @return {?}\n */\nstatic fromBoundingRect(rc: any): Rectangle {\n        if (rc.left != null) {\n            return new Rectangle(rc.left, rc.top, rc.width, rc.height);\n        } else if (rc.x != null) {\n            return new Rectangle(rc.x, rc.y, rc.width, rc.height);\n        } else {\n            assert(false, 'Invalid source rectangle.');\n        }\n    }\n/**\n * Gets a rectangle that represents the union of two rectangles.\n * \n * @param {?} rc1 First rectangle.\n * @param {?} rc2 Second rectangle.\n * @return {?}\n */\nstatic union(rc1: Rectangle, rc2: Rectangle): Rectangle {\n        const /** @type {?} */ x      = Math.min(rc1.x, rc2.x), /** @type {?} */\n              y      = Math.min(rc1.y, rc2.y), /** @type {?} */\n              right  = Math.max(rc1.right, rc2.right), /** @type {?} */\n              bottom = Math.max(rc1.bottom, rc2.bottom);\n        return new Rectangle(x, y, right - x, bottom - y);\n    }\n/**\n * Determines whether the rectangle contains a given point or rectangle.\n * \n * @param {?} pt The \\@see:Point or \\@see:Rectangle to ckeck.\n * @return {?}\n */\ncontains(pt: any): boolean {\n        if (pt instanceof Point) {\n            return this.containsPoint( /** @type {?} */((<Point>pt)));\n        } else if (pt instanceof Rectangle) {\n            return this.containsRect( /** @type {?} */((<Rectangle>pt)));\n        } else {\n            assert(false, 'Point or Rect expected.');\n        }\n    }\n/**\n * Determines whether the specified point is contained within the rectangular\n * region defined by this Rectangle object. This method is similar to the\n * <code>Rectangle.contains()</code> method, except that it takes a Point\n * object as a parameter.\n * \n * @param {?} point The point, as represented by its <i>x</i> and <i>y</i>\n *              coordinates.\n * @return {?} A value of <code>true</code> if the Rectangle object contains the\n *         specified point; otherwise <code>false</code>.\n */\npublic containsPoint(point: Point): boolean {\n        return (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n    }\n/**\n * Determines whether the Rectangle object specified by the <code>rect</code>\n * parameter is contained within this Rectangle object. A Rectangle object is\n * said to contain another if the second Rectangle object falls entirely\n * within the boundaries of the first.\n * \n * @param {?} rect The Rectangle object being checked.\n * @return {?} A value of <code>true</code> if the Rectangle object that you\n *         specify is contained by this Rectangle object; otherwise\n *         <code>false</code>.\n */\npublic containsRect(rect: Rectangle): boolean {\n        return (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n    }\n/**\n * Increases the size of the Rectangle object by the specified amounts, in\n * pixels. The center point of the Rectangle object stays the same, and its\n * size increases to the left and right by the <code>dx</code> value, and to\n * the top and the bottom by the <code>dy</code> value.\n * \n * @param {?} dx The value to be added to the left and the right of the Rectangle\n *           object. The following equation is used to calculate the new\n *           width and position of the rectangle:\n * @param {?} dy The value to be added to the top and the bottom of the\n *           Rectangle. The following equation is used to calculate the new\n *           height and position of the rectangle:\n * @return {?}\n */\npublic inflate(dx: number, dy: number): void {\n        this.x -= dx;\n        this.y -= dy;\n        this.width += 2 * dx;\n        this.height += 2 * dy;\n    }\n/**\n * Increases the size of the Rectangle object. This method is similar to the\n * <code>Rectangle.inflate()</code> method except it takes a Point object as\n * a parameter.\n * \n * <p>The following two code examples give the same result:</p>\n * \n * @param {?} point The <code>x</code> property of this Point object is used to\n *              increase the horizontal dimension of the Rectangle object.\n *              The <code>y</code> property is used to increase the vertical\n *              dimension of the Rectangle object.\n * @return {?}\n */\npublic inflatePoint(point: Point): void {\n        this.x -= point.x;\n        this.y -= point.y;\n        this.width += 2 * point.x;\n        this.height += 2 * point.y;\n    }\n/**\n * If the Rectangle object specified in the <code>toIntersect</code>\n * parameter intersects with this Rectangle object, returns the area of\n * intersection as a Rectangle object. If the rectangles do not intersect,\n * this method returns an empty Rectangle object with its properties set to\n * 0.\n * \n * @param {?} toIntersect The Rectangle object to compare against to see if it\n *                    intersects with this Rectangle object.\n * @return {?} A Rectangle object that equals the area of intersection. If the\n *         rectangles do not intersect, this method returns an empty\n *         Rectangle object; that is, a rectangle with its <code>x</code>,\n *         <code>y</code>, <code>width</code>, and <code>height</code>\n *         properties set to 0.\n */\npublic intersection(toIntersect: Rectangle): Rectangle {\n        let /** @type {?} */ x1: number = Math.max(this.x, toIntersect.x);\n        let /** @type {?} */ x2: number = Math.min(this.x + this.width, toIntersect.x + toIntersect.width);\n        let /** @type {?} */ y1: number = Math.max(this.y, toIntersect.x);\n        let /** @type {?} */ y2: number = Math.min(this.y + this.height, toIntersect.x + toIntersect.height);\n        if (x2 >= x1 && y2 >= y1) {\n            return new Rectangle(x1, y1, x2 - x1, y2 - y1);\n        }\n        return new Rectangle;\n    }\n/**\n * Determines whether the object specified in the <code>toIntersect</code>\n * parameter intersects with this Rectangle object. This method checks the\n * <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the specified Rectangle object to see if\n * it intersects with this Rectangle object.\n * \n * @param {?} toIntersect The Rectangle object to compare against this Rectangle\n *                    object.\n * @return {?} A value of <code>true</code> if the specified object intersects\n *         with this Rectangle object; otherwise <code>false</code>.\n */\npublic intersects(toIntersect: Rectangle): boolean {\n        return (\n            this.x + this.width > toIntersect.x\n            && this.x < toIntersect.x + toIntersect.width\n            && this.y + this.height > toIntersect.y\n            && this.y < toIntersect.y + toIntersect.height\n        );\n    }\n/**\n * Determines whether or not this Rectangle object is empty.\n * \n * @return {?} A value of <code>true</code> if the Rectangle object's width or\n *         height is less than or equal to 0; otherwise <code>false</code>.\n */\npublic isEmpty(): boolean {\n        return (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n    }\n/**\n * Adjusts the location of the Rectangle object, as determined by its\n * top-left corner, by the specified amounts.\n * \n * @param {?} dx Moves the <i>x</i> value of the Rectangle object by this amount.\n * @param {?} dy Moves the <i>y</i> value of the Rectangle object by this amount.\n * @return {?}\n */\npublic offset(dx: number, dy: number): void {\n        this.x += dx;\n        this.y += dy;\n    }\n/**\n * Adjusts the location of the Rectangle object using a Point object as a\n * parameter. This method is similar to the <code>Rectangle.offset()</code>\n * method, except that it takes a Point object as a parameter.\n * \n * @param {?} point A Point object to use to offset this Rectangle object.\n * @return {?}\n */\npublic offsetPoint(point: Point): void {\n        this.x += point.x;\n        this.y += point.y;\n    }\n/**\n * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n * empty if its width or height is less than or equal to 0.\n * \n * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n * <code>width</code>, and <code>height</code> properties to 0.</p>\n * \n * @return {?}\n */\npublic setEmpty(): void {\n        this.x      = 0;\n        this.y      = 0;\n        this.width  = 0;\n        this.height = 0;\n    }\n}\n\nfunction Rectangle_tsickle_Closure_declarations() {\n/**\n * Gets or sets the left coordinate of this \\@see:Rectangle.\n * @type {?}\n */\nRectangle.prototype.x;\n/**\n * Gets or sets the top coordinate of this \\@see:Rectangle.\n * @type {?}\n */\nRectangle.prototype.y;\n/**\n * Gets or sets the width of this \\@see:Rectangle.\n * @type {?}\n */\nRectangle.prototype.width;\n/**\n * Gets or sets the height of this \\@see:Rectangle.\n * @type {?}\n */\nRectangle.prototype.height;\n/** @type {?} */\nRectangle.prototype._bottomRight;\n/** @type {?} */\nRectangle.prototype._size;\n/** @type {?} */\nRectangle.prototype._topLeft;\n}\n\n","import {asNumber, clamp, asType, isString, assert, asString} from '../../util/util';\n/**\n * Color class.\n * \n * The \\@see:Color class parses colors specified as CSS strings and exposes\n * their red, green, blue, and alpha channels as read-write properties.\n * \n * The \\@see:Color class also provides \\@see:fromHsb and \\@see:fromHsl methods\n * for creating colors using the HSB and HSL color models instead of RGB,\n * as well as \\@see:getHsb and \\@see:getHsl methods for retrieving the color\n * components using those color models.\n * \n * Finally, the \\@see:Color class provides an \\@see:interpolate method that\n * creates colors by interpolating between two colors using the HSL model.\n * This method is especially useful for creating color animations with the\n * \\@see:animate method.\n */\nexport class Color {\n\n    // fields\n    _r = 0;\n    _g = 0;\n    _b = 0;\n    _a = 1;\n/**\n * Initializes a new \\@see:Color from a CSS color specification.\n * \n * @param {?} color CSS color specification.\n */\nconstructor(color: string) {\n        if (color) {\n            this._parse(color);\n        }\n    }\n/**\n * Gets or sets the red component of this \\@see:Color,\n * in a range from 0 to 255.\n * @return {?}\n */\nget r(): number {\n        return this._r;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset r(value: number) {\n        this._r = clamp(asNumber(value), 0, 255);\n    }\n/**\n * Gets or sets the green component of this \\@see:Color,\n * in a range from 0 to 255.\n * @return {?}\n */\nget g(): number {\n        return this._g;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset g(value: number) {\n        this._g = clamp(asNumber(value), 0, 255);\n    }\n/**\n * Gets or sets the blue component of this \\@see:Color,\n * in a range from 0 to 255.\n * @return {?}\n */\nget b(): number {\n        return this._b;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset b(value: number) {\n        this._b = clamp(asNumber(value), 0, 255);\n    }\n/**\n * Gets or sets the alpha component of this \\@see:Color,\n * in a range from 0 to 1 (zero is transparent, one is solid).\n * @return {?}\n */\nget a(): number {\n        return this._a;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset a(value: number) {\n        this._a = clamp(asNumber(value), 0, 1);\n    }\n/**\n * Returns true if a \\@see:Color has the same value as this \\@see:Color.\n * \n * @param {?} clr \\@see:Color to compare to this \\@see:Color.\n * @return {?}\n */\nequals(clr: Color): boolean {\n        return (clr instanceof Color) &&\n            this.r == clr.r && this.g == clr.g && this.b == clr.b &&\n            this.a == clr.a;\n    }\n/**\n * Gets a string representation of this \\@see:Color.\n * @return {?}\n */\ntoString(): string {\n        const /** @type {?} */ a = Math.round(this.a * 100);\n        return a > 99\n            ? '#' + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1)\n                        : 'rgba(' + this.r + ',' + this.g + ',' + this.b + ',' + (a / 100) +')';\n    }\n/**\n * Creates a new \\@see:Color using the specified RGBA color channel values.\n * \n * @param {?} r Value for the red channel, from 0 to 255.\n * @param {?} g Value for the green channel, from 0 to 255.\n * @param {?} b Value for the blue channel, from 0 to 255.\n * @param {?=} a Value for the alpha channel, from 0 to 1.\n * @return {?}\n */\nstatic fromRgba(r: number, g: number, b: number, a = 1): Color {\n        const /** @type {?} */ c     = new Color(null);\n                c.r = Math.round(clamp(asNumber(r), 0, 255));\n                c.g = Math.round(clamp(asNumber(g), 0, 255));\n                c.b = Math.round(clamp(asNumber(b), 0, 255));\n                c.a = clamp(asNumber(a), 0, 1);\n        return c;\n    }\n/**\n * Creates a new \\@see:Color using the specified HSB values.\n * \n * @param {?} h Hue value, from 0 to 1.\n * @param {?} s Saturation value, from 0 to 1.\n * @param {?} b Brightness value, from 0 to 1.\n * @param {?=} a Alpha value, from 0 to 1.\n * @return {?}\n */\nstatic fromHsb(h: number, s: number, b: number, a = 1): Color {\n            const /** @type {?} */ rgb = Color._hsbToRgb(clamp(asNumber(h), 0, 1), clamp(asNumber(s), 0, 1), clamp(asNumber(b), 0, 1));\n            return Color.fromRgba(rgb[0], rgb[1], rgb[2], a);\n    }\n/**\n * Creates a new \\@see:Color using the specified HSL values.\n * \n * @param {?} h Hue value, from 0 to 1.\n * @param {?} s Saturation value, from 0 to 1.\n * @param {?} l Lightness value, from 0 to 1.\n * @param {?=} a Alpha value, from 0 to 1.\n * @return {?}\n */\nstatic fromHsl(h: number, s: number, l: number, a = 1): Color {\n            const /** @type {?} */ rgb = Color._hslToRgb(clamp(asNumber(h), 0, 1), clamp(asNumber(s), 0, 1), clamp(asNumber(l), 0, 1));\n        return Color.fromRgba(rgb[0], rgb[1], rgb[2], a);\n    }\n/**\n * Creates a new \\@see:Color from a CSS color string.\n * \n * @param {?} value String containing a CSS color specification.\n * @return {?} A new \\@see:Color, or null if the string cannot be parsed into a color.\n */\nstatic fromString(value: string): Color {\n        const /** @type {?} */ c = new Color(null);\n        return c._parse(asString(value)) ? c : null;\n    }\n/**\n * Gets an array with this color's HSB components.\n * @return {?}\n */\ngetHsb(): number[] {\n        return Color._rgbToHsb(this.r, this.g, this.b)\n    }\n/**\n * Gets an array with this color's HSL components.\n * @return {?}\n */\ngetHsl(): number[] {\n        return Color._rgbToHsl(this.r, this.g, this.b)\n    }\n/**\n * Creates a \\@see:Color by interpolating between two colors.\n * \n * @param {?} c1 First color.\n * @param {?} c2 Second color.\n * @param {?} pct Value between zero and one that determines how close the\n * interpolation should be to the second color.\n * @return {?}\n */\nstatic interpolate(c1: Color, c2: Color, pct: number): Color {\n\n        // sanity\n        pct = clamp(asNumber(pct), 0, 1);\n\n        // convert rgb to hsl\n        const /** @type {?} */ h1 = Color._rgbToHsl(c1.r, c1.g, c1.b), /** @type {?} */\n              h2 = Color._rgbToHsl(c2.r, c2.g, c2.b);\n\n        // interpolate\n        const /** @type {?} */ qct   = 1 - pct, /** @type {?} */\n              alpha = c1.a * qct + c2.a * pct, /** @type {?} */\n              h3    = [\n                  h1[0] * qct + h2[0] * pct,\n                  h1[1] * qct + h2[1] * pct,\n                  h1[2] * qct + h2[2] * pct\n              ];\n\n        // convert back to rgb\n        const /** @type {?} */ rgb = Color._hslToRgb(h3[0], h3[1], h3[2]);\n        return Color.fromRgba(rgb[0], rgb[1], rgb[2], alpha);\n    }\n/**\n * Gets the closest opaque color to a given color.\n * \n * @param {?} c \\@see:Color to be converted to an opaque color\n * (the color may also be specified as a string).\n * @param {?=} bkg Background color to use when removing the transparency\n * (defaults to white).\n * @return {?}\n */\nstatic toOpaque(c: any, bkg?: any): Color {\n\n            // get color\n            c = isString(c) ? Color.fromString(c) : asType(c, Color);\n\n            // no alpha? no work\n            if (c.a == 1) return c;\n\n            // get background\n            bkg = bkg == null ? Color.fromRgba(255, 255, 255, 1) :\n                  isString(bkg) ? Color.fromString(bkg) : /** @type {?} */((\n                  <Color>asType(bkg, Color)));\n\n            // interpolate in RGB space\n            const /** @type {?} */ p = c.a, /** @type {?} */ q = 1 - p;\n            return Color.fromRgba(c.r * p + bkg.r * q, c.g * p + bkg.g * q, c.b * p + bkg.b * q);\n        }\n/**\n * @param {?} color\n * @return {?}\n */\n_parse(color: string): boolean {\n\n        // let browser parse stuff we don't handle\n        color = color.toLowerCase();\n        if (color && color.indexOf('#') != 0 && color.indexOf('rgb') != 0 && color.indexOf('hsl') != 0) {\n            const /** @type {?} */ e       = document.createElement('div');\n            e.style.color = color;\n            let /** @type {?} */ cc        = e.style.color;\n            if (cc == color) {                              // same value?\n                cc = window.getComputedStyle(e).color;      // then get computed style\n                if (!cc) {                                  // not yet? (Chrome/named colors)\n                    document.body.appendChild(e);           // then add element to document\n                    cc = window.getComputedStyle(e).color;  // and try again\n                    document.body.removeChild(e);\n                }\n            }\n            color = cc.toLowerCase();\n        }\n\n        // parse #RGB/#RRGGBB\n        if (color.indexOf('#') == 0) {\n            if (color.length == 4) {\n                this.r = parseInt(color[1] + color[1], 16);\n                this.g = parseInt(color[2] + color[2], 16);\n                this.b = parseInt(color[3] + color[3], 16);\n                this.a = 1;\n                return true;\n            } else if (color.length == 7) {\n                this.r = parseInt(color.substr(1, 2), 16);\n                this.g = parseInt(color.substr(3, 2), 16);\n                this.b = parseInt(color.substr(5, 2), 16);\n                this.a = 1;\n                return true;\n            }\n            return false;\n        }\n\n        // parse rgb/rgba\n        if (color.indexOf('rgb') == 0) {\n            var /** @type {?} */ op = color.indexOf('('), /** @type {?} */\n                ep = color.indexOf(')');\n            if (op > -1 && ep > -1) {\n                var /** @type {?} */ p = color.substr(op + 1, ep - (op + 1)).split(',');\n                if (p.length > 2) {\n                    this.r = parseInt(p[0]);\n                    this.g = parseInt(p[1]);\n                    this.b = parseInt(p[2]);\n                    this.a = p.length > 3 ? parseFloat(p[3]) : 1;\n                    return true;\n                }\n            }\n        }\n\n        // parse hsl/hsla\n        if (color.indexOf('hsl') == 0) {\n            var /** @type {?} */ op = color.indexOf('('), /** @type {?} */\n                ep = color.indexOf(')');\n            if (op > -1 && ep > -1) {\n                var /** @type {?} */ p = color.substr(op + 1, ep - (op + 1)).split(',');\n                if (p.length > 2) {\n                    const /** @type {?} */ h = parseInt(p[0]) / 360;\n                    let /** @type {?} */ s = parseInt(p[1]), /** @type {?} */\n                          l = parseInt(p[2]);\n                    if (p[1].indexOf('%') > -1) s /= 100;\n                    if (p[2].indexOf('%') > -1) l /= 100;\n                    const /** @type {?} */ rgb = Color._hslToRgb(h, s, l);\n                    this.r = rgb[0];\n                    this.g = rgb[1];\n                    this.b = rgb[2];\n                    this.a = p.length > 3 ? parseFloat(p[3]) : 1;\n                    return true;\n                }\n            }\n        }\n\n        // failed to parse\n        return false;\n    }\n/**\n * Converts an HSL color value to RGB.\n * \n * @param {?} h The hue (between zero and one).\n * @param {?} s The saturation (between zero and one).\n * @param {?} l The lightness (between zero and one).\n * @return {?} An array containing the R, G, and B values (between zero and 255).\n */\nstatic _hslToRgb(h: number, s: number, l: number): number[] {\n        assert(h >= 0 && h <= 1 && s >= 0 && s <= 1 && l >= 0 && l <= 1, 'bad HSL values');\n        let /** @type {?} */ r: number, /** @type {?} */ g: number, /** @type {?} */ b: number;\n        if (s == 0) {\n            r = g = b = l; // achromatic\n        } else {\n            const /** @type {?} */ q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const /** @type {?} */ p = 2 * l - q;\n            r       = Color._hue2rgb(p, q, h + 1 / 3);\n            g       = Color._hue2rgb(p, q, h);\n            b       = Color._hue2rgb(p, q, h - 1 / 3);\n        }\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n/**\n * @param {?} p\n * @param {?} q\n * @param {?} t\n * @return {?}\n */\nstatic _hue2rgb(p: number, q: number, t: number): number {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n        return p;\n    }\n/**\n * Converts an RGB color value to HSL.\n * \n * @param {?} r The value of the red channel (between zero and 255).\n * @param {?} g The value of the green channel (between zero and 255).\n * @param {?} b The value of the blue channel (between zero and 255).\n * @return {?} An array containing the H, S, and L values (between zero and one).\n */\nstatic _rgbToHsl(r: number, g: number, b: number): number[] {\n        assert(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255, 'bad RGB values');\n        r /= 255, g /= 255, b /= 255;\n        const /** @type {?} */ max = Math.max(r, g, b), /** @type {?} */\n              min = Math.min(r, g, b);\n        let /** @type {?} */ h, /** @type {?} */ s;\n        const /** @type {?} */ l   = (max + min) / 2;\n        if (max == min) {\n            h = s = 0;\n        } else {\n            const /** @type {?} */ d = max - min;\n            s       = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                    h = (r - g) / d + 4;\n                    break;\n            }\n            h /= 6;\n        }\n        return [h, s, l];\n    }\n/**\n * Converts an RGB color value to HSB.\n * \n * @param {?} r The value of the red channel (between zero and 255).\n * @param {?} g The value of the green channel (between zero and 255).\n * @param {?} b The value of the blue channel (between zero and 255).\n * @return {?} An array containing the H, S, and B values (between zero and one).\n */\nstatic _rgbToHsb(r: number, g: number, b: number): number[]{\n        assert(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255, 'bad RGB values');\n        const /** @type {?} */ hsl = Color._rgbToHsl(r, g, b);\n        return Color._hslToHsb(hsl[0], hsl[1], hsl[2]);\n    }\n/**\n * Converts an HSB color value to RGB.\n * \n * @param {?} h The hue (between zero and one).\n * @param {?} s The saturation (between zero and one).\n * @param {?} b The brightness (between zero and one).\n * @return {?} An array containing the R, G, and B values (between zero and 255).\n */\nstatic _hsbToRgb(h: number, s: number, b: number): number[] {\n        //assert(h >= 0 && h <= 1 && s >= 0 && s <= 1 && b >= 0 && b <= 1, 'bad HSB values');\n        const /** @type {?} */ hsl = Color._hsbToHsl(h, s, b);\n        return Color._hslToRgb(hsl[0], hsl[1], hsl[2]);\n    }\n/**\n * Converts an HSB color value to HSL.\n * \n * @param {?} h The hue (between zero and one).\n * @param {?} s The saturation (between zero and one).\n * @param {?} b The brightness (between zero and one).\n * @return {?} An array containing the H, S, and L values (between zero and one).\n */\nstatic _hsbToHsl(h: number, s: number, b: number): number[]{\n        // http://codeitdown.com/hsl-hsb-hsv-color/\n        assert(h >= 0 && h <= 1 && s >= 0 && s <= 1 && b >= 0 && b <= 1, 'bad HSB values');\n        const /** @type {?} */ ll  = clamp(b * (2 - s) / 2, 0, 1), /** @type {?} */\n              div = 1 - Math.abs(2 * ll - 1), /** @type {?} */\n              ss  = clamp(div > 0 ? b * s / div : s/*0*/, 0, 1);\n        assert(!isNaN(ll) && !isNaN(ss), 'bad conversion to HSL');\n        return [h, ss, ll];\n    }\n/**\n * Converts an HSL color value to HSB.\n * \n * @param {?} h The hue (between zero and one).\n * @param {?} s The saturation (between zero and one).\n * @param {?} l The lightness (between zero and one).\n * @return {?} An array containing the H, S, and B values (between zero and one).\n */\nstatic _hslToHsb(h: number, s: number, l: number): number[] {\n        // http://codeitdown.com/hsl-hsb-hsv-color/\n        assert(h >= 0 && h <= 1 && s >= 0 && s <= 1 && l >= 0 && l <= 1, 'bad HSL values');\n        const /** @type {?} */ bb = clamp(l == 1 ? 1 : (2 * l + s * (1 - Math.abs(2 * l - 1))) / 2, 0, 1);\n        const /** @type {?} */ ss = clamp(bb > 0 ? 2 * (bb - l) / bb : s/*0*/, 0, 1);\n        assert(!isNaN(bb) && !isNaN(ss), 'bad conversion to HSB');\n        return [h, ss, bb];\n    }\n}\n\nfunction Color_tsickle_Closure_declarations() {\n/** @type {?} */\nColor.prototype._r;\n/** @type {?} */\nColor.prototype._g;\n/** @type {?} */\nColor.prototype._b;\n/** @type {?} */\nColor.prototype._a;\n}\n\n","import {asDate, asNumber, asString, isDate, isString, isNumber, toFixed} from '../util/util';\nimport {culture} from './Localization';\nimport {DateTime} from '../common/datetime/datetime';\n/**\n * Class that implements formatting and parsing of numbers and Dates.\n * \n * By default, \\@see:Globalize uses the American English culture.\n * To switch cultures, include the appropriate <b>wijmo.culture.*.js</b>\n * file after the wijmo files.\n */\nexport class Globalize {\n/**\n * Formats a number or a date.\n * \n * The format strings used with the \\@see:format function are similar to\n * the ones used by <b>Globalize.js</b> and by the .NET Globalization\n * library. The tables below contains links that describe the formats\n * available:\n * \n * <ul>\n * <li><a href=\"http://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx\">\n *      Standard Numeric Format Strings</a></li>\n * <li><a href=\"http://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx\">\n *      Standard Date and Time Format Strings</a></li>\n * <li><a href=\"http://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx\">\n *      Custom Date and Time Format Strings</a></li>\n * </ul>\n * \n * @param {?} value Number or Date to format (all other types are converted to strings).\n * @param {?} format Format string to use when formatting numbers or dates.\n * @param {?=} trim Whether to remove trailing zeros from numeric results.\n * @param {?=} truncate Whether to truncate the numeric values rather than round them.\n * @return {?} A string representation of the given value.\n */\nstatic format(value: any, format: string, trim?: boolean, truncate?: boolean): string {\n\n        // if a format was not provided, create one\n        if (!format) {\n            if (isNumber(value)) {\n                format = value == Math.round(value) ? 'n0' : 'n2';\n            }\n            else if (isDate(value)) {\n                format = 'd';\n            }\n        }\n\n        // format numbers and dates, convert others to string\n        if (isNumber(value)) {\n            return Globalize.formatNumber(value, format, trim, truncate);\n        } else if (isDate(value)) {\n            return Globalize.formatDate(value, format);\n        } else {\n            return value != null ? value.toString() : '';\n        }\n    }\n/**\n * Formats a number using the current culture.\n * \n * The \\@see:formatNumber method accepts most .NET-style\n * <a href=\"http://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx\">\n * Standard Numeric Format Strings</a>, except for the 'e' and 'x' formats\n * (scientific notation and hexadecimal) which are not supported.\n * \n * Numeric format strings takes the form <i>Axxccss</i>, where:\n * <ul>\n * <li>\n *  <i>A</i> is a single case-insensitive alphabetic character called the\n *  format specifier.</i>\n * <li>\n *  <i>xx</i> is an optional integer called the precision specifier.\n *  The precision specifier affects the number of digits in the result.</li>\n * <li>\n *  <i>cc</i> is an optional string used to override the currency symbol\n *  when formatting currency values. This is useful when formatting\n *  currency values for cultures different than the current default\n *  (for example, when formatting Euro or Yen values in applications\n *  that use the English culture).</li>\n * <li>\n *  <i>ss</i> is an optional string used to scale the number. If provided,\n *  it must consist of commas. The number is divided by 1000 for each comma\n *  specified.</li>\n * </ul>\n * \n * The following table describes the standard numeric format specifiers and\n * displays sample output produced by each format specifier for the default\n * culture.\n * \n * <b>n</b> Number: <code>formatNumber(1234.5, 'n2') => '1,234.50'</code><br/>\n * <b>f</b> Fixed-point: <code>formatNumber(1234.5, 'f2') => '1234.50'</code><br/>\n * <b>g</b> General (no trailing zeros): <code>formatNumber(1234.5, 'g2') => '1,234.5'</code><br/>\n * <b>d</b> Decimal (integers): <code>formatNumber(-1234, 'd6') => '-001234'</code><br/>\n * <b>x</b> Hexadecimal (integers): <code>formatNumber(1234, 'x6') => '0004d2'</code><br/>\n * <b>c</b> Currency: <code>formatNumber(1234, 'c') => '$ 1,234.00'</code><br/>\n * <b>p</b> Percent: <code>formatNumber(0.1234, 'p2') => '12.34 %'</code>\n * \n * The scaling specifier is especially useful when charting large values. For\n * example, the markup below creates a chart that plots population versus GDP.\n * The raw data expresses the population is units and the GDP in millions.\n * The scaling specified in the axes formats causes the chart to show population\n * in millions and GDP in trillions:\n * \n * <pre>&lt;wj-flex-chart\n *   items-source=\"countriesGDP\" binding-x=\"pop\" chart-type=\"Scatter\"&gt;\n *   &lt;wj-flex-chart-series\n *     name=\"GDP\" binding=\"gdp\"&gt;&lt;/wj-flex-chart-series&gt;\n *   &lt;wj-flex-chart-axis\n *     wj-property=\"axisX\" title=\"Population (millions)\"\n *     format=\"n0,,\"&gt;\n *   &lt;/wj-flex-chart-axis&gt;\n *   &lt;wj-flex-chart-axis\n *     wj-property=\"axisY\" title=\"GDP (US$ trillions)\"\n *     format=\"c0,,\"&gt;\n *   &lt;/wj-flex-chart-axis&gt;\n * &lt;/wj-flex-chart&gt;</pre>\n * \n * @param {?} value Number to format.\n * @param {?} format .NET-style standard numeric format string (e.g. 'n2', 'c4', 'p0', 'g2', 'd2').\n * @param {?=} trim Whether to remove trailing zeros from the result.\n * @param {?=} truncate Whether to truncate the value rather than round it.\n * @return {?} A string representation of the given number.\n */\nstatic formatNumber(value: number, format: string, trim?: boolean, truncate?: boolean): string {\n        asNumber(value);\n        asString(format);\n\n        let /** @type {?} */ result;\n        const /** @type {?} */ m   = format ? format.match(/([a-z])(\\d*)(,*)(.*)/i) : null, /** @type {?} */\n            nf    = culture.Globalize.numberFormat, /** @type {?} */\n            f1    = m ? m[1].toLowerCase() : 'n', /** @type {?} */\n            prec  = (m && m[2]) ? parseInt(m[2]) : (f1 == 'c') ? nf.currency.decimals : value == Math.round(value) ? 0 : 2, /** @type {?} */\n            scale = (m && m[3]) ? 3 * m[3].length : 0, /** @type {?} */\n            curr  = (m && m[4]) ? m[4] : nf.currency.symbol, /** @type {?} */\n            dp    = nf['.'], /** @type {?} */\n            ts    = nf[','];\n\n        // scale (,:thousands ,,:millions ,,,:billions)\n        if (scale) {\n            value /= Math.pow(10, scale);\n        }\n\n        // d, x: integers/hexadecimal\n        if (f1 == 'd' || f1 == 'x') {\n            result = Math.round(Math.abs(value)).toString(f1 == 'd' ? 10 : 16);\n            while (result.length < prec) {\n                result = '0' + result;\n            }\n            if (value < 0) {\n                result = '-' + result;\n            }\n            if (format && format[0] == 'X') {\n                result = result.toUpperCase();\n            }\n            return result;\n        }\n\n        // p: percentage\n        if (f1 == 'p') {\n            value *= 100;\n        }\n\n        // truncate value\n        if (truncate) {\n            value = toFixed(value, prec, true);\n        }\n\n        // get result\n        result = (f1 == 'c' || f1 == 'p')\n            ? Math.abs(value).toFixed(prec)\n            : value.toFixed(prec);\n\n        // g: remove trailing zeros\n        if ((trim || f1 == 'g') && result.indexOf('.') > -1) {\n            result = result.replace(/(\\.[0-9]*?)0+$/g, '$1');\n            result = result.replace(/\\.$/, '');\n        }\n\n        // replace decimal point\n        if (dp != '.') {\n            result = result.replace('.', dp);\n        }\n\n        // n, c, p: thousand separators\n        if (ts && (f1 == 'n' || f1 == 'c' || f1 == 'p')) {\n            const /** @type {?} */ idx = result.indexOf(dp), /** @type {?} */\n                  rx  = /\\B(?=(\\d\\d\\d)+(?!\\d))/g;\n            result    = idx > -1 ? result.substr(0, idx).replace(rx, ts) + result.substr(idx) : result.replace(rx, ts);\n        }\n\n        // c: currency pattern\n        if (f1 == 'c') {\n            var /** @type {?} */ pat = nf.currency.pattern[value < 0 ? 0 : 1];\n            result = pat.replace('n', result).replace('$', curr);\n        }\n\n        // p: percentage pattern\n        if (f1 == 'p') {\n            var /** @type {?} */ pat = nf.percent.pattern[value < 0 ? 0 : 1];\n            result = pat.replace('n', result);\n        }\n\n        // done\n        return result;\n    }\n/**\n * Formats a date using the current culture.\n * \n * The \\@see:format parameter contains a .NET-style\n * <a href=\"http://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx\">Date format string</a>\n * with the following additions:\n * <ul>\n * <li>\n *  <i>Q, q</i> Calendar quarter.</li>\n *  <i>U</i> Fiscal quarter (government).</li>\n *  <i>u</i> Fiscal quarter (private sector).</li>\n *  <i>EEEE, EEE, EE, E</i> Fiscal year (government).</li>\n *  <i>eeee, eee, ee, e</i> Fiscal year (private sector).</li>\n * </ul>\n * \n * For example:\n * <code>\n * var d = new Date(2015, 9, 1); // Oct 1, 2015\n * console.log(wijmo.Globalize.format(d, '\"FY\"EEEE\"Q\"U') + ' (US culture)');\n * &gt; <b>FY2016Q1 (US culture)</b>\n * </code>\n * \n * @param {?} value Number or Date to format.\n * @param {?} format .NET-style Date format string</a>.\n * @return {?} A string representation of the given date.\n */\nstatic formatDate(value: Date, format: string): string {\n        value = asDate(value);\n\n        // culture-invariant formats\n        switch (format) {\n            case 'r':\n            case 'R':\n                return value.toUTCString();\n            case 'u':\n                return value.toISOString().replace(/\\.\\d{3}/, '');\n        }\n\n        // expand pre-defined formats\n        format = Globalize._expandFormat(format);\n\n        // parse the format string and build return value\n        const /** @type {?} */ parts = Globalize._parseDateFormat(format);\n        let /** @type {?} */ str     = '';\n        for (let /** @type {?} */ i = 0; i < parts.length; i++) {\n            str += Globalize._formatDatePart(value, format, parts[i]);\n        }\n\n        // all done\n        return str;\n    }\n/**\n * Parses a string into an integer.\n * \n * @param {?} value String to convert to an integer.\n * @param {?=} format Format to use when parsing the number.\n * @return {?} The integer represented by the given string,\n * or <b>NaN</b> if the string cannot be parsed into an integer.\n */\nstatic parseInt(value: string, format?: string): number {\n        return Math.round(Globalize.parseFloat(value, format));\n    }\n/**\n * Parses a string into a floating point number.\n * \n * @param {?} value String to convert to a number.\n * @param {?=} format Format to use when parsing the number.\n * @return {?} The floating point number represented by the given string,\n * or <b>NaN</b> if the string cannot be parsed into a floating point number.\n */\nstatic parseFloat(value: string, format?: string): number {\n        const /** @type {?} */ neg   = value.indexOf('-') > -1 || (value.indexOf('(') > -1 && value.indexOf(')') > -1) ? -1 : +1, /** @type {?} */\n              pct   = value.indexOf('%') > -1 ? .01 : 1, /** @type {?} */\n              m     = format ? format.match(/,+/) : null, /** @type {?} */\n              scale = m ? m[0].length * 3 : 0;\n\n        // hex\n        if (format && (format[0] == 'x' || format[0] == 'X')) {\n            value = value.replace(/[^0-9a-f]+.*$/gi, ''); // truncate at first invalid char\n            return parseInt(value, 16) * neg * pct * Math.pow(10, scale);\n        }\n\n        // decimal\n        var /** @type {?} */ dp = culture.Globalize.numberFormat['.'], /** @type {?} */\n            rx = new RegExp('[^\\\\d\\\\' + dp + ']', 'g'), /** @type {?} */\n            value = value.replace(rx, '').replace(dp, '.'); // remove non-digits, replace decimal point\n        return parseFloat(value) * neg * pct * Math.pow(10, scale);\n    }\n/**\n * Parses a string into a Date.\n * \n * @param {?} value String to convert to a Date.\n * @param {?} format Format string used to parse the date.\n * @return {?} The date represented by the given string, or null if the string\n * cannot be parsed into a Date.\n */\nstatic parseDate(value: string, format: string): Date {\n\n        // make sure we have a value\n        value = asString(value);\n        if (!value) {\n            return null;\n        }\n\n        // culture-invariant formats\n        if (format == 'u') {\n            return new Date(value);\n        }\n\n        // parse using RFC 3339 pattern ([yyyy-MM-dd] [hh:mm[:ss]])\n        var /** @type {?} */ d: Date;\n        if (format == 'R' || format == 'r') {\n            const /** @type {?} */ rx    = /(([0-9]+)\\-([0-9]+)\\-([0-9]+))?\\s?(([0-9]+):([0-9]+)(:([0-9]+))?)?/, /** @type {?} */\n                  match = value.match(rx);\n            if (match[1] || match[5]) {\n                var /** @type {?} */ d = match[1] // parse date\n                    ? new Date(parseInt(match[2]), parseInt(match[3]) - 1, parseInt(match[4]))\n                    : new Date();\n                if (match[5]) { // parse time\n                    d.setHours(parseInt(match[6]));\n                    d.setMinutes(parseInt(match[7]));\n                    d.setSeconds(match[8] ? parseInt(match[9]) : 0);\n                }\n            } else {\n                d = new Date(value);\n            }\n            return !isNaN(d.getTime()) ? d : null;\n        }\n\n        // expand the format\n        format = Globalize._expandFormat(format ? format : 'd');\n\n        // get format parts and data parts\n        //\n        // cjk: chars, http://www.rikai.com/library/kanjitables/kanji_codes.unicode.shtml\n        // rxf: format (no dots in strings: 'mm.dd.yyyy' => ['mm', 'dd', 'yyyy']).\n        // rxv: value (dots OK in strings: 'A.D' => 'A.D', but not by themselves)\n        const /** @type {?} */ cal                                                 = culture.Globalize.calendar, /** @type {?} */\n              cjk                                                 = Globalize._CJK, /** @type {?} */\n              rxv                                                 = new RegExp('(\\\\' + cal['/'] + ')|(\\\\' + cal[':'] + ')|' + // date/time separators\n                  '(\\\\d+)|' + // digits\n                  '([' + cjk + '\\\\.]{2,})|' + // strings with dots\n                  '([' + cjk + ']+)', // strings with no dots\n                  'gi'\n              );\n        let /** @type {?} */ vparts                                                = value.match(rxv), /** @type {?} */\n              fparts = Globalize._parseDateFormat(format), /** @type {?} */ offset = 0, /** @type {?} */\n              year                                                = -1, /** @type {?} */ month = 0, /** @type {?} */ day = 1, /** @type {?} */ hour = 0, /** @type {?} */ min = 0;\n        const /** @type {?} */ tzm                                                 = 0;\n        let /** @type {?} */ sec                                                   = 0, /** @type {?} */ ms                                           = 0, /** @type {?} */ era = -1, /** @type {?} */\n              hasDayName, /** @type {?} */ hasDay, /** @type {?} */ hasQuarter, /** @type {?} */ hasMonth, /** @type {?} */ fiscalFmt;\n\n        // basic validation (TFS 81465, 128359)\n        if (!vparts || !vparts.length || !fparts || !fparts.length) {\n            return null;\n        }\n\n        // parse each element\n        for (let /** @type {?} */ i = 0; i < fparts.length && vparts; i++) {\n            const /** @type {?} */ vpi  = i - offset;\n            let /** @type {?} */ pval   = (vpi > -1 && vpi < vparts.length) ? vparts[vpi] : '';\n            const /** @type {?} */ plen = fparts[i].length;\n            switch (fparts[i]) {\n\n                // ** year\n                case 'EEEE': case 'EEE': case 'EE': case 'E': // fiscal (govt)\n                case 'eeee': case 'eee': case 'ee': case 'e': // fiscal (corp)\n                fiscalFmt = fparts[i];\n                // ** fall through **\n                case 'yyyy': case 'yyy': case 'yy': case 'y': // calendar\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                year = parseInt(pval);\n                break;\n\n                // ** month\n                case 'MMMM': case 'MMM':\n                hasMonth = true;\n                const /** @type {?} */ monthName = pval.toLowerCase();\n                month = -1;\n                for (let /** @type {?} */ j = 0; j < 12; j++) {\n                    if (cal.months[j].toLowerCase().indexOf(monthName) == 0) {\n                        month = j;\n                        break;\n                    }\n                }\n                break;\n                case 'MM': case 'M':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                month = parseInt(pval) - 1;\n                hasMonth = true;\n                break;\n\n                // ** day\n                case 'dddd':\n                case 'ddd':\n                    hasDayName = true;\n                    break; // skip day names\n                case 'dd': case 'd':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                day = parseInt(pval);\n                hasDay = true;\n                break;\n\n                // ** hour\n                case 'hh': case 'h':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                hour = parseInt(pval);\n                hour = hour == 12 ? 0 : hour; // 0-12, 12 == midnight\n                break;\n                case 'HH':\n                    if (plen > 1 && pval.length > plen) {\n                        vparts[vpi] = pval.substr(plen);\n                        pval = pval.substr(0, plen);\n                        offset++;\n                    }\n                    hour = parseInt(pval); // 0-24\n                    break;\n                case 'H':\n                    hour = parseInt(pval); // 0-24\n                    break;\n\n                // ** minute\n                case 'mm': case 'm':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                min = parseInt(pval);\n                break;\n\n                // ** second\n                case 'ss': case 's':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                sec = parseInt(pval);\n                break;\n\n                // ** millisecond\n                case 'fffffff': case 'FFFFFFF':\n                case 'ffffff': case 'FFFFFF':\n                case 'fffff': case 'FFFFF':\n                case 'ffff': case 'FFFF':\n                case 'fff': case 'FFF':\n                case 'ff': case 'FF':\n                case 'f': case 'F':\n                ms = parseInt(pval) / Math.pow(10, plen - 3);\n                break;\n\n                // ** am/pm\n                case 'tt': case 't':\n                pval = pval.toUpperCase();\n                if ((cal.pm[0] && pval == cal.pm[0] && hour < 12) ||\n                    (cal.pm[1] && pval == cal.pm[1] && hour < 12)) {\n                    hour += 12;\n                }\n                break;\n\n                // ** quarter\n                case 'q': case 'Q': case 'u': case 'U':\n                hasQuarter = true;\n                break;\n\n                // ** era\n                case 'ggg': case 'gg': case 'g':\n                era = cal.eras.length > 1 ? Globalize._getEra(pval, cal) : -1;\n                break;\n\n                // ** localized separators (TFS 131320)\n                case cal['/']:\n                case cal[':']:\n                    if (pval && pval != fparts[i]) {\n                        return null; // present and wrong separator\n                    }\n                    break;\n\n                // ** time zone (skip )\n                case 'K':\n                    break;\n\n                // ** all else: if not a match, keep using the same pval\n                default:\n                    if (Globalize._unquote(fparts[i]) != pval) {\n                        offset++;\n                    }\n                    break;\n            }\n        }\n\n        // allow dates with no times even if the format requires times\n        if (hasMonth && hasDay) {\n            if (isNaN(hour)) hour = 0;\n            if (isNaN(min)) min = 0;\n            if (isNaN(sec)) sec = 0;\n        }\n\n        // basic validation\n        if (month < 0 || month > 11 || isNaN(month) ||\n            day < 0 || day > 31 || isNaN(day) ||\n            hour < 0 || hour > 24 || isNaN(hour) ||\n            min < 0 || min > 60 || isNaN(min) ||\n            sec < 0 || sec > 60 || isNaN(sec)) {\n            return null;\n        }\n\n        // convert fiscal year/month to calendar\n        if (fiscalFmt) {\n            if (!hasMonth) { // need year and month to convert fiscal to calendar\n                return null;\n            }\n            d = new Date(year, month);\n            d = DateTime.fromFiscal(d, fiscalFmt[0] == 'E');\n            year = d.getFullYear();\n            month = d.getMonth();\n        }\n\n        // if the day name was specified but the day wasn't, the result is meaningless\n        if (hasDayName && !hasDay) {\n            return null;\n        }\n\n        // if the quarter was specified but the month wasn't, the result is meaningless\n        if (hasQuarter && !hasMonth) {\n            return null;\n        }\n\n        // if year not found, use current (as Globalize.js)\n        if (year < 0) {\n            year = new Date().getFullYear();\n        }\n\n        // apply era offset if any, or adjust for two-digit years (see Calendar.TwoDigitYearMax)\n        if (era > -1) {\n            year = year + cal.eras[era].start.getFullYear() - 1;\n        } else if (year < 100) {\n            year += year >= 30 ? 1900 : 2000;\n        }\n\n        // return result\n        d = new Date(year, month, day, hour, min + tzm, sec, ms);\n        return isNaN(d.getTime()) ? null : d;\n    }\n\n    // Chinese/Japanese/Korean characters\n    // http://www.rikai.com/library/kanjitables/kanji_codes.unicode.shtml\n    // NOTE: using 'replace' to keep minifier from switching the escaped Unicode chars into real Unicode.\n    static _CJK = 'a-zu00C0-u017Fu3000-u30ffu4e00-u9faf'.replace(/u/g, '\\\\u');\n/**\n * Gets the first day of the week according to the current culture.\n * \n * The value returned is between zero (Sunday) and six (Saturday).\n * @return {?}\n */\nstatic getFirstDayOfWeek(): number {\n        const /** @type {?} */ fdw = culture.Globalize.calendar.firstDay;\n        return fdw ? fdw : 0;\n    }\n/**\n * Gets the symbol used as a decimal separator in numbers.\n * @return {?}\n */\nstatic getNumberDecimalSeparator(): string {\n        const /** @type {?} */ ndc = culture.Globalize.numberFormat['.'];\n        return ndc ? ndc : '.';\n    }\n/**\n * @param {?} s\n * @return {?}\n */\nprivate static _unquote(s: string): string {\n        if (s.length > 1 && s[0] == s[s.length - 1]) {\n            if (s[0] == '\\'' || s[0] == '\\\"') {\n                return s.substr(1, s.length - 2);\n            }\n        }\n        return s;\n    }\nprivate static _dateFomatParts = {};\n/**\n * @param {?} format\n * @return {?}\n */\nprivate static _parseDateFormat(format: string): string[] {\n\n        // use cache whenever possible\n        if (format in Globalize._dateFomatParts) {\n            return Globalize._dateFomatParts[format];\n        }\n\n        // parse the format\n        const /** @type {?} */ parts = [], /** @type {?} */\n              str   = '';\n        let /** @type {?} */ start, /** @type {?} */ end;\n        for (start = 0; start > -1 && start < format.length; start++) {\n            const /** @type {?} */ c = format[start];\n            if (c == '\\'' || c == '\"') { // handle quoted parts\n                end = format.indexOf(c, start + 1); // keep quotes to distinguish from regular date parts\n                if (end > -1) {\n                    parts.push(format.substring(start, end + 1));\n                    start = end;\n                    continue;\n                }\n            }\n            end = start + 1;\n            for (; end < format.length; end++) {\n                if (format[end] != c) break;\n            }\n            parts.push(format.substring(start, end));\n            start = end - 1;\n        }\n\n        // cache and return\n        Globalize._dateFomatParts[format] = parts;\n        return parts;\n    }\n/**\n * @param {?} d\n * @param {?} format\n * @param {?} part\n * @return {?}\n */\nprivate static _formatDatePart(d: Date, format: string, part: string): string {\n        const /** @type {?} */ cal  = culture.Globalize.calendar;\n        let /** @type {?} */ era    = 0, /** @type {?} */ year = 0, /** @type {?} */ ff = 0, /** @type {?} */ fd;\n        const /** @type {?} */ plen = part.length;\n        switch (part) {\n\n            // ** year\n            case 'yyyy': case 'yyy': case 'yy': case 'y': // calendar year\n            case 'EEEE': case 'EEE': case 'EE': case 'E': // fiscal year (govt)\n            case 'eeee': case 'eee': case 'ee': case 'e': // fiscal year (corporate)\n\n            // get the year (calendar or fiscal)\n            fd = part[0] == 'E' ? DateTime.toFiscal(d, true) :\n                part[0] == 'e' ? DateTime.toFiscal(d, false) :\n                    d;\n            year = fd.getFullYear();\n\n            // if the calendar has multiple eras and the format specifies an era,\n            // then adjust the year to count from the start of the era.\n            // if the format has no era, then use the regular (Western) year.\n            if (cal.eras.length > 1 && format.indexOf('g') > -1) {\n                era = Globalize._getEra(d, cal);\n                if (era > -1) {\n                    year = year - cal.eras[era].start.getFullYear() + 1;\n                }\n            }\n\n            // adjust number of digits\n            return Globalize._zeroPad(year, 4).substr(4 - part.length);\n\n            // ** month\n            case 'MMMM':\n                return cal.months[d.getMonth()];\n            case 'MMM':\n                return cal.monthsAbbr[d.getMonth()];\n            case 'MM': case 'M':\n            return Globalize._zeroPad(d.getMonth() + 1, plen);\n\n            // ** day\n            case 'dddd':\n                return cal.days[d.getDay()];\n            case 'ddd':\n                return cal.daysAbbr[d.getDay()];\n            case 'dd':\n                return Globalize._zeroPad(d.getDate(), 2);\n            case 'd':\n                return d.getDate().toString();\n\n            // ** hour\n            case 'hh': case 'h':\n            return Globalize._zeroPad(Globalize._h12(d), plen);\n            case 'HH': case 'H':\n            return Globalize._zeroPad(d.getHours(), plen);\n\n            // ** minute\n            case 'mm': case 'm':\n            return Globalize._zeroPad(d.getMinutes(), plen);\n\n            // ** second\n            case 'ss': case 's':\n            return Globalize._zeroPad(d.getSeconds(), plen);\n\n            // ** millisecond\n            case 'fffffff': case 'FFFFFFF':\n            case 'ffffff': case 'FFFFFF':\n            case 'fffff': case 'FFFFF':\n            case 'ffff': case 'FFFF':\n            case 'fff': case 'FFF':\n            case 'ff': case 'FF':\n            case 'f': case 'F':\n            ff = d.getMilliseconds() * Math.pow(10, plen - 3);\n            return part[0] == 'f' ? Globalize._zeroPad(ff, plen) : ff.toFixed(0);\n\n            // ** am/pm\n            case 'tt':\n                return d.getHours() < 12 ? cal.am[0] : cal.pm[0];\n            case 't':\n                return d.getHours() < 12 ? cal.am[1] : cal.pm[1];\n\n            // ** quarter\n            case 'q': case 'Q': // calendar\n            return (Math.floor(d.getMonth() / 3) + 1).toString();\n            case 'u': case 'U': // quarter (U: govt; u: corp)\n            fd = DateTime.toFiscal(d, part == 'U');\n            return (Math.floor(fd.getMonth() / 3) + 1).toString();\n\n            // ** era\n            case 'ggg': case 'gg': case 'g':\n            if (cal.eras.length > 1) {\n                era = Globalize._getEra(d, cal);\n                if (era > -1) {\n                    return part == 'ggg' ? cal.eras[era].name : part == 'gg' ? cal.eras[era].name[0] : cal.eras[era].symbol;\n                }\n            }\n            return cal.eras[0];\n\n            // ** localized separators\n            case ':':\n            case '/':\n                return cal[part];\n\n            // ** time zone\n            case 'K':\n                const /** @type {?} */ tz = d.toString().match(/(\\+|\\-)(\\d{2})(\\d{2})/);\n                return tz ? tz[1] + tz[2] + tz[3] : '';\n        }\n\n        // unquote part\n        if (plen > 1 && part[0] == part[plen - 1]) {\n            if (part[0] == '\\\"' || part[0] == '\\'') {\n                return part.substr(1, plen - 2);\n            }\n        }\n\n        // return part\n        return part;\n    }\n/**\n * @param {?} d\n * @param {?} cal\n * @return {?}\n */\nprivate static _getEra(d: any, cal: any): number {\n        if (isDate(d)) { // find era by start date\n            for (var /** @type {?} */ i = 0; i < cal.eras.length; i++) {\n                if (d >= cal.eras[i].start) {\n                    return i;\n                }\n            }\n        } else if (isString(d)) { // find era by name or symbol\n            for (var /** @type {?} */ i = 0; i < cal.eras.length; i++) {\n                if (cal.eras[i].name) {\n                    if (cal.eras[i].name.indexOf(d) == 0 || cal.eras[i].symbol.indexOf(d) == 0) {\n                        return i;\n                    }\n                }\n            }\n        }\n        return -1; // not found\n    }\n/**\n * @param {?} format\n * @return {?}\n */\nprivate static _expandFormat(format: string): string {\n        const /** @type {?} */ fmt = culture.Globalize.calendar.patterns[format];\n        return fmt ? fmt : format;\n    }\n/**\n * @param {?} num\n * @param {?} places\n * @return {?}\n */\nprivate static _zeroPad(num: number, places: number) {\n        const /** @type {?} */ n    = num.toFixed(0), /** @type {?} */\n              zero = places - n.length + 1;\n        return zero > 0 ? Array(zero).join('0') + n : n;\n    }\n/**\n * @param {?} d\n * @return {?}\n */\nprivate static _h12(d: Date) {\n        const /** @type {?} */ cal = culture.Globalize.calendar;\n        let /** @type {?} */ h     = d.getHours();\n        if (cal.am && cal.am[0]) {\n            h = h % 12;\n            if (h == 0) h = 12;\n        }\n        return h;\n    }\n}\n\nfunction Globalize_tsickle_Closure_declarations() {\n/** @type {?} */\nGlobalize._CJK;\n/** @type {?} */\nGlobalize._dateFomatParts;\n}\n\n","\n/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n * \n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n * \n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nexport class Vector3D\n{\n/**\n * The x axis defined as a Vector3D object with coordinates (1,0,0).\n */\npublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n/**\n * The y axis defined as a Vector3D object with coordinates (0,1,0).\n */\npublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n/**\n * The z axis defined as a Vector3D object with coordinates (0,0,1).\n */\npublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n/**\n * The first element of a Vector3D object, such as the x coordinate of\n * a point in the three-dimensional space. The default value is 0.\n */\npublic x:number;\npublic y:number;\n/**\n * The third element of a Vector3D object, such as the y coordinate of\n * a point in the three-dimensional space. The default value is 0.\n */\npublic z:number;\n/**\n * TThe fourth element of a Vector3D object (in addition to the x, y,\n * and z properties) can hold data such as the angle of rotation. The\n * default value is 0.\n * \n * <p>Quaternion notation employs an angle as the fourth element in\n * its calculation of three-dimensional rotation. The w property can\n * be used to define the angle of rotation about the Vector3D object.\n * The combination of the rotation angle and the coordinates (x,y,z)\n * determines the display object's orientation.</p>\n * \n * <p>In addition, the w property can be used as a perspective warp\n * factor for a projected three-dimensional position or as a projection\n * transform value in representing a three-dimensional coordinate\n * projected into the two-dimensional space. For example, you can\n * create a projection matrix using the <code>Matrix3D.rawData</code>\n * property, that, when applied to a Vector3D object, produces a\n * transform value in the Vector3D object's fourth element (the w\n * property). Dividing the Vector3D object's other elements by the\n * transform value then produces a projected Vector3D object. You can\n * use the <code>Vector3D.project()</code> method to divide the first\n * three elements of a Vector3D object by its fourth element.</p>\n */\npublic w:number;\n/**\n * The length, magnitude, of the current Vector3D object from the\n * origin (0,0,0) to the object's x, y, and z coordinates. The w\n * property is ignored. A unit vector has a length or magnitude of\n * one.\n * @return {?}\n */\npublic get length():number\n    {\n        return Math.sqrt(this.lengthSquared);\n    }\n/**\n * The square of the length of the current Vector3D object, calculated\n * using the x, y, and z properties. The w property is ignored. Use the\n * <code>lengthSquared()</code> method whenever possible instead of the\n * slower <code>Math.sqrt()</code> method call of the\n * <code>Vector3D.length()</code> method.\n * @return {?}\n */\npublic get lengthSquared():number\n    {\n        return this.x*this.x + this.y*this.y + this.z*this.z;\n    }\n/**\n * Creates an instance of a Vector3D object. If you do not specify a\n * parameter for the constructor, a Vector3D object is created with\n * the elements (0,0,0,0).\n * \n * @param {?=} x The first element, such as the x coordinate.\n * @param {?=} y The second element, such as the y coordinate.\n * @param {?=} z The third element, such as the z coordinate.\n * @param {?=} w An optional element for additional data such as the angle\n *          of rotation.\n */\nconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n    {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n/**\n * Adds the value of the x, y, and z elements of the current Vector3D\n * object to the values of the x, y, and z elements of another Vector3D\n * object. The <code>add()</code> method does not change the current\n * Vector3D object. Instead, it returns a new Vector3D object with\n * the new values.\n * \n * <p>The result of adding two vectors together is a resultant vector.\n * One way to visualize the result is by drawing a vector from the\n * origin or tail of the first vector to the end or head of the second\n * vector. The resultant vector is the distance between the origin\n * point of the first vector and the end point of the second vector.\n * </p>\n * @param {?} a\n * @return {?}\n */\npublic add(a:Vector3D):Vector3D\n    {\n        return new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n    }\n/**\n * Returns the angle in radians between two vectors. The returned angle\n * is the smallest radian the first Vector3D object rotates until it\n * aligns with the second Vector3D object.\n * \n * <p>The <code>angleBetween()</code> method is a static method. You\n * can use it directly as a method of the Vector3D class.</p>\n * \n * <p>To convert a degree to a radian, you can use the following\n * formula:</p>\n * \n * <p><code>radian = Math.PI/180 * degree</code></p>\n * \n * @param {?} a The first Vector3D object.\n * @param {?} b The second Vector3D object.\n * @return {?} The angle between two Vector3D objects.\n */\npublic static angleBetween(a:Vector3D, b:Vector3D):number\n    {\n        return Math.acos(a.dotProduct(b)/(a.length*b.length));\n    }\n/**\n * Returns a new Vector3D object that is an exact copy of the current\n * Vector3D object.\n * \n * @return {?} A new Vector3D object that is a copy of the current\n * Vector3D object.\n */\npublic clone():Vector3D\n    {\n        return new Vector3D(this.x, this.y, this.z, this.w);\n    }\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} ascl\n * @param {?} bscl\n * @return {?}\n */\npublic static combine(a:Vector3D, b:Vector3D, ascl:number, bscl:number):Vector3D\n    {\n        return new Vector3D(a.x*ascl + b.x*bscl, a.y*ascl + b.y*bscl, a.z*ascl + b.z*bscl);\n    }\n/**\n * Copies all of vector data from the source Vector3D object into the\n * calling Vector3D object.\n * \n * @param {?} src The Vector3D object from which to copy the data.\n * @return {?}\n */\npublic copyFrom(src:Vector3D):void\n    {\n        this.x = src.x;\n        this.y = src.y;\n        this.z = src.z;\n        this.w = src.w;\n    }\n/**\n * Returns a new Vector3D object that is perpendicular (at a right\n * angle) to the current Vector3D and another Vector3D object. If the\n * returned Vector3D object's coordinates are (0,0,0), then the two\n * Vector3D objects are parallel to each other.\n * \n * <p>You can use the normalized cross product of two vertices of a\n * polygon surface with the normalized vector of the camera or eye\n * viewpoint to get a dot product. The value of the dot product can\n * identify whether a surface of a three-dimensional object is hidden\n * from the viewpoint.</p>\n * \n * @param {?} a A second Vector3D object.\n * @return {?} A new Vector3D object that is perpendicular to the current\n *          Vector3D object and the Vector3D object specified as the\n *          parameter.\n */\npublic crossProduct(a:Vector3D):Vector3D\n    {\n        return new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n    }\n/**\n * Decrements the value of the x, y, and z elements of the current\n * Vector3D object by the values of the x, y, and z elements of\n * specified Vector3D object. Unlike the\n * <code>Vector3D.subtract()</code> method, the\n * <code>decrementBy()</code> method changes the current Vector3D\n * object and does not return a new Vector3D object.\n * \n * @param {?} a The Vector3D object containing the values to subtract from\n *          the current Vector3D object.\n * @return {?}\n */\npublic decrementBy(a:Vector3D)\n    {\n        this.x -= a.x;\n        this.y -= a.y;\n        this.z -= a.z;\n    }\n/**\n * Returns the distance between two Vector3D objects. The\n * <code>distance()</code> method is a static method. You can use it\n * directly as a method of the Vector3D class to get the Euclidean\n * distance between two three-dimensional points.\n * \n * @param {?} pt1 A Vector3D object as the first three-dimensional point.\n * @param {?} pt2 A Vector3D object as the second three-dimensional point.\n * @return {?} The distance between two Vector3D objects.\n */\nstatic distance(pt1:Vector3D, pt2:Vector3D):number\n    {\n        const /** @type {?} */ x: number = (pt1.x - pt2.x);\n        const /** @type {?} */ y: number = (pt1.y - pt2.y);\n        const /** @type {?} */ z: number = (pt1.z - pt2.z);\n        return Math.sqrt(x*x + y*y + z*z);\n    }\n/**\n * If the current Vector3D object and the one specified as the\n * parameter are unit vertices, this method returns the cosine of the\n * angle between the two vertices. Unit vertices are vertices that\n * point to the same direction but their length is one. They remove the\n * length of the vector as a factor in the result. You can use the\n * <code>normalize()</code> method to convert a vector to a unit\n * vector.\n * \n * <p>The <code>dotProduct()</code> method finds the angle between two\n * vertices. It is also used in backface culling or lighting\n * calculations. Backface culling is a procedure for determining which\n * surfaces are hidden from the viewpoint. You can use the normalized\n * vertices from the camera, or eye, viewpoint and the cross product of\n * the vertices of a polygon surface to get the dot product. If the dot\n * product is less than zero, then the surface is facing the camera or\n * the viewer. If the two unit vertices are perpendicular to each\n * other, they are orthogonal and the dot product is zero. If the two\n * vertices are parallel to each other, the dot product is one.</p>\n * \n * @see away.geom.Vector3D#crossProduct()\n * @see away.geom.Vector3D#normalize()\n * @param {?} a The second Vector3D object.\n * @return {?} A scalar which is the dot product of the current Vector3D\n *          object and the specified Vector3D object.\n * \n */\npublic dotProduct(a:Vector3D):number\n    {\n        return this.x*a.x + this.y*a.y + this.z*a.z;\n    }\n/**\n *\n * @param {?} toCompare The Vector3D object to be compared with the current\n *                  Vector3D object.\n * @param {?=} allFour   An optional parameter that specifies whether the w\n *                  property of the Vector3D objects is used in the\n *                  comparison.\n * @return {?} A value of true if the specified Vector3D object is equal\n *          to the current Vector3D object; false if it is not equal.\n */\npublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n    {\n        return (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n    }\n/**\n * Increments the value of the x, y, and z elements of the current\n * Vector3D object by the values of the x, y, and z elements of a\n * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n * method, the <code>incrementBy()</code> method changes the current\n * Vector3D object and does not return a new Vector3D object.\n * \n * @param {?} a The Vector3D object to be added to the current Vector3D\n *          object.\n * @return {?}\n */\npublic incrementBy(a:Vector3D)\n    {\n        this.x += a.x;\n        this.y += a.y;\n        this.z += a.z;\n    }\n/**\n *\n * @see away.geom.Vector3D#equals()\n * @param {?} toCompare The Vector3D object to be compared with the current\n *                  Vector3D object.\n * @param {?} tolerance A number determining the tolerance factor. If the\n *                  difference between the values of the Vector3D\n *                  element specified in the toCompare parameter and\n *                  the current Vector3D element is less than the\n *                  tolerance number, the two values are considered\n *                  nearly equal.\n * @param {?=} allFour   An optional parameter that specifies whether the w\n *                  property of the Vector3D objects is used in the\n *                  comparison.\n * @return {?} A value of true if the specified Vector3D object is nearly\n *          equal to the current Vector3D object; false if it is not\n *          equal.\n * \n */\npublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n    {\n        return ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n    }\n/**\n * Sets the current Vector3D object to its inverse. The inverse object\n * is also considered the opposite of the original object. The value of\n * the x, y, and z properties of the current Vector3D object is changed\n * to -x, -y, and -z.\n * @return {?}\n */\npublic negate():void\n    {\n        this.x = -this.x;\n        this.y = -this.y;\n        this.z = -this.z;\n    }\n/**\n * Scales the line segment between(0,0) and the current point to a set\n * length.\n * \n * @param {?=} thickness The scaling value. For example, if the current\n *                  Vector3D object is (0,3,4), and you normalize it to\n *                  1, the point returned is at(0,0.6,0.8).\n * @return {?}\n */\npublic normalize(thickness:number = 1)\n    {\n        if (this.length != 0) {\n            const /** @type {?} */ invLength = thickness / this.length;\n            this.x *= invLength;\n            this.y *= invLength;\n            this.z *= invLength;\n            return;\n        }\n    }\n/**\n * Divides the value of the <code>x</code>, <code>y</code>, and\n * <code>z</code> properties of the current Vector3D object by the\n * value of its <code>w</code> property.\n * \n * <p>If the current Vector3D object is the result of multiplying a\n * Vector3D object by a projection Matrix3D object, the w property can\n * hold the transform value. The <code>project()</code> method then can\n * complete the projection by dividing the elements by the\n * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n * property to create a projection Matrix3D object.</p>\n * @return {?}\n */\npublic project():void\n    {\n        this.x /= this.w;\n        this.y /= this.w;\n        this.z /= this.w;\n    }\n/**\n * Scales the current Vector3D object by a scalar, a magnitude. The\n * Vector3D object's x, y, and z elements are multiplied by the scalar\n * number specified in the parameter. For example, if the vector is\n * scaled by ten, the result is a vector that is ten times longer. The\n * scalar can also change the direction of the vector. Multiplying the\n * vector by a negative number reverses its direction.\n * \n * @param {?} s A multiplier (scalar) used to scale a Vector3D object.\n * @return {?}\n */\npublic scaleBy(s:number):void\n    {\n        this.x *= s;\n        this.y *= s;\n        this.z *= s;\n    }\n/**\n * Sets the members of Vector3D to the specified values\n * \n * @param {?} xa The first element, such as the x coordinate.\n * @param {?} ya The second element, such as the y coordinate.\n * @param {?} za The third element, such as the z coordinate.\n * @return {?}\n */\npublic setTo(xa:number, ya:number, za:number):void\n    {\n        this.x = xa;\n        this.y = ya;\n        this.z = za;\n    }\n/**\n * Subtracts the value of the x, y, and z elements of the current\n * Vector3D object from the values of the x, y, and z elements of\n * another Vector3D object. The <code>subtract()</code> method does not\n * change the current Vector3D object. Instead, this method returns a\n * new Vector3D object with the new values.\n * \n * @see away.geom.Vector3D#decrementBy()\n * @param {?} a The Vector3D object to be subtracted from the current\n *          Vector3D object.\n * @return {?} A new Vector3D object that is the difference between the\n *          current Vector3D and the specified Vector3D object.\n * \n */\npublic subtract(a:Vector3D):Vector3D\n    {\n        return new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n    }\n/**\n * Returns a string representation of the current Vector3D object. The\n * string contains the values of the x, y, and z properties.\n * @return {?}\n */\npublic toString():string\n    {\n        return \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n    }\n}\n\nfunction Vector3D_tsickle_Closure_declarations() {\n/**\n * The x axis defined as a Vector3D object with coordinates (1,0,0).\n * @type {?}\n */\nVector3D.X_AXIS;\n/**\n * The y axis defined as a Vector3D object with coordinates (0,1,0).\n * @type {?}\n */\nVector3D.Y_AXIS;\n/**\n * The z axis defined as a Vector3D object with coordinates (0,0,1).\n * @type {?}\n */\nVector3D.Z_AXIS;\n/**\n * The first element of a Vector3D object, such as the x coordinate of\n * a point in the three-dimensional space. The default value is 0.\n * @type {?}\n */\nVector3D.prototype.x;\n/** @type {?} */\nVector3D.prototype.y;\n/**\n * The third element of a Vector3D object, such as the y coordinate of\n * a point in the three-dimensional space. The default value is 0.\n * @type {?}\n */\nVector3D.prototype.z;\n/**\n * TThe fourth element of a Vector3D object (in addition to the x, y,\n * and z properties) can hold data such as the angle of rotation. The\n * default value is 0.\n * \n * <p>Quaternion notation employs an angle as the fourth element in\n * its calculation of three-dimensional rotation. The w property can\n * be used to define the angle of rotation about the Vector3D object.\n * The combination of the rotation angle and the coordinates (x,y,z)\n * determines the display object's orientation.</p>\n * \n * <p>In addition, the w property can be used as a perspective warp\n * factor for a projected three-dimensional position or as a projection\n * transform value in representing a three-dimensional coordinate\n * projected into the two-dimensional space. For example, you can\n * create a projection matrix using the <code>Matrix3D.rawData</code>\n * property, that, when applied to a Vector3D object, produces a\n * transform value in the Vector3D object's fourth element (the w\n * property). Dividing the Vector3D object's other elements by the\n * transform value then produces a projected Vector3D object. You can\n * use the <code>Vector3D.project()</code> method to divide the first\n * three elements of a Vector3D object by its fourth element.</p>\n * @type {?}\n */\nVector3D.prototype.w;\n}\n\n","import {asNumber} from '../../util/util';\n/**\n * Class that represents a size (with width and height).\n */\nexport class Size {\n/**\n * Gets or sets the width of this \\@see:Size.\n */\nwidth: number;\n/**\n * Gets or sets the height of this \\@see:Size.\n */\nheight: number;\n/**\n * Initializes a new instance of a \\@see:Size object.\n * \n * @param {?=} width Width of the new \\@see:Size.\n * @param {?=} height Height of the new \\@see:Size.\n */\nconstructor(width = 0, height = 0) {\n        this.width = asNumber(width);\n        this.height = asNumber(height);\n    }\n/**\n * Returns true if a \\@see:Size has the same dimensions as this \\@see:Size.\n * \n * @param {?} sz \\@see:Size to compare to this \\@see:Size.\n * @return {?}\n */\nequals(sz: Size): boolean {\n        return (sz instanceof Size) && this.width == sz.width && this.height == sz.height;\n    }\n/**\n * Creates a copy of this \\@see:Size.\n * @return {?}\n */\nclone(): Size {\n        return new Size(this.width, this.height);\n    }\n}\n\nfunction Size_tsickle_Closure_declarations() {\n/**\n * Gets or sets the width of this \\@see:Size.\n * @type {?}\n */\nSize.prototype.width;\n/**\n * Gets or sets the height of this \\@see:Size.\n * @type {?}\n */\nSize.prototype.height;\n}\n\n","\nimport { Vector3D } from './vector3d';\nimport { Point } from '../ui/point';\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n * \n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n * \n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n * \n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n * \n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n * \n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n * \n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n * \n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n * \n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n * \n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nexport class Matrix\n{\n/**\n * The value that affects the positioning of pixels along the <i>x</i> axis\n * when scaling or rotating an image.\n */\npublic a:number;\n/**\n * The value that affects the positioning of pixels along the <i>y</i> axis\n * when rotating or skewing an image.\n */\npublic b:number;\n/**\n * The value that affects the positioning of pixels along the <i>x</i> axis\n * when rotating or skewing an image.\n */\npublic c:number;\n/**\n * The value that affects the positioning of pixels along the <i>y</i> axis\n * when scaling or rotating an image.\n */\npublic d:number;\n/**\n * The distance by which to translate each point along the <i>x</i> axis.\n */\npublic tx:number;\n/**\n * The distance by which to translate each point along the <i>y</i> axis.\n */\npublic ty:number;\n/**\n * Creates a new Matrix object with the specified parameters. In matrix\n * notation, the properties are organized like this:\n * \n * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n * constructor, it creates an <i>identity matrix</i> with the following\n * values:</p>\n * \n * <p>In matrix notation, the identity matrix looks like this:</p>\n * \n * @param {?=} a  The value that affects the positioning of pixels along the\n *           <i>x</i> axis when scaling or rotating an image.\n * @param {?=} b  The value that affects the positioning of pixels along the\n *           <i>y</i> axis when rotating or skewing an image.\n * @param {?=} c  The value that affects the positioning of pixels along the\n *           <i>x</i> axis when rotating or skewing an image.\n * @param {?=} d  The value that affects the positioning of pixels along the\n *           <i>y</i> axis when scaling or rotating an image..\n * @param {?=} tx The distance by which to translate each point along the <i>x</i>\n *           axis.\n * @param {?=} ty The distance by which to translate each point along the <i>y</i>\n *           axis.\n */\nconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n/**\n * Returns a new Matrix object that is a clone of this matrix, with an exact\n * copy of the contained object.\n * \n * @return {?} A Matrix object.\n */\npublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n/**\n * Concatenates a matrix with the current matrix, effectively combining the\n * geometric effects of the two. In mathematical terms, concatenating two\n * matrixes is the same as combining them using matrix multiplication.\n * \n * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n * transforms <code>m1</code> into a matrix that scales an object by a factor\n * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n * \n * <p>This method replaces the source matrix with the concatenated matrix. If\n * you want to concatenate two matrixes without altering either of the two\n * source matrixes, first copy the source matrix by using the\n * <code>clone()</code> method, as shown in the Class Examples section.</p>\n * \n * @param {?} matrix The matrix to be concatenated to the source matrix.\n * @return {?}\n */\npublic concat(matrix:Matrix):void\n\t{\n\t\tconst /** @type {?} */ a1 = this.a * matrix.a + this.b * matrix.c;\n\t\tthis.b   = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a   = a1;\n\n\t\tconst /** @type {?} */ c1 = this.c * matrix.a + this.d * matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tconst /** @type {?} */ tx1 = this.tx * matrix.a + this.ty * matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n/**\n * Copies a Vector3D object into specific column of the calling Matrix3D\n * object.\n * \n * @param {?} column   The column from which to copy the data from.\n * @param {?} vector3D The Vector3D object from which to copy the data.\n * @return {?}\n */\npublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n/**\n * Copies specific column of the calling Matrix object into the Vector3D\n * object. The w element of the Vector3D object will not be changed.\n * \n * @param {?} column   The column from which to copy the data from.\n * @param {?} vector3D The Vector3D object from which to copy the data.\n * @return {?}\n */\npublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new Error(\"Error, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n/**\n * Copies all of the matrix data from the source Point object into the\n * calling Matrix object.\n * \n * @param {?} sourceMatrix The Matrix object from which to copy the data.\n * @return {?}\n */\npublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n/**\n * Copies a Vector3D object into specific row of the calling Matrix object.\n * \n * @param {?} row      The row from which to copy the data from.\n * @param {?} vector3D The Vector3D object from which to copy the data.\n * @return {?}\n */\npublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new Error(\"Error, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n/**\n * Copies specific row of the calling Matrix object into the Vector3D object.\n * The w element of the Vector3D object will not be changed.\n * \n * @param {?} row      The row from which to copy the data from.\n * @param {?} vector3D The Vector3D object from which to copy the data.\n * @return {?}\n */\npublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new Error(\"Error, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n/**\n * Includes parameters for scaling, rotation, and translation. When applied\n * to a matrix it sets the matrix's values based on those parameters.\n * \n * <p>Using the <code>createBox()</code> method lets you obtain the same\n * matrix as you would if you applied the <code>identity()</code>,\n * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n * 100, 100)</code> has the same effect as the following:</p>\n * \n * @param {?} scaleX   The factor by which to scale horizontally.\n * @param {?} scaleY   The factor by which scale vertically.\n * @param {?=} rotation The amount to rotate, in radians.\n * @param {?=} tx       The number of pixels to translate(move) to the right\n *                 along the <i>x</i> axis.\n * @param {?=} ty       The number of pixels to translate(move) down along the\n *                 <i>y</i> axis.\n * @return {?}\n */\npublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n/**\n * Creates the specific style of matrix expected by the\n * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n * methods of the Graphics class. Width and height are scaled to a\n * <code>scaleX</code>/<code>scaleY</code> pair and the\n * <code>tx</code>/<code>ty</code> values are offset by half the width and\n * height.\n * \n * <p>For example, consider a gradient with the following\n * characteristics:</p>\n * \n * <ul>\n *   <li><code>GradientType.LINEAR</code></li>\n *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n * 255]</code></li>\n *   <li><code>SpreadMethod.PAD</code></li>\n *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n * </ul>\n * \n * <p>The following illustrations show gradients in which the matrix was\n * defined using the <code>createGradientBox()</code> method with different\n * parameter settings:</p>\n * \n * @param {?} width    The width of the gradient box.\n * @param {?} height   The height of the gradient box.\n * @param {?=} rotation The amount to rotate, in radians.\n * @param {?=} tx       The distance, in pixels, to translate to the right along\n *                 the <i>x</i> axis. This value is offset by half of the\n *                 <code>width</code> parameter.\n * @param {?=} ty       The distance, in pixels, to translate down along the\n *                 <i>y</i> axis. This value is offset by half of the\n *                 <code>height</code> parameter.\n * @return {?}\n */\npublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tconst /** @type {?} */ cos = Math.cos(rotation);\n\t\t\tlet /** @type {?} */ sin   = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n/**\n * Given a point in the pretransform coordinate space, returns the\n * coordinates of that point after the transformation occurs. Unlike the\n * standard transformation applied using the <code>transformPoint()</code>\n * method, the <code>deltaTransformPoint()</code> method's transformation\n * does not consider the translation parameters <code>tx</code> and\n * <code>ty</code>.\n * \n * @param {?} point The point for which you want to get the result of the matrix\n *              transformation.\n * @return {?} The point resulting from applying the matrix transformation.\n */\npublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n/**\n * Sets each matrix property to a value that causes a null transformation. An\n * object transformed by applying an identity matrix will be identical to the\n * original.\n * \n * <p>After calling the <code>identity()</code> method, the resulting matrix\n * has the following properties: <code>a</code>=1, <code>b</code>=0,\n * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n * <code>ty</code>=0.</p>\n * \n * <p>In matrix notation, the identity matrix looks like this:</p>\n * \n * @return {?}\n */\npublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n/**\n * Performs the opposite transformation of the original matrix. You can apply\n * an inverted matrix to an object to undo the transformation performed when\n * applying the original matrix.\n * @return {?}\n */\npublic invert():void\n\t{\n\t\tlet /** @type {?} */ norm = this.a * this.d - this.b * this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tconst /** @type {?} */ a1 = this.d * norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tconst /** @type {?} */ tx1 = -this.a * this.tx - this.c * this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n/**\n * Returns a new Matrix object that is a clone of this matrix, with an exact\n * copy of the contained object.\n * \n * @param {?} matrix The matrix for which you want to get the result of the matrix\n *               transformation.\n * @return {?} A Matrix object.\n */\npublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tconst /** @type {?} */ result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n/**\n * Applies a rotation transformation to the Matrix object.\n * \n * <p>The <code>rotate()</code> method alters the <code>a</code>,\n * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n * Matrix object. In matrix notation, this is the same as concatenating the\n * current matrix with the following:</p>\n * \n * @param {?} angle The rotation angle in radians.\n * @return {?}\n */\npublic rotate(angle:number):void\n\t{\n\t\tconst /** @type {?} */ cos = Math.cos(angle);\n\t\tconst /** @type {?} */ sin = Math.sin(angle);\n\n\t\tconst /** @type {?} */ a1 = this.a * cos - this.b * sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tconst /** @type {?} */ c1 = this.c * cos - this.d * sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tconst /** @type {?} */ tx1 = this.tx * cos - this.ty * sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n/**\n * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n * <code>sy</code>.\n * \n * <p>The <code>scale()</code> method alters the <code>a</code> and\n * <code>d</code> properties of the Matrix object. In matrix notation, this\n * is the same as concatenating the current matrix with the following\n * matrix:</p>\n * \n * @param {?} sx A multiplier used to scale the object along the <i>x</i> axis.\n * @param {?} sy A multiplier used to scale the object along the <i>y</i> axis.\n * @return {?}\n */\npublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n/**\n * Sets the members of Matrix to the specified values.\n * \n * @param {?} a  The value that affects the positioning of pixels along the\n *           <i>x</i> axis when scaling or rotating an image.\n * @param {?} b  The value that affects the positioning of pixels along the\n *           <i>y</i> axis when rotating or skewing an image.\n * @param {?} c  The value that affects the positioning of pixels along the\n *           <i>x</i> axis when rotating or skewing an image.\n * @param {?} d  The value that affects the positioning of pixels along the\n *           <i>y</i> axis when scaling or rotating an image..\n * @param {?} tx The distance by which to translate each point along the <i>x</i>\n *           axis.\n * @param {?} ty The distance by which to translate each point along the <i>y</i>\n *           axis.\n * @return {?}\n */\npublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n/**\n * Returns a text value listing the properties of the Matrix object.\n * \n * @return {?} A string containing the values of the properties of the Matrix\n *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n */\npublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n/**\n * Returns the result of applying the geometric transformation represented by\n * the Matrix object to the specified point.\n * \n * @param {?} point The point for which you want to get the result of the Matrix\n *              transformation.\n * @return {?} The point resulting from applying the Matrix transformation.\n */\npublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n/**\n * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n * by the <code>dx</code> and <code>dy</code> parameters.\n * \n * @param {?} dx The amount of movement along the <i>x</i> axis to the right, in\n *           pixels.\n * @param {?} dy The amount of movement down along the <i>y</i> axis, in pixels.\n * @return {?}\n */\npublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nfunction Matrix_tsickle_Closure_declarations() {\n/**\n * The value that affects the positioning of pixels along the <i>x</i> axis\n * when scaling or rotating an image.\n * @type {?}\n */\nMatrix.prototype.a;\n/**\n * The value that affects the positioning of pixels along the <i>y</i> axis\n * when rotating or skewing an image.\n * @type {?}\n */\nMatrix.prototype.b;\n/**\n * The value that affects the positioning of pixels along the <i>x</i> axis\n * when rotating or skewing an image.\n * @type {?}\n */\nMatrix.prototype.c;\n/**\n * The value that affects the positioning of pixels along the <i>y</i> axis\n * when scaling or rotating an image.\n * @type {?}\n */\nMatrix.prototype.d;\n/**\n * The distance by which to translate each point along the <i>x</i> axis.\n * @type {?}\n */\nMatrix.prototype.tx;\n/**\n * The distance by which to translate each point along the <i>y</i> axis.\n * @type {?}\n */\nMatrix.prototype.ty;\n}\n\n","import {isArray, isDate} from '../../util/util';\nimport {culture} from '../../globalization/Localization';\n/**\n * Provides date and time utilities.\n */\nexport class DateTime {\n/**\n * Gets a new Date that adds the specified number of days to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} days Number of days to add to the given date.\n * @return {?}\n */\nstatic addDays(value: Date, days: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate() + days);\n    }\n/**\n * Gets a new Date that adds the specified number of months to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} months Number of months to add to the given date.\n * @return {?}\n */\nstatic addMonths(value: Date, months: number): Date {\n        return new Date(value.getFullYear(), value.getMonth() + months, value.getDate());\n    }\n/**\n * Gets a new Date that adds the specified number of years to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} years Number of years to add to the given date.\n * @return {?}\n */\nstatic addYears(value: Date, years: number): Date {\n        return new Date(value.getFullYear() + years, value.getMonth(), value.getDate());\n    }\n/**\n * Gets a new Date that adds the specified number of hours to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} hours Number of hours to add to the given date.\n * @return {?}\n */\nstatic addHours(value: Date, hours: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours() + hours);\n    }\n/**\n * Gets a new Date that adds the specified number of minutes to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} minutes Number of minutes to add to the given date.\n * @return {?}\n */\nstatic addMinutes(value: Date, minutes: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes() + minutes);\n    }\n/**\n * Gets a new Date that adds the specified number of seconds to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} seconds Number of seconds to add to the given date.\n * @return {?}\n */\nstatic addSeconds(value: Date, seconds: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes(), value.getSeconds() + seconds);\n    }\n/**\n * Returns true if two Date objects refer to the same date (ignoring time).\n * \n * @param {?} d1 First date.\n * @param {?} d2 Second date.\n * @return {?}\n */\nstatic sameDate(d1: Date, d2: Date): boolean {\n        return isDate(d1) && isDate(d2) &&\n            d1.getFullYear() == d2.getFullYear() &&\n            d1.getMonth() == d2.getMonth() &&\n            d1.getDate() == d2.getDate();\n    }\n/**\n * Returns true if two Date objects refer to the same time (ignoring date).\n * \n * @param {?} d1 First date.\n * @param {?} d2 Second date.\n * @return {?}\n */\nstatic sameTime(d1: Date, d2: Date): boolean {\n        return isDate(d1) && isDate(d2) &&\n            d1.getHours() == d2.getHours() &&\n            d1.getMinutes() == d2.getMinutes() &&\n            d1.getSeconds() == d2.getSeconds();\n    }\n/**\n * Returns true if two Date objects refer to the same date and time.\n * \n * @param {?} d1 First date.\n * @param {?} d2 Second date.\n * @return {?}\n */\nstatic equals(d1: Date, d2: Date): boolean {\n        return isDate(d1) && isDate(d2) && d1.getTime() == d2.getTime();\n    }\n/**\n * Gets a Date object with the date and time set on two Date objects.\n * \n * @param {?} date Date object that contains the date (day/month/year).\n * @param {?} time Date object that contains the time (hour:minute:second).\n * @return {?}\n */\nstatic fromDateTime(date: Date, time: Date): Date {\n        if (!date && !time) return null;\n        if (!date) date = time;\n        if (!time) time = date;\n        return new Date(\n            date.getFullYear(), date.getMonth(), date.getDate(),\n            time.getHours(), time.getMinutes(), time.getSeconds());\n    }\n/**\n * Converts a calendar date to a fiscal date using the current culture.\n * \n * @param {?} date Calendar date.\n * @param {?} govt Whether to use the government or corporate fiscal year.\n * @return {?}\n */\nstatic toFiscal(date: Date, govt: boolean) {\n        const /** @type {?} */ cal = culture.Globalize.calendar;\n        return isArray(cal.fiscalYearOffsets)\n            ? DateTime.addMonths(date, -cal.fiscalYearOffsets[govt ? 0 : 1])\n            : date;\n    }\n/**\n * Converts a fiscal year date to a calendar date using the current culture.\n * \n * @param {?} date Fiscal year date.\n * @param {?} govt Whether to use the government or corporate fiscal year.\n * @return {?}\n */\nstatic fromFiscal(date: Date, govt: boolean) {\n        const /** @type {?} */ cal = culture.Globalize.calendar;\n        return isArray(cal.fiscalYearOffsets)\n            ? DateTime.addMonths(date, +cal.fiscalYearOffsets[govt ? 0 : 1])\n            : date;\n    }\n/**\n * Creates a copy of a given Date object.\n * \n * @param {?} date Date object to copy.\n * @return {?}\n */\nstatic clone(date: Date): Date {\n        return DateTime.fromDateTime(date, date);\n    }\n}\n","'use strict';\n/**\n * Gets or sets an object that contains all localizable strings in the Wijmo library.\n * \n * The culture selector is a two-letter string that represents an\n * <a href='http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes'>ISO 639 culture</a>.\n */\nexport let culture: any = {\n    Globalize: {\n        numberFormat: {\n            NumberDecimalSeparator: '.',\n            NumberGroupSeparator: ',',\n            CurrencySymbol: '$',\n            '.': '.',\n            ',': ',',\n            percent: {pattern: ['-n %', 'n %']},\n            currency: {decimals: 2, symbol: '$', pattern: ['($n)', '$n']}\n        },\n        dateTimeFormat: {\n            TimeSeparator: '/',\n            DateSeparator: ':',\n            '/': '/',\n            ':': ':',\n        },\n        calendar: {\n            '/': '/',\n            ':': ':',\n            firstDay: 0,\n            days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            daysAbbr: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n            monthsAbbr: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            am: ['AM', 'A'],\n            pm: ['PM', 'P'],\n            eras: ['A.D.', 'B.C.'],\n            patterns: {\n                d: 'M/d/yyyy', D: 'dddd, MMMM dd, yyyy',\n                f: 'dddd, MMMM dd, yyyy h:mm tt', F: 'dddd, MMMM dd, yyyy h:mm:ss tt',\n                t: 'h:mm tt', T: 'h:mm:ss tt',\n                M: 'MMMM d', m: 'MMMM d',\n                Y: 'MMMM, yyyy', y: 'MMMM, yyyy',\n                g: 'M/d/yyyy h:mm tt', G: 'M/d/yyyy h:mm:ss tt',\n                s: 'yyyy\"-\"MM\"-\"dd\"T\"HH\":\"mm\":\"ss',\n                o: 'yyyy\"-\"MM\"-\"dd\"T\"HH\":\"mm\":\"ss\".\"fffffffK',\n                O: 'yyyy\"-\"MM\"-\"dd\"T\"HH\":\"mm\":\"ss\".\"fffffffK',\n                U: 'dddd, MMMM dd, yyyy h:mm:ss tt'\n            },\n            fiscalYearOffsets: [-3, -3]\n        }\n    },\n    MultiSelect: {\n        itemsSelected: '{count:n0} items selected'\n    },\n    FlexGrid: {\n        groupHeaderFormat: '{name}: <b>{value} </b>({count:n0} items)'\n    },\n    FlexGridFilter: {\n\n        // filter\n        ascending: '\\u2191 Ascending',\n        descending: '\\u2193 Descending',\n        apply: 'Apply',\n        clear: 'Clear',\n        conditions: 'Filter by Condition',\n        values: 'Filter by Value',\n\n        // value filter\n        search: 'Search',\n        selectAll: 'Select All',\n        null: '(nothing)',\n\n        // condition filter\n        header: 'Show items where the value',\n        and: 'And',\n        or: 'Or',\n        stringOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Does not equal', op: 1},\n            {name: 'Begins with', op: 6},\n            {name: 'Ends with', op: 7},\n            {name: 'Contains', op: 8},\n            {name: 'Does not contain', op: 9}\n        ],\n        numberOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Does not equal', op: 1},\n            {name: 'Is Greater than', op: 2},\n            {name: 'Is Greater than or equal to', op: 3},\n            {name: 'Is Less than', op: 4},\n            {name: 'Is Less than or equal to', op: 5}\n        ],\n        dateOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Is Before', op: 4},\n            {name: 'Is After', op: 3}\n        ],\n        booleanOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Does not equal', op: 1}\n        ]\n    }\n};\n","import {DataType} from '../enum/data-type';\nimport {isArray} from '../lang/is-array';\nimport {isString} from '../lang/is-string';\nimport {isDate} from '../lang/is-date';\nimport {isBoolean} from '../lang/is-boolean';\nimport {isNumber} from '../lang/is-number';\n/**\n * Gets the type of a value.\n * \n * @param {?} value Value to test.\n * @return {?} A \\@see:DataType value representing the type of the value passed in.\n */\nexport function getType(value: any): DataType {\n    if (isNumber(value)) return DataType.Number;\n    if (isBoolean(value)) return DataType.Boolean;\n    if (isDate(value)) return DataType.Date;\n    if (isString(value)) return DataType.String;\n    if (isArray(value)) return DataType.Array;\n    return DataType.Object;\n}\n","\n/**\n * @param {?} text\n * @return {?}\n */\nexport function toHyphenCase(text: string): string {\n    return text.length ? (text[0] + text.substr(1).replace(/([A-Z])/g, '-$1')).toLowerCase() : '';\n}\n","\n/**\n * Converts a camel-cased string into a header-type string by capitalizing the first letter\n * and adding spaces before uppercase characters preceded by lower-case characters.\n * \n * For example, 'somePropertyName' becomes 'Some Property Name'.\n * \n * @param {?} text String to convert to header case.\n * @return {?}\n */\nexport function toHeaderCase(text: string): string {\n    return text.length ? text[0].toUpperCase() + text.substr(1).replace(/([a-z])([A-Z])/g, '$1 $2') : '';\n}","import {isString} from '../lang/is-string';\n/**\n * Escapes a string by replacing HTML characters as text entities.\n * \n * Strings entered by uses should always be escaped before they are displayed\n * in HTML pages. This ensures page integrity and prevents HTML/javascript\n * injection attacks.\n * \n * @param {?} text Text to escape.\n * @return {?} An HTML-escaped version of the original string.\n */\nexport function escapeHtml(text: string) {\n    if (isString(text)) {\n        text = text.replace(/[&<>\"'\\/]/g, function (s) {\n            return _ENTITYMAP[s];\n        });\n    }\n    return text;\n}\nconst /** @type {?} */ _ENTITYMAP = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;'\n};\n","\n/**\n * Rounds or truncates a number to a specified precision.\n * \n * @param {?} value Value to round or truncate.\n * @param {?} prec Number of decimal digits for the result.\n * @param {?} truncate Whether to truncate or round the original value.\n * @return {?}\n */\nexport function toFixed(value: number, prec: number, truncate: boolean): number {\n    if (truncate) {\n        var /** @type {?} */ s = value.toString(), /** @type {?} */\n            decPos = s.indexOf('.');\n        if (decPos > -1) {\n            s = s.substr(0, decPos + 1 + prec);\n            value = parseFloat(s);\n        }\n    } else {\n        var /** @type {?} */ s = value.toFixed(prec);\n        value = parseFloat(s);\n    }\n    return value;\n}","\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nexport function clamp(value: number, min: number, max: number): number {\n    if (value != null) {\n        if (max != null && value > max) value = max;\n        if (min != null && value < min) value = min;\n    }\n    return value;\n}\n","\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isPresent(obj: any): boolean {\n    return obj != null;\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isUndefined(value: any): boolean {\n    return typeof value == 'undefined'\n}\n","import {isDate} from './is-date';\nimport {isBoolean} from './is-boolean';\nimport {isNumber} from './is-number';\nimport {isString} from './is-string';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isPrimitive(value: any): boolean {\n    return isString(value) || isNumber(value) || isBoolean(value) || isDate(value);\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNullOrWhitespace(value:string) {\n    return value == null ? true : value.replace(/\\s/g, '').length < 1;\n}\n","\n/**\n * Sets the text content of an element.\n * \n * @param {?} e Element that will have its content updated.\n * @param {?} text Plain text to be assigned to the element.\n * @return {?}\n */\nexport function setText(e: HTMLElement, text: string) {\n\n    // clear\n    if (text == null) {\n        if (e.hasChildNodes()) {\n\n            // this causes serious/weird problems in IE, so DON'T DO IT!!!\n            //e.innerHTML = '';\n\n            // this works, but seems inefficient/convoluted\n            //var dr = document.createRange();\n            //dr.setStart(e, 0);\n            //dr.setEnd(e, e.childNodes.length);\n            //dr.deleteContents();\n\n            // seems like the best option (simple and works)\n            e.textContent = '';\n        }\n        return;\n    }\n\n    // set text\n    const /** @type {?} */ fc = e.firstChild;\n    if (e.childNodes.length == 1 && fc.nodeType == 3) {\n        if (fc.nodeValue != text) {\n            fc.nodeValue = text; // update text directly in the text node\n        }\n    } else if (fc || text) {\n        e.textContent = text; // something else, set the textContent\n    }\n}\n","\n/**\n * Modifies the style of an element by applying the properties specified in an object.\n * \n * @param {?} e Element whose style will be modified.\n * @param {?} css Object containing the style properties to apply to the element.\n * @return {?}\n */\nexport function setCss(e: HTMLElement, css: any) {\n    const /** @type {?} */ s = e.style;\n    for (let /** @type {?} */ p in css) {\n\n        // add pixel units to numeric geometric properties\n        let /** @type {?} */ val = css[p];\n        if (typeof (val) == 'number' &&\n            p.match(/width|height|left|top|right|bottom|size|padding|margin'/i)) {\n            //val += 'px';\n        }\n\n        // set the attribute if it changed\n        if (s[p] != val) {\n            s[p] = val.toString();\n        }\n    }\n}\n","import {isString} from '../lang/is-string';\n/**\n * Gets an element from a jQuery-style selector.\n * \n * @param {?} selector An element, a query selector string, or a jQuery object.\n * @return {?}\n */\nexport function getElement(selector: any): HTMLElement {\n    if (selector instanceof HTMLElement) return selector;\n    if (isString(selector)) return /** @type {?} */(( <HTMLElement>document.querySelector(selector)));\n    if (selector && selector.jquery) return /** @type {?} */(( <HTMLElement>selector[0]));\n    return null;\n}\n","import {toggleClass} from './toggle-class';\n/**\n * Enables or disables an element.\n * \n * @param {?} e Element to enable or disable.\n * @param {?} enable Whether to enable or disable the element.\n * @return {?}\n */\nexport function enable(e: HTMLElement, enable: boolean) {\n    if (enable) {\n        e.removeAttribute('disabled');\n    } else {\n        e.setAttribute('disabled', 'true');\n    }\n    toggleClass(e, 'wj-state-disabled', !enable);\n}\n","import {removeClass} from './remove-class';\nimport {addClass} from './add-class';\n/**\n * Adds or removes a class to or from an element.\n * \n * @param {?} e Element that will have the class added.\n * @param {?} className Class to add or remove.\n * @param {?} addOrRemove Whether to add or remove the class.\n * Use true to add class to element and false to remove class from element.\n * @return {?}\n */\nexport function toggleClass(e: HTMLElement, className: string, addOrRemove: boolean) {\n    if (addOrRemove) {\n        addClass(e, className);\n    } else {\n        removeClass(e, className);\n    }\n}\n","import {hasClass} from './has-class';\n/**\n * Removes a class from an element.\n * \n * @param {?} e Element that will have the class removed.\n * @param {?} className Class to remove form the element.\n * @return {?}\n */\nexport function removeClass(e: HTMLElement, className: string) {\n    // note: using e.getAttribute('class') instead of e.classNames\n    // so this works with SVG as well as regular HTML elements.\n    if (e && e.setAttribute && hasClass(e, className)) {\n        const /** @type {?} */ rx = new RegExp('\\\\s?\\\\b' + className + '\\\\b', 'g'), /** @type {?} */\n              cn = e.getAttribute('class');\n        e.setAttribute('class', cn.replace(rx, ''));\n    }\n}\n","\n/**\n * Checks whether an HTML element contains another.\n * \n * @param {?} parent Parent element.\n * @param {?} child Child element.\n * @return {?} True if the parent element contains the child element.\n */\nexport function contains(parent: any, child: any): boolean {\n    for (let /** @type {?} */ e = /** @type {?} */(( <Node>child)); e; e = e.parentNode) {\n        if (e === parent) return true;\n    }\n    return false;\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function containsFocus(e:HTMLElement):boolean{\n  return contains(e, document.activeElement);\n}\n","\n/**\n * Finds the closest ancestor that satisfies a selector.\n * \n * @param {?} e Element where the search should start.\n * @param {?} selector A string containing a selector expression to match elements against.\n * @return {?} The nearest ancestor that satisfies the selector (including the original element), or null if not found.\n */\nexport function closest(e: any, selector: string): Node {\n\n    // simpler/faster implementation with 'matches' method\n    // http://davidwalsh.name/element-matches-selector\n    const /** @type {?} */ matches = e ? (e.matches || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector) : null;\n    if (matches) {\n        for (; e; e = e.parentNode) {\n            if (e instanceof HTMLElement && matches.call(e, selector)) {\n                return e;\n            }\n        }\n    }\n\n    // original implementation using querySelectorAll (no 'matches')\n    //var start = e;\n    //for (e = e.parentNode; e; e = e.parentNode) {\n    //    var qs = e.querySelectorAll && e.querySelectorAll(selector);\n    //    if (qs && qs.length) {\n    //\n    //        // return original element if it is a match\n    //        for (var i = 0; i < qs.length; i++) {\n    //            if (qs[i] == start) {\n    //                return start;\n    //            }\n    //        }\n    //\n    //        // look for a match that contains the original element\n    //        for (var i = 0; i < qs.length; i++) {\n    //            if (contains(qs[i], start)) {\n    //                return qs[i];\n    //            }\n    //        }\n    //\n    //        // not found\n    //        return null;\n    //    }\n    //}\n\n    // not found\n    return null;\n}\n","import {hasClass} from './has-class';\n/**\n * Adds a class to an element.\n * \n * @param {?} e Element that will have the class added.\n * @param {?} className Class to add to the element.\n * @return {?}\n */\nexport function addClass(e: HTMLElement, className: string) {\n    // note: using e.getAttribute('class') instead of e.classNames\n    // so this works with SVG as well as regular HTML elements.\n    if (e && e.setAttribute && !hasClass(e, className)) {\n        const /** @type {?} */ cn = e.getAttribute('class');\n        e.setAttribute('class', cn ? cn + ' ' + className : className);\n    }\n}\n","\n/**\n * Checks whether an element has a class.\n * \n * @param {?} e Element to check.\n * @param {?} className Class to check for.\n * @return {?}\n */\nexport function hasClass(e: HTMLElement, className: string): boolean {\n    // note: using e.getAttribute('class') instead of e.classNames\n    // so this works with SVG as well as regular HTML elements.\n    if (e && e.getAttribute) {\n        const /** @type {?} */ rx = new RegExp('\\\\b' + className + '\\\\b');\n        return e && rx.test(e.getAttribute('class'));\n    }\n    return false;\n}\n","\n/**\n * @return {?}\n */\nexport function maxCssWidth(){\n    let /** @type {?} */ maxWidth         = 1e6;\n    const /** @type {?} */ testUpTo = 60e6, /** @type {?} */\n        div        = document.createElement('div');\n    div.style.visibility = 'hidden';\n    document.body.appendChild(div);\n    for (let /** @type {?} */ test = maxWidth; test <= testUpTo; test += 500000) {\n        div.style.width = test + 'px';\n        if (div.offsetWidth != test) {\n            break;\n        }\n        maxWidth = test;\n    }\n    document.body.removeChild(div);\n    return maxWidth;\n}\n","\n/**\n * @return {?}\n */\nexport function maxCssHeight(){\n    let /** @type {?} */ maxHeight        = 1e6;\n    const /** @type {?} */ testUpTo = 60e6, /** @type {?} */\n        div        = document.createElement('div');\n    div.style.visibility = 'hidden';\n    document.body.appendChild(div);\n    for (let /** @type {?} */ test = maxHeight; test <= testUpTo; test += 500000) {\n        div.style.height = test + 'px';\n        if (div.offsetHeight != test) {\n            break;\n        }\n        maxHeight = test;\n    }\n    document.body.removeChild(div);\n    return maxHeight;\n}\n","import {createElement} from '../dom/create-element';\nimport { RtlMode } from '../enum/rtl-mode';\n/**\n * @return {?}\n */\nexport function isRtlMode() {\n    const /** @type {?} */ el = createElement(\n        '<div dir=\"rtl\" style=\"visibility:hidden;width:100px;height:100px;overflow:auto\">' +\n        '<div style=\"width:2000px;height:2000px\"></div>' +\n        '</div>'\n    );\n\n    document.body.appendChild(el);\n    const /** @type {?} */ sl = el.scrollLeft;\n    el.scrollLeft = -1000;\n    const /** @type {?} */ sln = el.scrollLeft;\n    document.body.removeChild(el);\n\n    return sln < 0 ? RtlMode.Negative : sl > 0 ? RtlMode.Reverse : RtlMode.Standard;\n}\n","\n/**\n * Creates an element from an HTML string.\n * \n * @param {?} html HTML fragment to convert into an HTMLElement.\n * @return {?} The new element.\n */\nexport function createElement(html: string) : HTMLElement {\n    const /** @type {?} */ div     = document.createElement('div');\n    div.innerHTML = html;\n    return /** @type {?} */(( <HTMLElement>div.removeChild(div.firstChild)));\n}\n","import {tryCast} from '../../common/Global';\nimport {assert} from './assert';\n/**\n * Asserts that a value is an instance of a given type.\n * \n * @param {?} value Value to be checked.\n * @param {?} type Type of value expected.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The value passed in.\n */\nexport function asType(value: any, type: any, nullOK = false): any {\n    value = tryCast(value, type);\n    assert(nullOK || value != null, type + ' expected.');\n    return value;\n}\n","import {Binding} from './Binding';\nimport {Rectangle} from './ui/Rectangle';\nimport {isFunction, isString, asType, contains, asNumber, isBoolean, isNumber} from '../util/util';\nimport {Aggregate} from '../../../enum/Aggregate';\n//import {ICollectionView} from \"../../../collections/interface/ICollectionView\";\n\nimport {CollectionView} from '../../../collections-light/CollectionView';\n\n\n\n\n/**\n * Allows callers to verify whether an object implements an interface.\n */\nexport interface IQueryInterface {\n    /**\n     * Returns true if the object implements a given interface.\n     *\n     * @param interfaceName Name of the interface to look for.\n     */\n    implementsInterface(interfaceName: string): boolean;\n}\n/**\n * Casts a value to a type if possible.\n * \n * @param {?} value Value to cast.\n * @param {?} type Type or interface name to cast to.\n * @return {?} The value passed in if the cast was successful, null otherwise.\n */\nexport function tryCast(value: any, type: any): any {\n\n    // null doesn't implement anything\n    if (value == null) {\n        return null;\n    }\n\n    // test for interface implementation (IQueryInterface)\n    if (isString(type)) {\n        return isFunction(value.implementsInterface) && value.implementsInterface(type) ? value : null;\n    }\n\n    // regular type test\n    return value instanceof type ? value : null;\n}\n/**\n * Checks whether an \\@see:ICollectionView is defined and not empty.\n * \n * @param {?} value \\@see:ICollectionView to check.\n * @return {?}\n */\nexport function hasItems(value: CollectionView) {\n    return value && value.items && value.items.length;\n}\n/**\n * Sets the start and end positions of a selection in a text field.\n * \n * This method is similar to the native \\@see:setSelectionRange method\n * in HTMLInputElement objects, except it checks for conditions that\n * may cause exceptions (element not in the DOM, disabled, or hidden).\n * \n * @param {?} e\n * @param {?} start Offset into the text field for the start of the selection.\n * @param {?=} end Offset into the text field for the end of the selection.\n * @return {?}\n */\nexport function setSelectionRange(e: HTMLInputElement, start: number, end = start) {\n    e = asType(e, HTMLInputElement);\n    if (contains(document.body, e) && !e.disabled && e.style.display != 'none') {\n        try {\n            e.setSelectionRange(asNumber(start), asNumber(end));\n            e.focus(); // needed in Chrome (TFS 124102)\n        } catch ( /** @type {?} */x) { }\n    }\n}\n/**\n * Gets the bounding rectangle of an element in page coordinates.\n * \n * This is similar to the <b>getBoundingClientRect</b> function,\n * except that uses window coordinates, which change when the\n * document scrolls.\n * @param {?} e\n * @return {?}\n */\nexport function getElementRect(e: Element): Rectangle {\n    const /** @type {?} */ rc = e.getBoundingClientRect();\n    return new Rectangle(rc.left + window.pageXOffset, rc.top + window.pageYOffset, rc.width, rc.height);\n}\n/**\n * Calculates an aggregate value from the values in an array.\n * \n * @param {?} aggType Type of aggregate to calculate.\n * @param {?} items Array with the items to aggregate.\n * @param {?=} binding Name of the property to aggregate on (in case the items are not simple values).\n * @return {?}\n */\nexport function getAggregate(aggType: Aggregate, items: any[], binding?: string) {\n    let /** @type {?} */ cnt   = 0, /** @type {?} */\n        cntn  = 0, /** @type {?} */\n        sum   = 0, /** @type {?} */\n        sum2  = 0, /** @type {?} */\n        min   = null, /** @type {?} */\n        max = null;\n    const /** @type {?} */ bnd = binding ? new Binding(binding) : null;\n\n    // calculate aggregate\n    for (let /** @type {?} */ i = 0; i < items.length; i++) {\n\n        // get item/value\n        let /** @type {?} */ val = items[i];\n        if (bnd) {\n            val = bnd.getValue(val);\n            //assert(!isUndefined(val), 'item does not define property \"' + binding + '\".');\n        }\n\n        // aggregate\n        if (val != null) {\n            cnt++;\n            if (min == null || val < min) {\n                min = val;\n            }\n            if (max == null || val > max) {\n                max = val;\n            }\n            if (isNumber(val) && !isNaN(val)) {\n                cntn++;\n                sum += val;\n                sum2 += val * val;\n            } else if (isBoolean(val)) {\n                cntn++;\n                if (val == true) {\n                    sum++;\n                    sum2++;\n                }\n            }\n        }\n    }\n\n    // return result\n    const /** @type {?} */ avg = cntn == 0 ? 0 : sum / cntn;\n    switch (aggType)\n    {\n        case Aggregate.Avg:\n            return avg;\n        case Aggregate.Cnt:\n            return cnt;\n        case Aggregate.Max:\n            return max;\n        case Aggregate.Min:\n            return min;\n        case Aggregate.Rng:\n            return max - min;\n        case Aggregate.Sum:\n            return sum;\n        case Aggregate.VarPop:\n            return cntn <= 1 ? 0 : sum2 / cntn - avg * avg;\n        case Aggregate.StdPop:\n            return cntn <= 1 ? 0 : Math.sqrt(sum2 / cntn - avg * avg);\n        case Aggregate.Var:\n            return cntn <= 1 ? 0 : (sum2 / cntn - avg * avg) * cntn / (cntn - 1);\n        case Aggregate.Std:\n            return cntn <= 1 ? 0 : Math.sqrt((sum2 / cntn - avg * avg) * cntn / (cntn - 1));\n    }\n\n    // should never get here...\n    throw 'Invalid aggregate type.';\n}\n","import {assert} from './assert';\nimport {isString} from '../lang/is-string';\n/**\n * Asserts that a value is a string.\n * \n * @param {?} value Value supposed to be a string.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The string passed in.\n */\nexport function asString(value: string, nullOK = true): string {\n    assert((nullOK && value == null) || isString(value), 'String expected.');\n    return value;\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isString(value: any): boolean {\n    return typeof (value) == 'string';\n}\n","import {assert} from './assert';\nimport {isInt} from '../lang/is-int';\n/**\n * Asserts that a value is an integer.\n * \n * @param {?} value Value supposed to be an integer.\n * @param {?=} nullOK Whether null values are acceptable.\n * @param {?=} positive Whether to accept only positive integers.\n * @return {?} The number passed in.\n */\nexport function asInt(value: number, nullOK = false, positive = false): number {\n    assert((nullOK && value == null) || isInt(value), 'Integer expected.');\n    if (positive && value && value < 0) throw 'Positive integer expected.';\n    return value;\n}\n","import {isNumber} from './is-number';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isInt(value: any): boolean {\n    return isNumber(value) && value == Math.round(value);\n}\n","import {assert} from './assert';\nimport {isNumber} from '../lang/is-number';\n/**\n * Asserts that a value is a valid setting for an enumeration.\n * \n * @param {?} value Value supposed to be a member of the enumeration.\n * @param {?} enumType Enumeration to test for.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The value passed in.\n */\nexport function asEnum(value: number, enumType: any, nullOK = false): number {\n    if (value == null && nullOK) return null;\n    const /** @type {?} */ e = enumType[value];\n    assert(e != null, 'Invalid enum value.');\n    return isNumber(e) ? e : value;\n}\n","import {assert} from './assert';\nimport {isDate} from '../lang/is-date';\n/**\n * Asserts that a value is a Date.\n * \n * @param {?} value Value supposed to be a Date.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The Date passed in.\n */\nexport function asDate(value: Date, nullOK = false): Date {\n    assert((nullOK && value == null) || isDate(value), 'Date expected.');\n    return value;\n}\n","\n\nimport {DataSource} from '../../../../data-source/DataSource';\nimport {ArrayStore} from '../../../../data-source/Store/ArrayStore/ArrayStore';\nimport {tryCast} from '../../common/global';\n/**\n * @param {?} value\n * @param {?=} nullOK\n * @return {?}\n */\nexport function asDataSource(value: any, nullOK = true) {\n    const /** @type {?} */ cv = tryCast(value, DataSource);\n    if (cv != null) {\n        return cv;\n    }\n    return (new ArrayStore(value));\n}\n\n","//import { mapDataRespectingGrouping } from \"./util\";\n//import * as _ from \"lodash\";\n//import { CommonStore } from \"./Store/CommonStore/CommonStore\";\n\nimport { Subject, Observable } from 'rxjs/Rx';\nimport { Pagination } from './Pagination';\n//import { Store } from \"./Store/Store\";\n\nimport { Queue } from './Utils/Queue';\n// var operationManager = new OperationManager();\nconst /** @type {?} */ CANCELED_TOKEN = \"canceled\";\nexport class DataSource<T, R> {\nprivate _storeLoadOptions;\nprivate _mapFunc;\nprivate _postProcessFunc;\nprivate _loadingCount;\nprivate _loadQueue;\nprivate _searchValue;\nprivate _searchOperation;\nprivate _searchExpr;\nprivate _items;\n/**\n * \\@readonly\n * @return {?} array\n */\nget items() {return this._items}\nprivate _userData;\nprivate _isLoaded;\nprivate _delayedLoadTask;\nprivate _disposed;\nconstructor( ){\n\t}\n      \n}\n\nfunction DataSource_tsickle_Closure_declarations() {\n/** @type {?} */\nDataSource.prototype._storeLoadOptions;\n/** @type {?} */\nDataSource.prototype._mapFunc;\n/** @type {?} */\nDataSource.prototype._postProcessFunc;\n/** @type {?} */\nDataSource.prototype._loadingCount;\n/** @type {?} */\nDataSource.prototype._loadQueue;\n/** @type {?} */\nDataSource.prototype._searchValue;\n/** @type {?} */\nDataSource.prototype._searchOperation;\n/** @type {?} */\nDataSource.prototype._searchExpr;\n/** @type {?} */\nDataSource.prototype._items;\n/** @type {?} */\nDataSource.prototype._userData;\n/** @type {?} */\nDataSource.prototype._isLoaded;\n/** @type {?} */\nDataSource.prototype._delayedLoadTask;\n/** @type {?} */\nDataSource.prototype._disposed;\n}\n\n","import {isArray} from '../lang/is-array';\n//import {ICollectionView} from \"../../../../collections/interface/ICollectionView\";\n\nimport {tryCast} from '../../common/global';\nimport {assert} from './assert';\nimport {CollectionView} from '../../../../collections-light/CollectionView';\n/**\n * Asserts that a value is an \\@see:ICollectionView or an Array.\n * \n * @param {?} value Array or \\@see:ICollectionView.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The \\@see:ICollectionView that was passed in or a \\@see:CollectionView\n * created from the array that was passed in.\n */\nexport function asCollectionView(value: any, nullOK = true): CollectionView {\n    if (value == null && nullOK) {\n        return null;\n    }\n    /*const cv = tryCast(value, 'ICollectionView');\n    if (cv != null) {\n        return cv;\n    }\n    if (!isArray(value)) {\n        assert(false, 'Array or ICollectionView expected.');\n    }\n\t*/\n    return new CollectionView(value);\n}\n\n","//import {DateTime} from \"../core/index\";\n\nimport {Event} from '../event/Event';\nimport {EventArgs} from '../eventArgs/EventArgs';\nimport {CancelEventArgs} from '../eventArgs/CancelEventArgs';\nimport {assert, asFunction, asBoolean, clamp, isPrimitive, tryCast, asArray, asInt} from '../core';\n//import {ObservableArray} from \"./ObservableArray\";\n//import {IEditableCollectionView} from \"../collections/interface/IEditableCollectionView\";\n//import {IPagedCollectionView} from \"../collections/interface/IPagedCollectionView\";\n//import {INotifyCollectionChanged} from \"../collections/interface/INotifyCollectionChanged\";\n//import {IPredicate} from \"../collections/interface/IPredicate\";\n//import {ICollectionView} from \"./interface/ICollectionView\";\n//import {GroupDescription} from \"./GroupDescription\";\n//import {NotifyCollectionChangedEventArgs} from \"./eventArgs/NotifyCollectionChangedEventArgs\";\n//import {PageChangingEventArgs} from \"./eventArgs/PageChangingEventArgs\";\n//import {SortDescription} from \"./SortDescription\";\n//import {NotifyCollectionChangedAction} from \"../enum/collections/NotifyCollectionChangedAction\";\n//import {CollectionViewGroup} from \"./CollectionViewGroup\";\n\nimport {EventEmitter} from '@angular/core';\n//import {$$observable} from \"rxjs/symbol/observable\";\n\nimport { of } from 'rxjs/observable/of';\n/**\n * Class that implements the \\@see:ICollectionView interface to expose data in\n * regular JavaScript arrays.\n * \n * The \\@see:CollectionView class implements the following interfaces:\n * <ul>\n *   <li>\\@see:ICollectionView: provides current record management,\n *       custom sorting, filtering, and grouping.</li>\n *   <li>\\@see:IEditableCollectionView: provides methods for editing,\n *       adding, and removing items.</li>\n *   <li>\\@see:IPagedCollectionView: provides paging.</li>\n * </ul>\n * \n * To use the \\@see:CollectionView class, start by declaring it and passing a\n * regular array as a data source. Then configure the view using the\n * \\@see:filter, \\@see:sortDescriptions, \\@see:groupDescriptions, and\n * \\@see:pageSize properties. Finally, access the view using the \\@see:items\n * property. For example:\n * \n * <pre>\n *   // create a new CollectionView\n *   var cv = new wijmo.collections.CollectionView(myArray);\n *   // sort items by amount in descending order\n *   var sd = new wijmo.collections.SortDescription('amount', false);\n *   cv.sortDescriptions.push(sd);\n *   // show only items with amounts greater than 100\n *   cv.filter = function(item) { return item.amount > 100 };\n *   // show the sorted, filtered result on the console\n *   for (var i = 0; i &lt; cv.items.length; i++) {\n *     var item = cv.items[i];\n *     console.log(i + ': ' + item.name + ' ' + item.amount);\n *   }\n * </pre>\n * @deprecated\n */\nexport class CollectionView  {\n    _src: any[];\n   // _ncc: INotifyCollectionChanged;\n    _view: any[];\n    _pgView: any[];\n  //  _groups: CollectionViewGroup[];\n  //  _fullGroups: CollectionViewGroup[];\n    _digest: string;\n    _idx           = -1;\n   // _filter: IPredicate;\n   // _srtDsc        = new ObservableArray();\n   // _grpDesc       = new ObservableArray();\n    _newItem       = null;\n    _edtItem       = null;\n    _edtClone: any;\n    _pgSz          = 0;\n    _pgIdx         = 0;\n    _updating      = 0;\n    _itemCreator: Function;\n    _canFilter     = true;\n    _canGroup      = true;\n    _canSort       = true;\n    _canAddNew     = true;\n    _canCancelEdit = true;\n    _canRemove     = true;\n    _canChangePage = true;\n    _trackChanges  = false;\n   // _chgAdded      = new ObservableArray();\n   // _chgRemoved    = new ObservableArray();\n    //_chgEdited     = new ObservableArray();\n    _srtCvt: Function;\n/**\n * Initializes a new instance of a \\@see:CollectionView.\n * \n * \\@see:CollectionView.\n * @param {?=} sourceCollection Array that serves as a source for this\n */\nconstructor(sourceCollection?: any) {\n\t\tconsole.log(\"collection_view_constructor_started\");\n        // check that sortDescriptions contains SortDescriptions\n       \n\t\tthis._pgView = sourceCollection;\n        // initialize the source collection\n        this.sourceCollection = sourceCollection ;\n\t\tconsole.log(\"collection_view_constructor_finished\");\n    }\n/**\n * Gets or sets a function that creates new items for the collection.\n * \n * If the creator function is not supplied, the \\@see:CollectionView\n * will try to create an uninitilized item of the appropriate type.\n * \n * If the creator function is supplied, it should be a function that\n * takes no parameters and returns an initialized object of the proper\n * type for the collection.\n * @return {?}\n */\nget newItemCreator(): Function {\n        return this._itemCreator;\n    }\n/**\n * Gets or sets a function used to convert values when sorting.\n * \n * If provided, the function should take as parameters a\n * \\@see:SortDescription, a data item, and a value to convert,\n * and should return the converted value.\n * \n * This property provides a way to customize sorting. For example,\n * the \\@see:FlexGrid control uses it to sort mapped columns by\n * display value instead of by raw value.\n * \n * For example, the code below causes a \\@see:CollectionView to\n * sort the 'country' property, which contains country code integers,\n * using the corresponding country names:\n * \n * <pre>var countries = 'US,Germany,UK,Japan,Italy,Greece'.split(',');\n * collectionView.sortConverter = function (sd, item, value) {\n *   if (sd.property == 'countryMapped') {\n *     value = countries[value]; // convert country id into name\n *   }\n *   return value;\n * }</pre>\n * @return {?}\n */\nget sortConverter(): Function {\n        return this._srtCvt;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset sortConverter(value: Function) {\n        if (value != this._srtCvt) {\n           // this._srtCvt = asFunction(value, true);\n        }\n    }\n/**\n * Returns true if the caller queries for a supported interface.\n * \n * @param {?} interfaceName Name of the interface to look for.\n * @return {?}\n */\nimplementsInterface(interfaceName: string): boolean {\n        switch (interfaceName) {\n            case 'ICollectionView':\n            case 'IEditableCollectionView':\n            case 'IPagedCollectionView':\n            case 'INotifyCollectionChanged':\n                return true;\n        }\n        return false;\n    }\n/**\n * @return {?}\n */\nget items(): any[] {\n        return this._pgView;\n    }\n/**\n * Gets or sets a value that determines whether the control should\n * track changes to the data.\n * \n * If \\@see:trackChanges is set to true, the \\@see:CollectionView keeps\n * track of changes to the data and exposes them through the\n * \\@see:itemsAdded, \\@see:itemsRemoved, and \\@see:itemsEdited collections.\n * \n * Tracking changes is useful in situations where you need to to update\n * the server after the user has confirmed that the modifications are\n * valid.\n * \n * After committing or cancelling changes, use the \\@see:clearChanges method\n * to clear the \\@see:itemsAdded, \\@see:itemsRemoved, and \\@see:itemsEdited\n * collections.\n * \n * The \\@see:CollectionView only tracks changes made when the proper\n * \\@see:CollectionView methods are used (\\@see:editItem/\\@see:commitEdit,\n * \\@see:addNew/@see:commitNew, and \\@see:remove).\n * Changes made directly to the data are not tracked.\n * @return {?}\n */\nget trackChanges(): boolean {\n        return this._trackChanges;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackChanges(value: boolean) {\n       // this._trackChanges = asBoolean(value);\n    }\n/**\n * Sets the specified item to be the current item in the view.\n * \n * @param {?} item Item that will become current.\n * @return {?}\n */\nmoveCurrentTo(item: any): boolean {\n\t\tconsole.log(\"collection_view_1\");\n        return this.moveCurrentToPosition(this._pgView.indexOf(item));\n    }\n/**\n * Sets the first item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToFirst(): boolean {\n\tconsole.log(\"collection_view_2\");\n        return this.moveCurrentToPosition(0);\n    }\n/**\n * Sets the last item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToLast(): boolean {\n\t\tconsole.log(\"collection_view_3\");\n        return this.moveCurrentToPosition(this._pgView.length - 1);\n    }\n/**\n * Sets the item after the current item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToNext(): boolean {\n\tconsole.log(\"collection_view_4\");\n        return this.moveCurrentToPosition(this._idx + 1);\n    }\n/**\n * @param {?} index\n * @return {?}\n */\nmoveCurrentToPosition(index: number): boolean {\n        if (index >= -1 && index < this._pgView.length) {\n            const /** @type {?} */ e = new CancelEventArgs();\n            if (this._idx != index && this.onCurrentChanging(e)) {\n\n                // when moving away from current edit/new item, commit\n                if (this._edtItem && this._pgView[index] != this._edtItem) {\n                   // this.commitEdit();\n                }\n                if (this._newItem && this._pgView[index] != this._newItem) {\n                   // this.commitNew();\n                }\n\n                // update currency\n\t\t\t\tconsole.log(\"collection_view_updating_index!!!!!\");\n                this._idx = index;\n                this.onCurrentChanged();\n            }\n        }\n        return this._idx == index;\n    }\n/**\n * Occurs after the current item changes.\n */\ncurrentChanged = new EventEmitter();\n/**\n * Raises the \\@see:currentChanged event.\n * @param {?=} e\n * @return {?}\n */\nonCurrentChanged(e = EventArgs.empty) {\n        this.currentChanged.emit(e);\n    }\n\t\n\tcurrentChanging = new EventEmitter();\n/**\n * Raises the \\@see:currentChanging event.\n * \n * @param {?} e \\@see:CancelEventArgs that contains the event data.\n * @return {?}\n */\nonCurrentChanging(e: CancelEventArgs): boolean {\n        this.currentChanging.emit(e);\n        return !e.cancel;\n    }\n/**\n * Gets or sets the current item in the view.\n * @return {?}\n */\nget currentItem(): any {\n        return this._pgView && this._idx > -1 && this._idx < this._pgView.length\n            ? this._pgView[this._idx]\n            : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentItem(value: any) {\n        this.moveCurrentTo(value);\n    }\n/**\n * Gets the ordinal position of the current item in the view.\n * @return {?}\n */\nget currentPosition(): number {\n\t\tconsole.log(\"collection_view_current_postion:\"+this._idx);\n        return this._idx;\n    }\n/**\n * Removes the item at the specified index from the collection.\n * \n * @param {?} index Index of the item to be removed from the collection.\n * The index is relative to the view, not to the source collection.\n * @return {?}\n */\nremoveAt(index: number) {\n        index = asInt(index);\n        this.remove(this._pgView[index]);\n    }\n/**\n * @param {?} item\n * @return {?}\n */\nremove(item: any) {\n\t\tconsole.log(\"collection_view_remove_started\");\n        // handle cases where the user is adding or editing items\n        let /** @type {?} */ pendingNew = (item == this._newItem);\n        if (pendingNew) {\n            this._newItem = null;\n        }\n        if (item == this._edtItem) {\n            //this.cancelEdit();\n\t\t\tconsole.log(\"collection_view_cancel_edit\");\n        }\n\n        // honor canRemove\n\t\t/*\n        if (!this.canRemove) {\n            assert(false, 'cannot remove items (canRemove == false).');\n            return;\n        }\n\t\t*/\n        // find item\n        const /** @type {?} */ index = this._src.indexOf(item);\n        if (index > -1) {\n\n            // get current item to notify later\n            const /** @type {?} */ current = this.currentItem;\n\n            // remove item from source collection\n            this._updating++;\n            this._src.splice(index, 1); // **\n            this._updating--;\n\n            // refresh to update the edited item\n            //var index = this._pgView.indexOf(item);\n            const /** @type {?} */ digest = this._digest;\n\t\t\tconsole.log(\"collection_view_preform_refresh_before_on_remove\");\n\t\t\tthis._performRefresh();\n\t\t\tconsole.log(\"collection_view_preform_refresh_after_on_remove\");\n            // track changes (before notifying)\n            if (this._trackChanges == true) {\n\n                // removing something that was added\n\t\t\t\t/*\n                const idxAdded = this._chgAdded.indexOf(item);\n                if (idxAdded > -1) {\n                    this._chgAdded.removeAt(idxAdded);\n                }\n*/\n                // removing something that was edited\n\t\t\t\t/*\n                const idxEdited = this._chgEdited.indexOf(item);\n                if (idxEdited > -1) {\n                    this._chgEdited.removeAt(idxEdited);\n                }\n*/\n                // add to removed list unless it was pending and not added in this session\n\t\t\t\t/*\n                const idxRemoved = this._chgRemoved.indexOf(item);\n                if (idxRemoved < 0 && !pendingNew && idxAdded < 0) {\n                    //this._chgRemoved.push(item);\n                }\n\t\t\t\t*/\n            }\n\n            // notify (item removed or full refresh) (TFS 85001)\n\t\t\t/*\n            const paged = this.pageSize > 0 && this._pgIdx > -1;\n            if (paged || digest != this._getGroupsDigest(this.groups)) {\n                this._raiseCollectionChanged();\n            } else {\n                this._raiseCollectionChanged();\n            }\n\t\t\t*/\n\t\t\tthis.refresh(); // TODO: optimize\n            // raise currentChanged if needed\n            if (this.currentItem !== current) {\n                this.onCurrentChanged();\n            }\n        }\n\t\tconsole.log(\"collection_view_remove_finished\");\n    }\n/**\n * @return {?}\n */\nget sourceCollection(): any {\n        return this._src;\n    }\n/**\n * @return {?}\n */\nrefresh() {\n\t\tconsole.log(\"collection_view_refresh_started\");\n        // not while updating, adding, or editing\n        /*if (this._updating > 0 || this._newItem || this._edtItem) {\n            return;\n        }\n\t\t*/\n\n        // perform the refresh\n        this._performRefresh();\n\n        // notify listeners\n        this.onCollectionChanged();\n\t\tconsole.log(\"collection_view_refresh_finished\");\n    }\n/**\n * @return {?}\n */\n_performRefresh() {\n\t\tconsole.log(\"preform_refresh_started\");\n        // benchmark\n        //var start = new Date();\n/*\n        // save current item\n        const current = this.currentItem;\n\n        // create filtered view\n        if (!this._src) {\n            this._view = [];\n        } else if (!this._filter || !this.canFilter) {\n            this._view = (this._srtDsc.length > 0 && this.canSort)\n                ? this._src.slice(0) // clone source array\n                : this._src; // don't waste time cloning\n        } else {\n            this._view = this._performFilter(this._src);\n        }\n\n        // apply sort\n        if (this._srtDsc.length > 0 && this.canSort) {\n            this._performSort(this._view);\n        }\n\n        // apply grouping\n        this._groups     = this.canGroup ? this._createGroups(this._view) : null;\n        this._fullGroups = this._groups;\n        if (this._groups) {\n            this._view = this._mergeGroupItems(this._groups);\n        }\n\n        // apply paging to view\n        this._pgIdx  = clamp(this._pgIdx, 0, this.pageCount - 1);\n        this._pgView = this._getPageView();\n\n        // update groups to take paging into account\n        if (this._groups && this.pageCount > 1) {\n            this._groups = this._createGroups(this._pgView);\n            this._mergeGroupItems(this._groups);\n        }\n\n        // restore current item\n        let index = this._pgView.indexOf(current);\n        if (index < 0) {\n            index = Math.min(this._idx, this._pgView.length - 1);\n        }\n        this._idx = index;\n\n        // save group digest to optimize updates (TFS 109119)\n        this._digest = this._getGroupsDigest(this.groups);\n        // raise currentChanged if needed\n        if (this.currentItem !== current) {\n            this.onCurrentChanged();\n        }\n*/\n        //var now = new Date();\n        //console.log('refreshed in ' + (now.getTime() - start.getTime()) / 1000 + ' seconds');\n\t\tconsole.log(\"preform_refresh_finished\");\n    }\n/**\n * Occurs when the collection changes.\n */\ncollectionChanged = new EventEmitter();\n/**\n * Raises the \\@see:collectionChanged event.\n * \n * @return {?}\n */\nonCollectionChanged() {\n        this.collectionChanged.emit();\n    }\n/**\n * @param {?} sourceCollection\n * @return {?}\n */\nset sourceCollection(sourceCollection: any) {\n\t\t\n        if (sourceCollection != this._src) {\n\n            // keep track of current index\n            const /** @type {?} */ index = this.currentPosition;\n\n            // commit pending changes\n           // this.commitEdit();\n           // this.commitNew();\n\n            // disconnect old source\n            //todo ###remove me###\n            //if (this._ncc != null) {\n            //    this._ncc.collectionChanged.removeHandler(this._sourceChanged);\n            //}\n\n            // connect new source\n            this._src = asArray(sourceCollection, false);\n         //   this._ncc = <INotifyCollectionChanged>tryCast(this._src, 'INotifyCollectionChanged');\n\t\t\t/*\n            if (this._ncc) {\n                this._ncc.collectionChanged.subscribe(this._sourceChanged.bind(this));\n            }\n*/\n            // clear any changes\n           // this.clearChanges();\n\n            // refresh view\n           // this.refresh();\n           // this.moveCurrentToFirst();\n\n            // if we have no items, notify listeners that the current index changed\n            if (this.currentPosition < 0 && index > -1) {\n                this.onCurrentChanged();\n            }\n        }\n    }\n\n}\n\nfunction CollectionView_tsickle_Closure_declarations() {\n/** @type {?} */\nCollectionView.prototype._src;\n/** @type {?} */\nCollectionView.prototype._view;\n/** @type {?} */\nCollectionView.prototype._pgView;\n/** @type {?} */\nCollectionView.prototype._digest;\n/** @type {?} */\nCollectionView.prototype._idx;\n/** @type {?} */\nCollectionView.prototype._newItem;\n/** @type {?} */\nCollectionView.prototype._edtItem;\n/** @type {?} */\nCollectionView.prototype._edtClone;\n/** @type {?} */\nCollectionView.prototype._pgSz;\n/** @type {?} */\nCollectionView.prototype._pgIdx;\n/** @type {?} */\nCollectionView.prototype._updating;\n/** @type {?} */\nCollectionView.prototype._itemCreator;\n/** @type {?} */\nCollectionView.prototype._canFilter;\n/** @type {?} */\nCollectionView.prototype._canGroup;\n/** @type {?} */\nCollectionView.prototype._canSort;\n/** @type {?} */\nCollectionView.prototype._canAddNew;\n/** @type {?} */\nCollectionView.prototype._canCancelEdit;\n/** @type {?} */\nCollectionView.prototype._canRemove;\n/** @type {?} */\nCollectionView.prototype._canChangePage;\n/** @type {?} */\nCollectionView.prototype._trackChanges;\n/** @type {?} */\nCollectionView.prototype._srtCvt;\n/**\n * Occurs after the current item changes.\n * @type {?}\n */\nCollectionView.prototype.currentChanged;\n/** @type {?} */\nCollectionView.prototype.currentChanging;\n/**\n * Occurs when the collection changes.\n * @type {?}\n */\nCollectionView.prototype.collectionChanged;\n}\n\n","import {EventArgs} from './EventArgs';\n/**\n * Provides arguments for cancellable events.\n */\nexport class CancelEventArgs extends EventArgs {\n/**\n * Gets or sets a value that indicates whether the event should be canceled.\n */\ncancel = false;\n}\n\nfunction CancelEventArgs_tsickle_Closure_declarations() {\n/**\n * Gets or sets a value that indicates whether the event should be canceled.\n * @type {?}\n */\nCancelEventArgs.prototype.cancel;\n}\n\n","\n/**\n * Base class for event arguments.\n */\nexport class EventArgs {\n/**\n * Provides a value to use with events that do not have event data.\n */\nstatic empty = new EventArgs();\n}\n\nfunction EventArgs_tsickle_Closure_declarations() {\n/**\n * Provides a value to use with events that do not have event data.\n * @type {?}\n */\nEventArgs.empty;\n}\n","import {assert} from './assert';\nimport {isBoolean} from '../lang/is-boolean';\n/**\n * Asserts that a value is a Boolean.\n * \n * @param {?} value Value supposed to be Boolean.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The Boolean passed in.\n */\nexport function asBoolean(value: boolean, nullOK = false): boolean {\n    assert((nullOK && value == null) || isBoolean(value), 'Boolean expected.');\n    return value;\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isBoolean(value: any): boolean {\n    return typeof (value) == 'boolean';\n}\n","import {isArray} from '../lang/is-array';\nimport {assert} from '../asserts/assert';\n/**\n * Asserts that a value is an array.\n * \n * @param {?} value Value supposed to be an array.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The array passed in.\n */\nexport function asArray(value: any, nullOK = true): any[] {\n    assert((nullOK && value == null) || isArray(value), 'Array expected.');\n    return value;\n}\n","import {asFunction} from '../asserts/asFunction';\nimport {asNumber} from '../asserts/asNumber';\n/**\n * Calls a function on a timer with a parameter varying between zero and one.\n * \n * Use this function to create animations by modifying document properties\n * or styles on a timer.\n * \n * For example, the code below changes the opacity of an element from zero\n * to one in one second:\n * <pre>var element = document.getElementById('someElement');\n * animate(function(pct) {\n *   element.style.opacity = pct;\n * }, 1000);</pre>\n * \n * The function returns an interval ID that you can use to stop the\n * animation. This is typically done when you are starting a new animation\n * and wish to suspend other on-going animations on the same element.\n * For example, the code below keeps track of the interval ID and clears\n * if before starting a new animation:\n * <pre>var element = document.getElementById('someElement');\n * if (this._animInterval) {\n *   clearInterval(this._animInterval);\n * }\n * var self = this;\n * self._animInterval = animate(function(pct) {\n *   element.style.opacity = pct;\n *   if (pct == 1) {\n *     self._animInterval = null;\n *   }\n * }, 1000);</pre>\n * \n * @param {?} apply Callback function that modifies the document.\n * The function takes a single parameter that represents a percentage.\n * @param {?=} duration The duration of the animation, in milliseconds.\n * @param {?=} step The interval between animation frames, in milliseconds.\n * @return {?} An interval id that you can use to suspend the animation.\n */\nexport function animate(apply: Function, duration = 400, step = 35): number {\n    asFunction(apply);\n    asNumber(duration, false, true);\n    asNumber(step, false, true);\n    var /** @type {?} */ t     = 0;\n    const /** @type {?} */ timer = setInterval(function () {\n                                  let /** @type {?} */ pct = t / duration; // linear easing\n                                  pct     = Math.sin(pct * Math.PI / 2); // easeOutSin easing\n                                  pct *= pct; // swing easing\n                                  apply(pct);\n                                  t += step;\n                                  if (t >= duration) {\n                                      if (pct < 1) apply(1); // ensure apply(1) is called to finish\n                                      clearInterval(timer);\n                                  }\n                              }, step\n    );\n    return 1;\n}\n","import {assert} from './assert';\nimport {isNumber} from '../lang/is-number';\n/**\n * Asserts that a value is a number.\n * \n * @param {?} value Value supposed to be numeric.\n * @param {?=} nullOK Whether null values are acceptable.\n * @param {?=} positive Whether to accept only positive numeric values.\n * @return {?} The number passed in.\n */\nexport function asNumber(value: number, nullOK: boolean = false, positive: boolean = false): number {\n    assert((nullOK && value == null) || isNumber(value), 'Number expected.');\n    if (positive && value && value < 0) {\n        debugger;\n        throw new Error('Positive number expected.');\n    }\n    return value;\n}\n","import {assert} from './assert';\nimport {isFunction} from '../lang/is-function';\n/**\n * Asserts that a value is a function.\n * \n * @param {?} value Value supposed to be a function.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The function passed in.\n */\nexport function asFunction(value: any, nullOK = true): Function {\n    assert((nullOK && value == null) || isFunction(value), 'Function expected.');\n    return value;\n}\n","import {Point} from '../common/ui/point';\nimport {isNumber} from './lang/is-number';\n/**\n * Converts mouse or touch event arguments into a \\@see:Point in page coordinates.\n * @param {?} e\n * @return {?}\n */\nexport function mouseToPage(e: any): Point {\n\n    // accept Point objects\n    if (e instanceof Point) {\n        return e;\n    }\n\n    // accept touch events\n    if (e.touches && e.touches.length > 0) {\n        e = e.touches[0];\n    }\n\n    // accept mouse events\n    // NOTE: we should be able to use pageX/Y properties, but those may return\n    // wrong values (e.g. Android with zoomed screens); so we get the client\n    // coordinates and apply the page offset ourselves instead...\n    if (isNumber(e.clientX) && isNumber(e.clientY)) {\n        return new Point(e.clientX + pageXOffset, e.clientY + pageYOffset);\n    }\n\n    // wrong parameter type...\n    throw 'Mouse or touch event expected.';\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNumber(value: any): boolean {\n    return typeof (value) == 'number';\n}\n","import { asNumber } from '../../util/util';\n/**\n * Class that represents a point (with x and y coordinates).\n */\nexport class Point {\n/**\n * Gets or sets the x coordinate of this \\@see:Point.\n */\nx: number;\n/**\n * Gets or sets the y coordinate of this \\@see:Point.\n */\ny: number;\n/**\n * Initializes a new instance of a \\@see:Point object.\n * \n * @param {?=} x X coordinate of the new Point.\n * @param {?=} y Y coordinate of the new Point.\n */\nconstructor(x: number = 0, y: number = 0) {\n        this.x = asNumber(x, false, false);\n        this.y = asNumber(y, false, false);\n    }\n/**\n * Returns true if a \\@see:Point has the same coordinates as this \\@see:Point.\n * \n * @param {?} pt \\@see:Point to compare to this \\@see:Point.\n * @return {?}\n */\nequals(pt: Point): boolean {\n        return (pt instanceof Point) && this.x == pt.x && this.y == pt.y;\n    }\n/**\n * Creates a copy of this \\@see:Point.\n * @return {?}\n */\nclone(): Point {\n        return new Point(this.x, this.y);\n    }\n/**\n * @return {?}\n */\ntoString(): string {\n        return `[${this.x}, ${this.y}]`;\n    }\n}\n\nfunction Point_tsickle_Closure_declarations() {\n/**\n * Gets or sets the x coordinate of this \\@see:Point.\n * @type {?}\n */\nPoint.prototype.x;\n/**\n * Gets or sets the y coordinate of this \\@see:Point.\n * @type {?}\n */\nPoint.prototype.y;\n}\n\n","import {isObject} from './lang/is-object';\nimport {isFunction} from './lang/is-function';\nimport {assert} from './asserts/assert';\n/**\n * Copies properties from an object to another.\n * \n * This method is typically used to initialize controls and other Wijmo objects\n * by setting their properties and assigning event handlers.\n * \n * The destination object must define all the properties defined in the source,\n * or an error will be thrown.\n * \n * @param {?} dst The destination object.\n * @param {?} src The source object.\n * @return {?}\n */\nexport function copy(dst: any, src: any) {\n    for (let /** @type {?} */ key in src) {\n        assert(key in dst, 'Unknown key \"' + key + '\".');\n        const /** @type {?} */ value = src[key];\n        if (!dst._copy || !dst._copy(key, value)) { // allow overrides\n            if (dst[key] instanceof Event && isFunction(value)) {\n                dst[key].addHandler(value); // add event handler\n            } else if (isObject(value) && dst[key]) {\n                copy(dst[key], value); // copy sub-objects\n            } else {\n                dst[key] = value; // assign values\n            }\n        }\n    }\n}\n","\n/**\n * Throws an exception if a condition is false.\n * \n * @param {?} condition Condition expected to be true.\n * @param {?} msg Message of the exception if the condition is not true.\n * @return {?}\n */\nexport function assert(condition: boolean, msg: string) {\n    if (!condition) {\n        throw new Error('** Assertion failed in Wijmo: ' + msg);\n    }\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isFunction(value: any): boolean {\n    return typeof (value) == 'function';\n}\n","import {isArray} from './is-array';\nimport {isDate} from './is-date';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isObject(value: any): boolean {\n    return value != null && typeof value == 'object' && !isDate(value) && !isArray(value);\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isDate(value: any): boolean {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isArray(value: any): boolean {\n    return value instanceof Array;\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nexport class ClarityModule {\n/**\n * @return {?}\n */\nstatic forChild(): ModuleWithProviders {\n        return {\n            ngModule: ClarityModule,\n            providers: []\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [\n        //ALERT_DIRECTIVES,\n        //CHECKBOX_DIRECTIVES,\n        //CODE_HIGHLIGHT_DIRECTIVES,\n       // DATAGRID_DIRECTIVES,\n       // DROPDOWN_DIRECTIVES,\n       // LAYOUT_DIRECTIVES,\n       // MODAL_DIRECTIVES,\n       // NAVIGATION_DIRECTIVES,\n       // STACK_VIEW_DIRECTIVES,\n       // TABS_DIRECTIVES,\n       // TREE_VIEW_DIRECTIVES,\n       // WIZARD_DIRECTIVES,\n       // ICON_DIRECTIVES\n    ],\n    exports: [\n        //ALERT_DIRECTIVES,\n        //CHECKBOX_DIRECTIVES,\n        //CODE_HIGHLIGHT_DIRECTIVES,\n        //DATAGRID_DIRECTIVES,\n       // DROPDOWN_DIRECTIVES,\n       // LAYOUT_DIRECTIVES,\n       // MODAL_DIRECTIVES,\n       // NAVIGATION_DIRECTIVES,\n       // STACK_VIEW_DIRECTIVES,\n       // TABS_DIRECTIVES,\n       // TREE_VIEW_DIRECTIVES,\n       // WIZARD_DIRECTIVES,\n       // ICON_DIRECTIVES\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClarityModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClarityModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClarityModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Event","tryCast"],"mappings":"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"}
