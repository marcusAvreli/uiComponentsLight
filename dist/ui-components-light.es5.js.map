{"version":3,"file":"ui-components-light.es5.js","sources":["ts/ui-components-light.ts","ts/src/clarity-light/wigfrid/components/ComboBox/ComboBox.ts","ts/src/clarity-light/wigfrid/components/ListBox/ListBox.ts","ts/src/clarity-light/wigfrid/components/FormatItemEventArgs.ts","ts/src/clarity-light/wigfrid/components/DropDown/DropDown.ts","ts/src/clarity-light/wigfrid/enum/Key.ts","ts/src/clarity-light/wigfrid/components/Control.ts","ts/src/clarity-light/wigfrid/core/src/common/clipboard.ts","ts/src/clarity-light/wigfrid/core/src/common/Binding.ts","ts/src/clarity-light/wigfrid/core/src/common/ui/Rectangle.ts","ts/src/clarity-light/wigfrid/core/src/common/ui/color.ts","ts/src/clarity-light/wigfrid/core/src/globalization/Globalize.ts","ts/src/clarity-light/wigfrid/core/src/common/geom/vector3d.ts","ts/src/clarity-light/wigfrid/core/src/common/ui/size.ts","ts/src/clarity-light/wigfrid/core/src/common/geom/matrix.ts","ts/src/clarity-light/wigfrid/core/src/common/datetime/datetime.ts","ts/src/clarity-light/wigfrid/core/src/globalization/Localization.ts","ts/src/clarity-light/wigfrid/core/src/util/type/get-type.ts","ts/src/clarity-light/wigfrid/core/src/util/string-manipulation/to-hyphen-case.ts","ts/src/clarity-light/wigfrid/core/src/util/string-manipulation/to-header-case.ts","ts/src/clarity-light/wigfrid/core/src/util/string-manipulation/escape-html.ts","ts/src/clarity-light/wigfrid/core/src/util/math/to-fixed.ts","ts/src/clarity-light/wigfrid/core/src/util/math/clamp.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-present.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-undefined.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-primitive.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-null-or-whitespace.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/set-text.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/set-css.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/get-element.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/enable.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/toggle-class.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/remove-class.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/contains.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/closest.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/add-class.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/has-class.ts","ts/src/clarity-light/wigfrid/core/src/util/browser/max-css-width.ts","ts/src/clarity-light/wigfrid/core/src/util/browser/max-css-height.ts","ts/src/clarity-light/wigfrid/core/src/util/browser/is-rtl-mode.ts","ts/src/clarity-light/wigfrid/core/src/util/dom/create-element.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/asType.ts","ts/src/clarity-light/wigfrid/core/src/common/global.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/asString.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-string.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/asInt.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-int.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/asEnum.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/asDate.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/asCollectionView.ts","ts/src/clarity-light/wigfrid/collections/CollectionView.ts","ts/src/clarity-light/wigfrid/collections/CollectionViewGroup.ts","ts/src/clarity-light/wigfrid/collections/SortDescription.ts","ts/src/clarity-light/wigfrid/collections/eventArgs/PageChangingEventArgs.ts","ts/src/clarity-light/wigfrid/collections/GroupDescription.ts","ts/src/clarity-light/wigfrid/collections/ObservableArray.ts","ts/src/clarity-light/wigfrid/collections/eventArgs/NotifyCollectionChangedEventArgs.ts","ts/src/clarity-light/wigfrid/enum/collections/NotifyCollectionChangedAction.ts","ts/src/clarity-light/wigfrid/collections/ArrayBase.ts","ts/src/clarity-light/wigfrid/eventArgs/CancelEventArgs.ts","ts/src/clarity-light/wigfrid/event/Event.ts","ts/src/clarity-light/wigfrid/eventArgs/EventArgs.ts","ts/src/clarity-light/wigfrid/event/EventHandler.ts","ts/src/clarity-light/wigfrid/enum/Aggregate.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/asBoolean.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-boolean.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/asArray.ts","ts/src/clarity-light/wigfrid/core/src/util/animate/animate.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/asNumber.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/asFunction.ts","ts/src/clarity-light/wigfrid/core/src/util/mouseToPage.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-number.ts","ts/src/clarity-light/wigfrid/core/src/common/ui/point.ts","ts/src/clarity-light/wigfrid/core/src/util/copy.ts","ts/src/clarity-light/wigfrid/core/src/util/asserts/assert.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-function.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-object.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-date.ts","ts/src/clarity-light/wigfrid/core/src/util/lang/is-array.ts","ts/src/clarity-light/clarity.module.ts","ts/src/clarity-light/nav/clrResponsiveNavigationService.ts","ts/src/clarity-light/nav/clrResponsiveNavControlMessage.ts","ts/src/clarity-light/nav/clrResponsiveNavCodes.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {DropDown,ComboBox,ClarityModule} from './public_api';\n\nexport {ClrResponsiveNavigationService as ɵa} from './src/clarity-light/nav/clrResponsiveNavigationService';\nexport {Control as ɵb} from './src/clarity-light/wigfrid/components/Control';","\nimport {Color} from '../../core';\nimport {DropDown} from './../DropDown/DropDown';\nimport {ListBox} from './../ListBox/ListBox';\nimport {hasItems} from '../../core';\nimport {setSelectionRange} from '../../core';\nimport {clamp} from '../../core';\nimport {ICollectionView} from '../../collections/interface/ICollectionView';\nimport {asBoolean} from '../../core';\nimport {asFunction} from '../../core';\nimport {EventArgs} from '../../eventArgs/EventArgs';\nimport {CancelEventArgs} from '../../eventArgs/CancelEventArgs';\nimport {Key} from '../../enum/Key';\nimport {asNumber} from '../../core';\nimport {asString} from '../../core';\nimport {Event} from '../../event/Event';\n/**\n * The \\@see:ComboBox control allows users to pick strings from lists.\n * \n * The control automatically completes entries as the user types, and allows users\n * to show a drop-down list with the items available.\n * \n * Use the \\@see:selectedIndex or the \\@see:text properties to determine which\n * item is currently selected.\n * \n * The \\@see:isEditable property determines whether users can enter values that\n * are not present in the list.\n * \n * The example below creates a \\@see:ComboBox control and populates it with a list\n * of countries. The \\@see:ComboBox searches for the country as the user types.\n * The <b>isEditable</b> property is set to false, so the user is forced to\n * select one of the items in the list.\n * \n * The example also shows how to create and populate a \\@see:ComboBox using\n * an HTML <b>&lt;select;&gt</b> element with <b>&lt;option;&gt</b> child\n * elements.\n * \n * \\@fiddle:8HnLx\n */\nexport class ComboBox extends DropDown {\n\n\t// child elements\n\t_lbx: ListBox;\n\n\t// property storage\n\t_required = true;\n\t_editable = false;\n\n\t// private stuff\n\t_composing = false;\n\t_deleting = false;\n\t_settingText = false;\n\t_cvt: HTMLElement;\n\t_hdrPath: string;\n/**\n * Initializes a new instance of a \\@see:ComboBox control.\n * \n * @param {?} element The DOM element that hosts the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options The JavaScript object containing initialization data for the control.\n */\nconstructor(element: any, options?) {\n\t\tsuper(element);\n\n\t\t// disable auto-expand by default\n\t\tthis.autoExpandSelection = false;\n\n\t\t// handle IME\n\t\tthis.addEventListener(this._tbx, 'compositionstart', () => {\n\t\t\tthis._composing = true;\n\t\t});\n\t\tthis.addEventListener(this._tbx, 'compositionend', () => {\n\t\t\tthis._composing = false;\n\t\t\tthis._setText(this.text, true);\n\t\t});\n\n\t\t// use wheel to scroll through the items\n\t\tconst evt = 'onmousewheel' in document ? 'mousewheel' : 'DOMMouseScroll';\n\t\tthis.addEventListener(this.hostElement, evt, (e: MouseWheelEvent) => {\n\t\t\tif (this.containsFocus() && !this.isDroppedDown && !e.defaultPrevented) {\n\t\t\t\tif (this.selectedIndex > -1) {\n\t\t\t\t\tconst step         = clamp(e.wheelDelta || -e.detail, -1, +1);\n\t\t\t\t\tthis.selectedIndex = clamp(this.selectedIndex - step, 0, this.collectionView.items.length - 1);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// initializing from <select> tag\n\t\tif (this._orgTag == 'SELECT') {\n\t\t\tthis._copyOriginalAttributes(this.hostElement);\n\t\t\tthis._lbx._populateSelectElement(this.hostElement);\n\t\t}\n\n\t\t// initialize control options\n\t\tthis.initialize(options);\n\t}\n/**\n * Gets or sets the array or \\@see:ICollectionView object that contains the items to select from.\n * @return {?}\n */\nget itemsSource(): any {\n\t\treturn this._lbx.itemsSource;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset itemsSource(value: any) {\n\t\tthis._lbx.itemsSource = value;\n\t\tthis._updateBtn();\n\t}\n/**\n * Gets the \\@see:ICollectionView object used as the item source.\n * @return {?}\n */\nget collectionView(): ICollectionView {\n\t\treturn this._lbx.collectionView;\n\t}\n/**\n * Gets or sets the name of the property to use as the visual representation of the items.\n * @return {?}\n */\nget displayMemberPath(): string {\n\t\treturn this._lbx.displayMemberPath;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset displayMemberPath(value: string) {\n\t\tthis._lbx.displayMemberPath = value;\n\t\tconst /** @type {?} */ text = this.getDisplayText();\n\t\tif (this.text != text) {\n\t\t\tthis._setText(text, true);\n\t\t}\n\t}\n/**\n * Gets or sets the name of a property to use for getting the value displayed in the\n * control's input element.\n * \n * The default value for this property is null, which causes the control to display\n * the same content in the input element as in the selected item of the drop-down list.\n * \n * Use this property if you want to de-couple the value shown in the input element\n * from the values shown in the drop-down list. For example, the input element could\n * show an item's name and the drop-down list could show additional detail.\n * @return {?}\n */\nget headerPath(): string {\n\t\treturn this._hdrPath;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset headerPath(value: string) {\n\t\tthis._hdrPath = asString(value);\n\t\tconst /** @type {?} */ text = this.getDisplayText();\n\t\tif (this.text != text) {\n\t\t\tthis._setText(text, true);\n\t\t}\n\t}\n/**\n * Gets or sets the name of the property used to get the \\@see:selectedValue from the \\@see:selectedItem.\n * @return {?}\n */\nget selectedValuePath(): string {\n\t\treturn this._lbx.selectedValuePath;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValuePath(value: string) {\n\t\tthis._lbx.selectedValuePath = value;\n\t}\n/**\n * Gets or sets a value indicating whether the drop-down list displays items as plain text or as HTML.\n * @return {?}\n */\nget isContentHtml(): boolean {\n\t\treturn this._lbx.isContentHtml;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset isContentHtml(value: boolean) {\n\t\tif (value != this.isContentHtml) {\n\t\t\tthis._lbx.isContentHtml = asBoolean(value);\n\t\t\tlet /** @type {?} */ text = this.getDisplayText();\n\t\t\tif (this.text != text) {\n\t\t\t\tthis._setText(text, true);\n\t\t\t}\n\t\t}\n\t}\n/**\n * Gets or sets a function used to customize the values shown in the drop-down list.\n * The function takes two arguments, the item index and the default text or html, and\n * returns the new text or html to display.\n * \n * If the formatting function needs a scope (i.e. a meaningful 'this'\n * value), then remember to set the filter using the 'bind' function to\n * specify the 'this' object. For example:\n * \n * <pre>\n *   comboBox.itemFormatter = customItemFormatter.bind(this);\n *   function customItemFormatter(index, content) {\n *     if (this.makeItemBold(index)) {\n *       content = '&lt;b&gt;' + content + '&lt;/b&gt;';\n *     }\n *     return content;\n *   }\n * </pre>\n * @return {?}\n */\nget itemFormatter(): Function {\n\t\treturn this._lbx.itemFormatter;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset itemFormatter(value: Function) {\n\t\tthis._lbx.itemFormatter = asFunction(value);\n\t}\n/**\n * Gets or sets the index of the currently selected item in the drop-down list.\n * @return {?}\n */\nget selectedIndex(): number {\n\t\treturn this._lbx.selectedIndex;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number) {\n\t\tif (value != this.selectedIndex) {\n\t\t\tthis._lbx.selectedIndex = value;\n\t\t}\n\t\tconst /** @type {?} */ text = this.getDisplayText(value);\n\t\tif (this.text != text) {\n\t\t\tthis._setText(text, true);\n\t\t}\n\t}\n/**\n * Gets or sets the item that is currently selected in the drop-down list.\n * @return {?}\n */\nget selectedItem(): any {\n\t\treturn this._lbx.selectedItem;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedItem(value: any) {\n\t\tthis._lbx.selectedItem = value;\n\t}\n/**\n * Gets or sets the value of the \\@see:selectedItem, obtained using the \\@see:selectedValuePath.\n * @return {?}\n */\nget selectedValue(): any {\n\t\treturn this._lbx.selectedValue;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValue(value: any) {\n\t\tthis._lbx.selectedValue = value;\n\t}\n/**\n * Gets or sets whether the control value must be set to a non-null value\n * or whether it can be set to null (by deleting the content of the control).\n * @return {?}\n */\nget required(): boolean {\n\t\treturn this._required;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: boolean) {\n\t\tthis._required = asBoolean(value);\n\t}\n/**\n * Gets or sets a value that enables or disables editing of the text\n * in the input element of the \\@see:ComboBox (defaults to false).\n * @return {?}\n */\nget isEditable(): boolean {\n\t\treturn this._editable;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset isEditable(value: boolean) {\n\t\tthis._editable = asBoolean(value);\n\t}\n/**\n * Gets or sets the maximum height of the drop-down list.\n * @return {?}\n */\nget maxDropDownHeight(): number {\n\t\treturn this._lbx.maxHeight;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset maxDropDownHeight(value: number) {\n\t\tthis._lbx.maxHeight = asNumber(value);\n\t}\n/**\n * Gets or sets the maximum width of the drop-down list.\n * \n * The width of the drop-down list is also limited by the width of\n * the control itself (that value represents the drop-down's minimum width).\n * @return {?}\n */\nget maxDropDownWidth(): number {\n\t\tconst /** @type {?} */ lbx = /** @type {?} */(( <HTMLElement>this._dropDown));\n\t\treturn parseInt(lbx.style.maxWidth);\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset maxDropDownWidth(value: number) {\n\t\tconst /** @type {?} */ lbx          = /** @type {?} */(( <HTMLElement>this._dropDown));\n\t\tlbx.style.maxWidth = asNumber(value) + 'px';\n\t}\n/**\n * Gets the string displayed in the input element for the item at a\n * given index (always plain text).\n * \n * @param {?=} index The index of the item to retrieve the text for.\n * @return {?}\n */\ngetDisplayText(index = this.selectedIndex): string {\n\n\t\t// get display text directly from the headerPath if that was specified\n\t\tif (this.headerPath && index > -1 && hasItems(this.collectionView)) {\n\t\t\tconst /** @type {?} */ item = this.collectionView.items[index][this.headerPath];\n            let /** @type {?} */ text   = item != null ? item.toString() : '';\n\t\t\tif (this.isContentHtml) {\n\t\t\t\tif (!this._cvt) {\n\t\t\t\t\tthis._cvt = document.createElement('div');\n\t\t\t\t}\n\t\t\t\tthis._cvt.innerHTML = text;\n\t\t\t\ttext = this._cvt.textContent;\n\t\t\t}\n\t\t\treturn text;\n\t\t}\n\n\t\t// headerPath not specified, get text straight from the ListBox\n\t\treturn this._lbx.getDisplayText(index);\n\t}\n/**\n * Occurs when the value of the \\@see:selectedIndex property changes.\n */\nselectedIndexChanged = new Event();\n/**\n * Raises the \\@see:selectedIndexChanged event.\n * @param {?=} e\n * @return {?}\n */\nonSelectedIndexChanged(e?: EventArgs) {\n\t\tthis._updateBtn();\n\t\tthis.selectedIndexChanged.raise(this, e);\n\t\tconsole.log(\"droppped_down_setting_to_false\");\n\t\t//this.isDroppedDown = false;\n\t}\n/**\n * Gets the index of the first item that matches a given string.\n * \n * @param {?} text The text to search for.\n * @param {?} fullMatch A value indicating whether to look for a full match or just the start of the string.\n * @return {?} The index of the item, or -1 if not found.\n */\nindexOf(text: string, fullMatch: boolean): number {\n\t\tconst /** @type {?} */ cv = this.collectionView;\n\t\tif (hasItems(cv) && text) {\n\t\t\ttext = text.toString().toLowerCase();\n\t\t\tfor (let /** @type {?} */ i = 0; i < cv.items.length; i++) {\n\t\t\t\tconst /** @type {?} */ t = this.getDisplayText(i).toLowerCase();\n\t\t\t\tif (fullMatch) {\n\t\t\t\t\tif (t == text) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (t.indexOf(text) == 0) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n/**\n * Gets the \\@see:ListBox control shown in the drop-down.\n * @return {?}\n */\nget listBox(): ListBox {\n\t\treturn this._lbx;\n\t}\n/**\n * @param {?=} e\n * @return {?}\n */\nonLostFocus(e?: EventArgs) {\n\t\tif (this.isEditable && this.required && !this.text) {\n\t\t\tif (hasItems(this.collectionView)) {\n\t\t\t\tthis.selectedIndex = 0;\n\t\t\t}\n\t\t}\n\t\tsuper.onLostFocus(e);\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\nonIsDroppedDownChanging(e: CancelEventArgs): boolean {\n\t\tconsole.log(\"combo_box_dropped_down_changing:\"+e);\n\t\tvar /** @type {?} */ changing = hasItems(this.collectionView)\n\t\t\t? super.onIsDroppedDownChanging(e)\n\t\t\t: false;\n\t\tif(hasItems(this.collectionView)==0){\n\t\t\tconsole.log(\"combo_box_dropped_down_changing_is_empty\");\n\t\t\tchanging = true;\n\t\t}\n\t\t\n\t\tconsole.log(\"combo_box_dropped_down:\"+changing);\n\t\treturn changing;\n\t}\n/**\n * @param {?=} e\n * @return {?}\n */\nonIsDroppedDownChanged(e?: EventArgs) {\n\t\n\t\tsuper.onIsDroppedDownChanged(e);\n\t\tconsole.log(\"combo_box_dropped_down_changed\");\n\t\t\n\t\t\n\t\tif (this.isDroppedDown) {\n\t\t\tthis._lbx.showSelection();\n\t\t\tif (!this.isTouching) {\n\t\t\t\tthis.selectAll();\n\t\t\t}\n\t\t}\n\t}\n/**\n * @return {?}\n */\n_updateBtn() {\n\t\tconst /** @type {?} */ cv                = this.collectionView;\n\t\tconsole.log(\"combo_box_update_btn\");\n\t\tconsole.log(\"combo_box_update_btn:\"+hasItems(cv));\n\t\tconsole.log(\"combo_box_update_btn:\"+this._showBtn);\n\t\t\n\t\tthis._btn.style.display = this._showBtn && hasItems(cv) ? '' : 'none';\n\t\tconsole.log(\"combo_box_update_btn_display:\"+this._btn.style.display);\n\t}\n/**\n * @return {?}\n */\n_createDropDown() {\n\n\t\t// create the drop-down element\n\t\tthis._lbx = new ListBox(this._dropDown);\n\n\t\t// limit the size of the drop-down\n\t\tthis._lbx.maxHeight = 200;\n\n\t\t// update our selection when user picks an item from the ListBox\n\t\t// or when the selected index changes because the list changed\n\t\tthis._lbx.selectedIndexChanged.addHandler(() => {\n\t\t\tthis._updateBtn();\n\t\t\tthis.selectedIndex = this._lbx.selectedIndex;\n\t\t\tthis.onSelectedIndexChanged();\n\t\t});\n\n\t\t// update button display when item list changes\n\t\tthis._lbx.itemsChanged.addHandler(() => {\n\t\t\tthis._updateBtn();\n\t\t});\n\n\t\t// close the drop-down when the user clicks to select an item\n\t\tthis.addEventListener(this._dropDown, 'click', (e: MouseEvent) => {\n\t\t\tif (e.target != this._dropDown) { // an item, not the list itself...\n\t\t\t\t\n\t\t\t\tthis.isDroppedDown = false;\n\t\t\t}\n\t\t});\n\t}\n/**\n * @param {?} text\n * @param {?} fullMatch\n * @return {?}\n */\n_setText(text: string, fullMatch: boolean) {\n\n\t\t// not while composing IME text...\n\t\tif (this._composing) return;\n\n\t\t// prevent reentrant calls while moving CollectionView cursor\n\t\tif (this._settingText) return;\n\t\tthis._settingText = true;\n\n\t\t// make sure we have a string\n\t\tif (text == null) text = '';\n\t\ttext = text.toString();\n\n\t\t// get variables we need\n\t\tlet /** @type {?} */ index = this.selectedIndex;\n        const /** @type {?} */ cv = this.collectionView;\n        let /** @type {?} */ start = this._getSelStart(), /** @type {?} */\n            len   = -1;\n\n\t\t// require full match if deleting (to avoid auto-completion)\n\t\tif (this._deleting) {\n\t\t\tfullMatch = true;\n\t\t}\n\n\t\t// try autocompletion\n\t\tif (this._deleting) {\n\t\t\tindex = this.indexOf(text, true);\n\t\t} else {\n\t\t\tindex = this.indexOf(text, fullMatch);\n\t\t\tif (index < 0 && fullMatch) { // not found, try partial match\n\t\t\t\tindex = this.indexOf(text, false);\n\t\t\t}\n\t\t\tif (index < 0 && start > 0) { // not found, try up to cursor\n\t\t\t\tindex = this.indexOf(text.substr(0, start), false);\n\t\t\t}\n\t\t}\n\n\t\t// not found and not editable? restore old text and move cursor to matching part\n\t\tif (index < 0 && !this.isEditable && hasItems(cv) && this._oldText) {\n\t\t\tif (this.required || text) { // allow removing the value if not required\n\t\t\t\tindex = Math.max(0, this.indexOf(this._oldText, false));\n\t\t\t\tfor (let /** @type {?} */ i = 0; i < text.length && i < this._oldText.length; i++) {\n\t\t\t\t\tif (text[i] != this._oldText[i]) {\n\t\t\t\t\t\tstart = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (index > -1) {\n\t\t\tlen = start;\n\t\t\ttext = this.getDisplayText(index);\n\t\t}\n\n\t\t// update collectionView\n\t\tif (cv) {\n\t\t\tcv.moveCurrentToPosition(index);\n\t\t}\n\n\t\t// update element\n\t\tif (text != this._tbx.value) {\n\t\t\tthis._tbx.value = text;\n\t\t}\n\n\t\t// update text selection\n\t\tif (len > -1 && this.containsFocus() && !this.isTouching) {\n\t\t\tthis._setSelectionRange(len, text.length);\n\t\t}\n\n\t\t// call base class to fire textChanged event\n\t\tsuper._setText(text, fullMatch);\n\n\t\t// clear flags\n\t\tthis._deleting = false;\n\t\tthis._settingText = false;\n\t}\n/**\n * @param {?} text\n * @param {?} step\n * @return {?}\n */\nprivate _findNext(text: string, step: number): number {\n\t\tif (this.collectionView) {\n\t\t\ttext = text.toLowerCase();\n\t\t\tconst /** @type {?} */ len = this.collectionView.items.length;\n            let /** @type {?} */ index: number, /** @type {?} */\n                  t: string;\n\t\t\tfor (let /** @type {?} */ i = 1; i <= len; i++) {\n\t\t\t\tindex = (this.selectedIndex + i * step + len) % len;\n\t\t\t\tt = this.getDisplayText(index).toLowerCase();\n\t\t\t\tif (t.indexOf(text) == 0) {\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.selectedIndex;\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\n_keydown(e: KeyboardEvent) {\n\n\t\t// allow base class\n\t\tsuper._keydown(e);\n\n\t\t// if the base class handled this, we're done\n\t\tif (e.defaultPrevented) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if the input element is not visible, we're done (e.g. menu)\n\t\tif (this._elRef != this._tbx) {\n\t\t\treturn;\n\t\t}\n\n\t\t// remember we pressed a key when handling the TextChanged event\n\t\tif (e.keyCode == Key.Back || e.keyCode == Key.Delete) {\n\t\t\tthis._deleting = true;\n\t\t}\n\n\t\t// not if we have no items\n\t\tlet /** @type {?} */ cv = this.collectionView;\n\t\tif (!cv || !cv.items) {\n\t\t\treturn;\n\t\t}\n\n\t\t// handle key\n\t\tlet /** @type {?} */ start = -1;\n\t\tswitch (e.keyCode) {\n\n\t\t\t// select previous item (or wrap back to the last)\n\t\t\tcase Key.Up:\n\t\t\t\tstart = this._getSelStart();\n\t\t\t\tthis.selectedIndex = this._findNext(this.text.substr(0, start), -1);\n\t\t\t\tthis._setSelectionRange(start, this.text.length);\n\t\t\t\te.preventDefault();\n\t\t\t\tbreak;\n\n\t\t\t// select next item (or wrap back to the first, or show dropdown)\n\t\t\tcase Key.Down:\n\t\t\t\tstart = this._getSelStart();\n\t\t\t\tthis.selectedIndex = this._findNext(this.text.substr(0, start), +1);\n\t\t\t\tthis._setSelectionRange(start, this.text.length);\n\t\t\t\te.preventDefault();\n\t\t\t\tbreak;\n\t\t}\n\t}\n/**\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\nprivate _setSelectionRange(start: number, end: number) {\n\t\tif (this._elRef == this._tbx) {\n\t\t\tsetSelectionRange(this._tbx, start, end);\n\t\t}\n\t}\n/**\n * @return {?}\n */\nprivate _getSelStart(): number {\n\t\treturn this._tbx && this._tbx.value\n\t\t\t? this._tbx.selectionStart\n\t\t\t: 0;\n\t}\n\n\t//#endregion ** implementation\n}\n\nfunction ComboBox_tsickle_Closure_declarations() {\n/** @type {?} */\nComboBox.prototype._lbx;\n/** @type {?} */\nComboBox.prototype._required;\n/** @type {?} */\nComboBox.prototype._editable;\n/** @type {?} */\nComboBox.prototype._composing;\n/** @type {?} */\nComboBox.prototype._deleting;\n/** @type {?} */\nComboBox.prototype._settingText;\n/** @type {?} */\nComboBox.prototype._cvt;\n/** @type {?} */\nComboBox.prototype._hdrPath;\n/**\n * Occurs when the value of the \\@see:selectedIndex property changes.\n * @type {?}\n */\nComboBox.prototype.selectedIndexChanged;\n}\n\n","\nimport {Color} from '../../core';\nimport {Control} from '../Control';\nimport {isPresent} from '../../core';\nimport {FormatItemEventArgs} from './../FormatItemEventArgs';\nimport {asCollectionView} from '../../core';\nimport {asFunction} from '../../core';\nimport {asString} from '../../core';\nimport {hasItems} from '../../core';\nimport {asNumber} from '../../core';\nimport {toggleClass} from '../../core';\nimport {contains} from '../../core';\nimport {isObject} from '../../core';\nimport {asArray} from '../../core';\nimport {EventArgs} from '../../eventArgs/EventArgs';\nimport {escapeHtml} from '../../core';\nimport {hasClass} from '../../core';\nimport {Key} from '../../enum/Key';\nimport {tryCast} from '../../core';\nimport {Event} from '../../event/Event';\nimport {asBoolean} from '../../core';\n\nimport {ICollectionView} from '../../collections/interface/ICollectionView';\nimport {IEditableCollectionView} from '../../collections/interface/IEditableCollectionView';\nimport {NotifyCollectionChangedEventArgs} from '../../collections/eventArgs/NotifyCollectionChangedEventArgs';\nimport {Subscription} from 'rxjs/Subscription';\n/**\n * The \\@see:ListBox control displays a list of items which may contain\n * plain text or HTML, and allows users to select items with the mouse or\n * the keyboard.\n * \n * Use the \\@see:selectedIndex property to determine which item is currently\n * selected.\n * \n * You can populate a \\@see:ListBox using an array of strings or you can use\n * an array of objects, in which case the \\@see:displayPath property determines\n * which object property is displayed on the list.\n * \n * To display HTML rather than plain text, set the \\@see:isContentHtml property\n * to true.\n * \n * The example below creates a \\@see:ListBox control and populates it using\n * a 'countries' array. The control updates its \\@see:selectedIndex and\n * \\@see:selectedItem properties as the user moves the selection.\n * \n * \\@fiddle:8HnLx\n */\nexport class ListBox extends Control {\n\n\t// property storage\n\t_items: any; // any[] or ICollectionView\n\t_cv: ICollectionView;\n\t_itemFormatter: Function;\n\t_pathDisplay: string;\n\t_pathValue: string;\n\t_pathChecked: string;\n\t_html = false;\n\n\t// work variables\n\t_checking: boolean;\n\t_search = '';\n\t_toSearch: number;\nprivate subscription1 = new Subscription();\nprivate subscription2 = new Subscription();\n/**\n * Initializes a new instance of a \\@see:ListBox.\n * \n * @param {?} element The DOM element that hosts the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options The JavaScript object containing initialization data for the control.\n */\nconstructor(element: any, options?) {\n\t\tsuper(element);\n\n\t\t// instantiate and apply template\n\t\tthis.applyTemplate('wj-control wj-listbox wj-content', null, null);\n\n\t\t// initializing from <select> tag\n\t\tif (this._orgTag == 'SELECT') {\n\t\t\tthis._copyOriginalAttributes(this.hostElement);\n\t\t\tthis._populateSelectElement(this.hostElement);\n\t\t}\n\n\t\t// handle mouse and keyboard\n\t\tconst host = this.hostElement;\n\t\tthis.addEventListener(host, 'click', this._click.bind(this));\n\t\tthis.addEventListener(host, 'keydown', this._keydown.bind(this));\n\t\tthis.addEventListener(host, 'keypress', this._keypress.bind(this));\n\n\t\t// prevent wheel from propagating to parent elements\n\t\tthis.addEventListener(host, 'onmousewheel' in document ? 'mousewheel' : 'DOMMouseScroll', (e: MouseWheelEvent) => {\n\t\t\tif (host.scrollHeight > host.clientHeight) {\n\t\t\t\tif ((e.wheelDelta > 0 && host.scrollTop == 0) ||\n\t\t\t\t\t(e.wheelDelta < 0 && host.scrollTop + host.clientHeight >= host.scrollHeight)) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// initialize control options\n\t\tthis.initialize(options);\n\t}\n/**\n * Refreshes the list.\n * @return {?}\n */\nrefresh() {\n\t\tsuper.refresh();\n\t\tthis._populateList();\n\t}\n/**\n * Gets or sets the array or \\@see:ICollectionView object that contains the list items.\n * @return {?}\n */\nget itemsSource(): any {\n\t\treturn this._items;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset itemsSource(value: any) {\n\t\tif (this._items != value) {\n\n\t\t\t// unbind current collection view\n\t\t\tif (this._cv) {\n\t\t\t\tthis.subscription1.unsubscribe();\n\t\t\t\tthis.subscription2.unsubscribe();\n\t\t\t\t//this._cv.collectionChanged.removeHandler(this._cvCollectionChanged, this);\n\t\t\t\tthis._cv = null;\n\t\t\t}\n\n\t\t\t// save new data source and collection view\n\t\t\tthis._items = value;\n\t\t\tthis._cv = asCollectionView(value);\n\n\t\t\t// bind new collection view\n\t\t\tif (this._cv != null) {\n\t\t\t\tthis.subscription1 = this._cv.currentChanged.subscribe(data => this._cvCurrentChanged(this,data));\n\t\t\t\tthis.subscription2 = this._cv.collectionChanged.subscribe(data => this._cvCollectionChanged(this,data));\n\t\t\t}\n\n\t\t\t// update the list\n\t\t\tthis._populateList();\n\t\t\tthis.onItemsChanged();\n\t\t\tthis.onSelectedIndexChanged();\n\t\t}\n\t}\n/**\n * @param {?} index\n * @return {?}\n */\nprivate removeAt(index : number){\n\t\tconst /** @type {?} */ ecv = /** @type {?} */(( <IEditableCollectionView>tryCast(this._cv, 'IEditableCollectionView')));\n\t\tecv.removeAt(index);\n\t}\n/**\n * Gets the \\@see:ICollectionView object used as the item source.\n * @return {?}\n */\nget collectionView(): ICollectionView {\n\t\treturn this._cv;\n\t}\n/**\n * Gets or sets a value indicating whether items contain plain text or HTML.\n * @return {?}\n */\nget isContentHtml(): boolean {\n\t\treturn this._html;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset isContentHtml(value: boolean) {\n\t\tif (value != this._html) {\n\t\t\tthis._html = asBoolean(value);\n\t\t\tthis._populateList();\n\t\t}\n\t}\n/**\n * Gets or sets a function used to customize the values shown on the list.\n * The function takes two arguments, the item index and the default text or html, and\n * returns the new text or html to display.\n * \n * If the formatting function needs a scope (i.e. a meaningful 'this'\n * value), then remember to set the filter using the 'bind' function to\n * specify the 'this' object. For example:\n * \n * <pre>\n *   listBox.itemFormatter = customItemFormatter.bind(this);\n *   function customItemFormatter(index, content) {\n *     if (this.makeItemBold(index)) {\n *       content = '&lt;b&gt;' + content + '&lt;/b&gt;';\n *     }\n *     return content;\n *   }\n * </pre>\n * @return {?}\n */\nget itemFormatter(): Function {\n\t\treturn this._itemFormatter;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset itemFormatter(value: Function) {\n\t\tif (value != this._itemFormatter) {\n\t\t\tthis._itemFormatter = asFunction(value);\n\t\t\tthis._populateList();\n\t\t}\n\t}\n/**\n * Gets or sets the name of the property to use as the visual representation of the items.\n * @return {?}\n */\nget displayMemberPath(): string {\n\t\treturn this._pathDisplay;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset displayMemberPath(value: string) {\n\t\tif (value != this._pathDisplay) {\n\t\t\tthis._pathDisplay = asString(value);\n\t\t\tthis._populateList();\n\t\t}\n\t}\n/**\n * Gets or sets the name of the property used to get the \\@see:selectedValue\n * from the \\@see:selectedItem.\n * @return {?}\n */\nget selectedValuePath(): string {\n\t\treturn this._pathValue;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValuePath(value: string) {\n\t\tthis._pathValue = asString(value);\n\t}\n/**\n * Gets or sets the name of the property used to control the checkboxes\n * placed next to each item.\n * \n * Use this property to create multi-select lisboxes.\n * When an item is checked or unchecked, the control raises the \\@see:itemChecked event.\n * Use the \\@see:selectedItem property to retrieve the item that was checked or unchecked,\n * or use the \\@see:checkedItems property to retrieve the list of items that are currently\n * checked.\n * @return {?}\n */\nget checkedMemberPath() {\n\t\treturn this._pathChecked;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset checkedMemberPath(value: string) {\n\t\tif (value != this._pathChecked) {\n\t\t\tthis._pathChecked = asString(value);\n\t\t\tthis._populateList();\n\t\t}\n\t}\n/**\n * Gets the string displayed for the item at a given index.\n * \n * The string may be plain text or HTML, depending on the setting\n * of the \\@see:isContentHtml property.\n * \n * @param {?} index The index of the item.\n * @return {?}\n */\ngetDisplayValue(index: number): string {\n\n\t\t// get the text or html\n\t\tlet /** @type {?} */ item = null;\n\t\tif (index > -1 && hasItems(this._cv)) {\n\t\t\titem = this._cv.items[index];\n\t\t\tif (this.displayMemberPath) {\n\t\t\t\titem = item[this.displayMemberPath];\n\t\t\t}\n\t\t}\n\t\tlet /** @type {?} */ text = item != null ? item.toString() : '';\n\n\t\t// allow caller to override/modify the text or html\n\t\tif (this.itemFormatter) {\n\t\t\ttext = this.itemFormatter(index, text);\n\t\t}\n\n\t\t// return the result\n\t\treturn text;\n\t}\n/**\n * Gets the text displayed for the item at a given index (as plain text).\n * \n * @param {?} index The index of the item.\n * @return {?}\n */\ngetDisplayText(index: number): string {\n\t\tconst /** @type {?} */ children = this.hostElement.children, /** @type {?} */\n              item     = index > -1 && index < children.length\n                  ? /** @type {?} */(( <HTMLElement>children[index]))\n                  : null;\n\t\treturn item != null ? item.textContent : '';\n\t}\n/**\n * Gets or sets the index of the currently selected item.\n * @return {?}\n */\nget selectedIndex(): number {\n\t\treturn this._cv ? this._cv.currentPosition : -1;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number) {\n\t\tif (this._cv) {\n\t\t\tthis._cv.moveCurrentToPosition(asNumber(value));\n\t\t}\n\t}\n/**\n * Gets or sets the item that is currently selected.\n * @return {?}\n */\nget selectedItem(): any {\n\t\treturn this._cv ? this._cv.currentItem: null;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedItem(value: any) {\n\t\tif (this._cv) {\n\t\t\tthis._cv.moveCurrentTo(value);\n\t\t}\n\t}\n/**\n * Gets or sets the value of the \\@see:selectedItem obtained using the \\@see:selectedValuePath.\n * @return {?}\n */\nget selectedValue(): any {\n\t\tlet /** @type {?} */ item = this.selectedItem;\n\t\tif (item && this.selectedValuePath) {\n\t\t\titem = item[this.selectedValuePath];\n\t\t}\n\t\treturn item;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValue(value: any) {\n\t\tlet /** @type {?} */ path  = this.selectedValuePath, /** @type {?} */\n            index = -1;\n\t\tif (this._cv) {\n\t\t\tfor (let /** @type {?} */ i = 0; i < this._cv.items.length; i++) {\n\t\t\t\tconst /** @type {?} */ item = this._cv.items[i];\n\t\t\t\tif ((path && item[path] == value) || (!path && item == value)) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.selectedIndex = index;\n\t\t}\n\t}\n/**\n * Gets or sets the maximum height of the list.\n * @return {?}\n */\nget maxHeight(): number {\n\t\tconst /** @type {?} */ host = this.hostElement;\n\t\treturn host ? parseFloat(host.style.maxHeight) : null;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset maxHeight(value: number) {\n\t\tconst /** @type {?} */ host = this.hostElement;\n\t\tif (host) {\n\t\t\thost.style.maxHeight = asNumber(value) + 'px';\n\t\t}\n\t}\n/**\n * Highlights the selected item and scrolls it into view.\n * @return {?}\n */\nshowSelection() {\n\t\tconst /** @type {?} */ index    = this.selectedIndex, /** @type {?} */\n              host     = this.hostElement, /** @type {?} */\n              children = host.children;\n        let /** @type {?} */ e: HTMLElement;\n\n\t\t// highlight\n\t\tfor (let /** @type {?} */ i = 0; i < children.length; i++) {\n\t\t\te = /** @type {?} */(( <HTMLElement>children[i]));\n\t\t\ttoggleClass(e, 'wj-state-selected', i == index);\n\t\t}\n\n\t\t// scroll into view\n\t\tif (index > -1 && index < children.length) {\n\t\t\te = /** @type {?} */(( <HTMLElement>children[index]));\n\t\t\tconst /** @type {?} */ rco = e.getBoundingClientRect();\n\t\t\tconst /** @type {?} */ rcc = this.hostElement.getBoundingClientRect();\n\t\t\tif (rco.bottom > rcc.bottom) {\n\t\t\t\thost.scrollTop += rco.bottom - rcc.bottom;\n\t\t\t} else if (rco.top < rcc.top) {\n\t\t\t\thost.scrollTop -= rcc.top - rco.top;\n\t\t\t}\n\t\t}\n\n\t\t// make sure the focus is within the selected element (TFS 135278)\n\t\tif (index > -1 && this.containsFocus()) {\n\t\t\te = /** @type {?} */(( <HTMLElement>children[index]));\n\t\t\tif (e instanceof HTMLElement && !contains(e, document.activeElement)) {\n\t\t\t\te.focus();\n\t\t\t}\n\t\t}\n\t}\n/**\n * Gets the checked state of an item on the list.\n * \n * This method is applicable only on multi-select listboxes\n * (see the \\@see:checkedMemberPath property).\n * \n * @param {?} index Item index.\n * @return {?}\n */\ngetItemChecked(index: number): boolean {\n\t\tconst /** @type {?} */ item = this._cv.items[index];\n\t\tif (isObject(item) && this.checkedMemberPath) {\n\t\t\treturn item[this.checkedMemberPath];\n\t\t}\n\t\tconst /** @type {?} */ cb = this._getCheckbox(index);\n\t\treturn cb ? cb.checked : false;\n\t}\n/**\n * Sets the checked state of an item on the list.\n * \n * This method is applicable only on multi-select listboxes\n * (see the \\@see:checkedMemberPath property).\n * \n * @param {?} index Item index.\n * @param {?} checked Item's new checked state.\n * @return {?}\n */\nsetItemChecked(index: number, checked: boolean) {\n\t\tthis._setItemChecked(index, checked, true);\n\t}\n/**\n * Toggles the checked state of an item on the list.\n * This method is applicable only to multi-select listboxes\n * (see the \\@see:checkedMemberPath property).\n * \n * @param {?} index Item index.\n * @return {?}\n */\ntoggleItemChecked(index: number) {\n\t\tthis.setItemChecked(index, !this.getItemChecked(index));\n\t}\n/**\n * Gets or sets an array containing the items that are currently checked.\n * @return {?}\n */\nget checkedItems(): any[] {\n\t\tconst /** @type {?} */ arr = [];\n\t\tif (this._cv) {\n\t\t\tfor (let /** @type {?} */ i = 0; i < this._cv.items.length; i++) {\n\t\t\t\tif (this.getItemChecked(i)) {\n\t\t\t\t\tarr.push(this._cv.items[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset checkedItems(value: any[]) {\n\t\tconst /** @type {?} */ cv  = this._cv, /** @type {?} */\n              arr = asArray(value, false);\n\t\tif (cv && arr) {\n\t\t\tconst /** @type {?} */ pos = cv.currentPosition;\n\t\t\tfor (let /** @type {?} */ i = 0; i < cv.items.length; i++) {\n\t\t\t\tconst /** @type {?} */ item = cv.items[i];\n\t\t\t\tthis._setItemChecked(i, arr.indexOf(item) > -1, false);\n\t\t\t}\n\t\t\tcv.moveCurrentToPosition(pos);\n\t\t\tthis.onCheckedItemsChanged();\n\t\t}\n\t}\n/**\n * Occurs when the value of the \\@see:selectedIndex property changes.\n */\nselectedIndexChanged = new Event();\n/**\n * Raises the \\@see:selectedIndexChanged event.\n * @param {?=} e\n * @return {?}\n */\nonSelectedIndexChanged(e?: EventArgs) {\n\t\tthis.selectedIndexChanged.raise(this, e);\n\t}\n/**\n * Occurs when the list of items changes.\n */\nitemsChanged = new Event();\n/**\n * Raises the \\@see:itemsChanged event.\n * @param {?=} e\n * @return {?}\n */\nonItemsChanged(e?: EventArgs) {\n\t\tthis.itemsChanged.raise(this, e);\n\t}\n/**\n * Occurs before the list items are generated.\n */\nloadingItems = new Event();\n/**\n * Raises the \\@see:loadingItems event.\n * @param {?=} e\n * @return {?}\n */\nonLoadingItems(e?: EventArgs) {\n\t\tthis.loadingItems.raise(this, e);\n\t}\n/**\n * Occurs after the list items are generated.\n */\nloadedItems = new Event();\n/**\n * Raises the \\@see:loadedItems event.\n * @param {?=} e\n * @return {?}\n */\nonLoadedItems(e?: EventArgs) {\n\t\tthis.loadedItems.raise(this, e);\n\t}\n/**\n * Occurs when the current item is checked or unchecked by the user.\n * \n * This event is raised when the \\@see:checkedMemberPath is set to the name of a\n * property to add checkboxes to each item in the control.\n * \n * Use the \\@see:selectedItem property to retrieve the item that was checked or\n * unchecked.\n */\nitemChecked = new Event();\n/**\n * Raises the \\@see:itemCheched event.\n * @param {?=} e\n * @return {?}\n */\nonItemChecked(e?: EventArgs) {\n\t\tthis.itemChecked.raise(this, e);\n\t}\n/**\n * Occurs when the value of the \\@see:checkedItems property changes.\n */\ncheckedItemsChanged = new Event();\n/**\n * Raises the \\@see:checkedItemsChanged event.\n * @param {?=} e\n * @return {?}\n */\nonCheckedItemsChanged(e?: EventArgs) {\n\t\tthis.checkedItemsChanged.raise(this, e);\n\t}\n/**\n * Occurs when an element representing a list item has been created.\n * \n * This event can be used to format list items for display. It is similar\n * in purpose to the \\@see:itemFormatter property, but has the advantage\n * of allowing multiple independent handlers.\n */\nformatItem = new Event();\n/**\n * Raises the \\@see:formatItem event.\n * \n * @param {?} e \\@see:FormatItemEventArgs that contains the event data.\n * @return {?}\n */\nonFormatItem(e: FormatItemEventArgs) {\n\t\tthis.formatItem.raise(this, e);\n\t}\n/**\n * @param {?} index\n * @param {?} checked\n * @param {?=} notify\n * @return {?}\n */\n_setItemChecked(index: number, checked: boolean, notify = true) {\n\n\t\t// update data item\n\t\tconst /** @type {?} */ item = this._cv.items[index];\n\t\tif (isObject(item)) {\n\t\t\tconst /** @type {?} */ ecv = /** @type {?} */(( <IEditableCollectionView>tryCast(this._cv, 'IEditableCollectionView')));\n\t\t\tif (item[this.checkedMemberPath] != checked) {\n\t\t\t\tthis._checking = true;\n\t\t\t\tif (ecv) {\n\t\t\t\t\tecv.editItem(item);\n\t\t\t\t\titem[this.checkedMemberPath] = checked;\n\t\t\t\t\tecv.commitEdit();\n\t\t\t\t} else {\n\t\t\t\t\titem[this.checkedMemberPath] = checked;\n\t\t\t\t\tthis._cv.refresh();\n\t\t\t\t}\n\t\t\t\tthis._checking = false;\n\t\t\t}\n\t\t}\n\n\t\t// update checkbox value\n\t\tconst /** @type {?} */ cb = this._getCheckbox(index);\n\t\tif (cb && cb.checked != checked) {\n\t\t\tcb.checked = checked;\n\t\t}\n\n\t\t// fire events\n\t\tif (notify) {\n\t\t\tthis.onItemChecked();\n\t\t\tthis.onCheckedItemsChanged();\n\t\t}\n\t}\n/**\n * @param {?} sender\n * @param {?} e\n * @return {?}\n */\nprivate _cvCollectionChanged(sender: any, e: NotifyCollectionChangedEventArgs) {\n\t\tconsole.log(\"list_box_collection_view_changed_start\");\n\t\t\n\t\tif(e.action !=1){\n\t\tif (!this._checking) {\n\t\t\tthis._populateList();\n\t\t\tthis.onItemsChanged();\n\t\t}\n\t\t}else{\n\t\t\tconsole.log(\"list_box_collection_view_changed_is_remove\");\n\t\t}\n\t}\n/**\n * @param {?} sender\n * @param {?} e\n * @return {?}\n */\nprivate _cvCurrentChanged(sender: any, e: EventArgs) {\n\tconsole.log(\"cv_current_changed\");\n\t\n\t\tthis.showSelection();\n\t\tthis.onSelectedIndexChanged();\n\t}\n/**\n * @return {?}\n */\nprivate _populateList() {\n\t\tconsole.log(\"list_box_populate_list_start\");\n\t\t// get ready to populate\n\t\tconst /** @type {?} */ host = this.hostElement;\n\t\tif (host) {\n\n\t\t\t// remember if we have focus\n\t\t\tconst /** @type {?} */ focus = this.containsFocus();\n\n\t\t\t// fire event so user can clean up any current items\n\t\t\tthis.onLoadingItems();\n\n\t\t\t// populate\n\t\t\thost.innerHTML = '';\n\t\t\tif (this._cv) {\n\t\t\t\tfor (let /** @type {?} */ i = 0; i < this._cv.items.length; i++) {\n\t\t\t\t\tconsole.log(\"list_box_populate_list:\"+i);\n\t\t\t\t\t// get item text\n\t\t\t\t\tlet /** @type {?} */ text = this.getDisplayValue(i);\n\t\t\t\t\tif (this._html != true) {\n\t\t\t\t\t\ttext = escapeHtml(text);\n\t\t\t\t\t}\n\n\t\t\t\t\t// add checkbox (without tabindex attribute: TFS 135857)\n\t\t\t\t\tif (this.checkedMemberPath) {\n\t\t\t\t\t\tconst /** @type {?} */ checked = this._cv.items[i][this.checkedMemberPath];\n\t\t\t\t\t\ttext          = '<label><input type=\"checkbox\"' + (checked ? ' checked' : '') + '> ' + text + '</label>';\n\t\t\t\t\t}\n\n\t\t\t\t\t// build item\n\t\t\t\t\tconst /** @type {?} */ item = document.createElement('div');\n\t\t\t\t\titem.innerHTML = text;\n\t\t\t\t\titem.className = 'wj-listbox-item';\n\t\t\t\t\tif (hasClass( /** @type {?} */((<HTMLElement>item.firstChild)), 'wj-separator')) {\n\t\t\t\t\t\titem.className += ' wj-separator';\n\t\t\t\t\t}\n\n\t\t\t\t\t// allow custom formatting\n\t\t\t\t\tif (this.formatItem.hasHandlers) {\n\t\t\t\t\t\tconst /** @type {?} */ e = new FormatItemEventArgs(i, this._cv.items[i], item);\n\t\t\t\t\t\tthis.onFormatItem(e);\n\t\t\t\t\t}\n\n\t\t\t\t\t// add item to list\n\t\t\t\t\thost.appendChild(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// make sure the list is not totally empty\n\t\t\t// or min-height/max-height won't work properly in IE/Edge\n\t\t\tif (host.children.length == 0) {\n\t\t\t\thost.appendChild(document.createElement('div'));\n\t\t\t}\n\n\t\t\t// restore focus\n\t\t\tif (focus && !this.containsFocus()) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\n\t\t\t// scroll selection into view\n\t\t\tthis.showSelection();\n\n\t\t\t// fire event so user can hook up to items\n\t\t\tthis.onLoadedItems();\n\t\t}\n\t\tconsole.log(\"list_box_populate_list_finish\");\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _click(e: MouseEvent) {\n\n\t\t// select the item that was clicked\n\t\tconst /** @type {?} */ children = this.hostElement.children;\n\t\tfor (let /** @type {?} */ index = 0; index < children.length; index++) {\n\t\t\tif (contains(children[index], e.target)) {\n\t\t\t\tthis.selectedIndex = index;\t\t\t\t\n\t\t\t\tthis.removeAt(index);\n\t\t\t\tthis._cv.refresh();\t\t\n\t\t\t//\tthis.refresh();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// handle checkboxes\n\t\tif (this.checkedMemberPath && this.selectedIndex > -1) {\n\t\t\tconst /** @type {?} */ cb = this._getCheckbox(this.selectedIndex);\n\t\t\tif (cb == e.target) {\n\t\t\t\tthis.setItemChecked(this.selectedIndex, cb.checked);\n\t\t\t}\n\t\t}\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _keydown(e: KeyboardEvent) {\n\n\t\t// honor defaultPrevented\n\t\tif (e.defaultPrevented) return;\n\n\t\t// not interested in meta keys\n\t\tif (e.ctrlKey || e.shiftKey || e.altKey || e.metaKey) return;\n\n\t\t// handle the event\n\t\tvar /** @type {?} */ index = this.selectedIndex, /** @type {?} */\n\t\t\thost = this.hostElement, /** @type {?} */\n\t\t\tchildren = host.children;\n\t\tswitch (e.keyCode) {\n\t\t\tcase Key.Down:\n\t\t\t\te.preventDefault();\n\t\t\t\tif (index < children.length - 1) {\n\t\t\t\t\tthis.selectedIndex++;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase Key.Up:\n\t\t\t\te.preventDefault();\n\t\t\t\tif (index > 0) {\n\t\t\t\t\tthis.selectedIndex--;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase Key.Home:\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.selectedIndex = 0;\n\t\t\t\tbreak;\n\t\t\tcase Key.End:\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.selectedIndex = children.length - 1;\n\t\t\t\tbreak;\n\t\t\tcase Key.PageDown:\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.selectedIndex > -1) {\n\t\t\t\t\tvar /** @type {?} */ index = this.selectedIndex, /** @type {?} */\n\t\t\t\t\t\theight = host.offsetHeight, /** @type {?} */\n\t\t\t\t\t\toffset = 0;\n\t\t\t\t\tfor (var /** @type {?} */ i = index + 1; i < this._cv.items.length; i++) {\n\t\t\t\t\t\tvar /** @type {?} */ itemHeight = children[i].scrollHeight;\n\t\t\t\t\t\tif (offset + itemHeight > height) {\n\t\t\t\t\t\t\tthis.selectedIndex = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset += itemHeight;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.selectedIndex == index) {\n\t\t\t\t\t\tthis._cv.moveCurrentToLast();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase Key.PageUp:\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.selectedIndex > -1) {\n\t\t\t\t\tvar /** @type {?} */ index = this.selectedIndex, /** @type {?} */\n\t\t\t\t\t\theight = host.offsetHeight, /** @type {?} */\n\t\t\t\t\t\toffset = 0;\n\t\t\t\t\tfor (var /** @type {?} */ i = index - 1; i > 0; i--) {\n\t\t\t\t\t\tvar /** @type {?} */ itemHeight = children[i].scrollHeight;\n\t\t\t\t\t\tif (offset + itemHeight > height) {\n\t\t\t\t\t\t\tthis.selectedIndex = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset += itemHeight;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.selectedIndex == index) {\n\t\t\t\t\t\tthis._cv.moveCurrentToFirst();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase Key.Space:\n\t\t\t\tif (this.checkedMemberPath && this.selectedIndex > -1) {\n\t\t\t\t\tconst /** @type {?} */ cb = this._getCheckbox(this.selectedIndex);\n\t\t\t\t\tif (cb) {\n\t\t\t\t\t\tthis.hostElement.focus(); // take focus from the checkbox (FireFox, TFS 135857)\n\t\t\t\t\t\tthis.setItemChecked(this.selectedIndex, !cb.checked);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _keypress(e: KeyboardEvent) {\n\n\t\t// honor defaultPrevented\n\t\tif (e.defaultPrevented) return;\n\n\t\t// don't interfere with inner input elements (TFS 132081)\n\t\tif (e.target instanceof HTMLInputElement) return;\n\n\t\t// auto search\n\t\tif (e.charCode > 32 || (e.charCode == 32 && this._search)) {\n\t\t\te.preventDefault();\n\n\t\t\t// update search string\n\t\t\tthis._search += String.fromCharCode(e.charCode).toLowerCase();\n\t\t\tif (this._toSearch) {\n\t\t\t\tclearTimeout(this._toSearch);\n\t\t\t}\n\t\t\tthis._toSearch = window.setTimeout(() => {\n\t\t\t\tthis._toSearch = 0;\n\t\t\t\tthis._search = '';\n\t\t\t}, 600);\n\n\t\t\t// perform search\n\t\t\tif (this.hostElement) {\n\t\t\t\tconst /** @type {?} */ cnt = this.hostElement.childElementCount;\n\t\t\t\tfor (let /** @type {?} */ off = this._search.length > 1 ? 0 : 1; off < cnt; off++) {\n\t\t\t\t\tconst /** @type {?} */ idx = (this.selectedIndex + off) % cnt, /** @type {?} */\n                          txt = this.getDisplayText(idx).trim().toLowerCase();\n\t\t\t\t\tif (txt.indexOf(this._search) == 0) {\n\t\t\t\t\t\tthis.selectedIndex = idx;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/**\n * @param {?} index\n * @return {?}\n */\nprivate _getCheckbox(index: number) {\n\t\tif (!this.hostElement) {\n\t\t\treturn null;\n\t\t}\n\t\tconst /** @type {?} */ li = this.hostElement.children[index];\n\t\treturn /** @type {?} */(( <HTMLInputElement>li.querySelector('input[type=checkbox]')));\n\t}\n/**\n * @param {?} hostElement\n * @return {?}\n */\n_populateSelectElement(hostElement: HTMLElement) {\n\t\tconst /** @type {?} */ children = hostElement.children, /** @type {?} */\n              items    = [];\n        let /** @type {?} */ selIndex   = -1;\n\t\tfor (let /** @type {?} */ i = 0; i < children.length; i++) {\n\t\t\tconst /** @type {?} */ child = /** @type {?} */(( <HTMLElement>children[i]));\n\t\t\tif (child.tagName == 'OPTION') {\n\n\t\t\t\t// keep track of selected item\n\t\t\t\tif (child.hasAttribute('selected')) {\n\t\t\t\t\tselIndex = items.length;\n\t\t\t\t}\n\n\t\t\t\t// add option to collectionView\n\t\t\t\tif (child.innerHTML) {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\thdr: child.innerHTML,\n\t\t\t\t\t\tval: child.getAttribute('value'),\n\t\t\t\t\t\tcmdParam: child.getAttribute('cmd-param')\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\thdr: '<div class=\"wj-separator\"/>'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// remove child from host\n\t\t\t\thostElement.removeChild(child);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\t// apply items to control\n\t\tif (items) {\n\t\t\tthis.displayMemberPath = 'hdr';\n\t\t\tthis.selectedValuePath = 'val';\n\t\t\tthis.itemsSource = items;\n\t\t\tthis.selectedIndex = selIndex;\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nfunction ListBox_tsickle_Closure_declarations() {\n/** @type {?} */\nListBox.prototype._items;\n/** @type {?} */\nListBox.prototype._cv;\n/** @type {?} */\nListBox.prototype._itemFormatter;\n/** @type {?} */\nListBox.prototype._pathDisplay;\n/** @type {?} */\nListBox.prototype._pathValue;\n/** @type {?} */\nListBox.prototype._pathChecked;\n/** @type {?} */\nListBox.prototype._html;\n/** @type {?} */\nListBox.prototype._checking;\n/** @type {?} */\nListBox.prototype._search;\n/** @type {?} */\nListBox.prototype._toSearch;\n/** @type {?} */\nListBox.prototype.subscription1;\n/** @type {?} */\nListBox.prototype.subscription2;\n/**\n * Occurs when the value of the \\@see:selectedIndex property changes.\n * @type {?}\n */\nListBox.prototype.selectedIndexChanged;\n/**\n * Occurs when the list of items changes.\n * @type {?}\n */\nListBox.prototype.itemsChanged;\n/**\n * Occurs before the list items are generated.\n * @type {?}\n */\nListBox.prototype.loadingItems;\n/**\n * Occurs after the list items are generated.\n * @type {?}\n */\nListBox.prototype.loadedItems;\n/**\n * Occurs when the current item is checked or unchecked by the user.\n * \n * This event is raised when the \\@see:checkedMemberPath is set to the name of a\n * property to add checkboxes to each item in the control.\n * \n * Use the \\@see:selectedItem property to retrieve the item that was checked or\n * unchecked.\n * @type {?}\n */\nListBox.prototype.itemChecked;\n/**\n * Occurs when the value of the \\@see:checkedItems property changes.\n * @type {?}\n */\nListBox.prototype.checkedItemsChanged;\n/**\n * Occurs when an element representing a list item has been created.\n * \n * This event can be used to format list items for display. It is similar\n * in purpose to the \\@see:itemFormatter property, but has the advantage\n * of allowing multiple independent handlers.\n * @type {?}\n */\nListBox.prototype.formatItem;\n}\n\n","import {asNumber, asType} from '../core/index';\nimport {EventArgs} from '../eventArgs/EventArgs';\n/**\n * Provides arguments for the \\@see:formatItem event.\n */\nexport class FormatItemEventArgs extends EventArgs {\n\t_index: number;\n\t_data: any;\n\t_item: HTMLElement;\n/**\n * Initializes a new instance of a \\@see:FormatItemEventArgs.\n * \n * @param {?} index Index of the item being formatted.\n * @param {?} data Data item being formatted.\n * @param {?} item Element that represents the list item to be formatted.\n */\nconstructor(index: number, data: any, item: HTMLElement) {\n\t\tsuper();\n\t\tthis._index = asNumber(index);\n\t\tthis._data = data;\n\t\tthis._item = asType(item, HTMLElement);\n\t}\n/**\n * Gets the index of the data item in the list.\n * @return {?}\n */\nget index():  number {\n\t\treturn this._index;\n\t}\n/**\n * Gets the data item being formatted.\n * @return {?}\n */\nget data(): any {\n\t\treturn this._data;\n\t}\n/**\n * Gets a reference to the element that represents the list item to be formatted.\n * @return {?}\n */\nget item(): HTMLElement {\n\t\treturn this._item;\n\t}\n}\n\nfunction FormatItemEventArgs_tsickle_Closure_declarations() {\n/** @type {?} */\nFormatItemEventArgs.prototype._index;\n/** @type {?} */\nFormatItemEventArgs.prototype._data;\n/** @type {?} */\nFormatItemEventArgs.prototype._item;\n}\n\n","import {Color} from '../../core';\nimport {Control} from '../Control';\n//import {showPopup, hidePopup} from '../../core/popup'\n\nimport {setSelectionRange} from '../../core';\nimport {CancelEventArgs} from '../../eventArgs/CancelEventArgs';\nimport {asBoolean} from '../../core';\nimport {EventArgs} from '../../eventArgs/EventArgs';\nimport {contains} from '../../core';\nimport {Key} from '../../enum/Key';\nimport {Event} from '../../event/Event';\n/**\n * DropDown control (abstract).\n * \n * Contains an input element and a button used to show or hide the drop-down.\n * \n * Derived classes must override the _createDropDown method to create whatever\n * editor they want to show in the drop down area (a list of items, a calendar,\n * a color editor, etc).\n */\nexport class DropDown extends Control {\n\n    // child elements\n    _tbx: HTMLInputElement;\n    _elRef: HTMLElement;\n    _btn: HTMLElement;\n    _dropDown: HTMLElement;\n\n    // property storage\n    _showBtn    = true;\n    _autoExpand = true;\n\n    // private stuff\n    _oldText: string;\n/**\n * Gets or sets the template used to instantiate \\@see:DropDown controls.\n */\nstatic controlTemplate = '<div style=\"position:relative\" class=\"wj-template\">' +\n        '<div class=\"wj-input\">' +\n        '<div class=\"wj-input-group wj-input-btn-visible\">' +\n        '<input wj-part=\"input\" type=\"text\" class=\"wj-form-control\" />' +\n        '<span wj-part=\"btn\" class=\"wj-input-group-btn\" tabindex=\"-1\">' +\n        '<button class=\"wj-btn wj-btn-default\" type=\"button\" tabindex=\"-1\">' +\n        '<span class=\"wj-glyph-down\"></span>' +\n        '</button>' +\n        '</span>' +\n        '</div>' +\n        '</div>' +\n        '<div wj-part=\"dropdown\" class=\"wj-content wj-dropdown-panel\" ' +\n        'style=\"display:none;position:absolute;z-index:100;width:auto\">' +\n        '</div>' +\n        '</div>';\n/**\n * Initializes a new instance of a \\@see:DropDown control.\n * \n * @param {?} element The DOM element that hosts the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options The JavaScript object containing initialization data for the control.\n */\nconstructor(element: any, options?) {\n        super(element, null, true);\n\n        // instantiate and apply template\n        const tpl = this.getTemplate();\n        this.applyTemplate(\n            'wj-control wj-dropdown wj-content', tpl, {\n                _tbx     : 'input',\n                _btn     : 'btn',\n                _dropDown: 'dropdown'\n            }, 'input'\n        );\n\n        // set reference element (used for positioning the drop-down)\n        this._elRef = this._tbx;\n\n        // disable autocomplete (important for mobile browsers including Chrome/Android)\n        this._tbx.autocomplete = 'off';\n\n        // create drop-down element, update button display\n        this._createDropDown();\n        this._updateBtn();\n\n        // update focus state when the drop-down loses focus\n        this.addEventListener(\n            this._dropDown, 'blur', () => {\n                this._updateFocusState();\n            }, true\n        );\n\n        // keyboard events (the same handlers are used for the control and for the drop-down)\n        const kd = this._keydown.bind(this);\n        this.addEventListener(this.hostElement, 'keydown', kd);\n        this.addEventListener(this.dropDown, 'keydown', kd);\n\n        // textbox events\n        this.addEventListener(\n            this._tbx, 'input', () => {\n                this._setText(this.text, false);\n            }\n        );\n        this.addEventListener(\n            this._tbx, 'click', () => {\n                if (this._autoExpand) {\n                    this._expandSelection(); // expand the selection to the whole number/word that was clicked\n                }\n            }\n        );\n\n        // in case the drop-down is shown but the control is not (e.g. context menu)\n        this.addEventListener(\n            this.dropDown, 'focus', () => {\n                this._updateFocusState();\n            }\n        );\n\n        // IE 9 does not fire an input event when the user removes characters from input\n        // filled by keyboard, cut, or drag operations.\n        // https://developer.mozilla.org/en-US/docs/Web/Events/input\n        // so subscribe to keyup and set the text just in case (TFS 111189)\n        if (document.doctype && navigator.appVersion.indexOf('MSIE 9') > -1) {\n            this.addEventListener(\n                this._tbx, 'keyup', () => {\n                    this._setText(this.text, false);\n                }\n            );\n        }\n\n        // handle clicks on the drop-down button\n        this.addEventListener(this._btn, 'click', this._btnclick.bind(this));\n\n        // stop propagation of clicks on the drop-down element\n        // (since they are not children of the hostElement, which can confuse\n        // elements such as Bootstrap menus)\n        this.addEventListener(\n            this._dropDown, 'click', (e) => {\n                e.stopPropagation();\n            }\n        );\n\n        // initializing from <input> tag\n        if (this._orgTag == 'INPUT') {\n            this._copyOriginalAttributes(this._tbx);\n        }\n    }\n/**\n * Gets or sets the text shown on the control.\n * @return {?}\n */\nget text(): string {\n        return this._tbx.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset text(value: string) {\n        if (value != this.text) {\n            this._setText(value, true);\n        }\n    }\n/**\n * Gets the HTML input element hosted by the control.\n * \n * Use this property in situations where you want to customize the\n * attributes of the input element.\n * @return {?}\n */\nget inputElement(): HTMLInputElement {\n        return this._tbx;\n    }\n/**\n * Gets or sets the string shown as a hint when the control is empty.\n * @return {?}\n */\nget placeholder(): string {\n        return this._tbx.placeholder;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset placeholder(value: string) {\n        this._tbx.placeholder = value;\n    }\n/**\n * Gets or sets a value that indicates whether the drop down is currently visible.\n * @return {?}\n */\nget isDroppedDown(): boolean {\n        return this._dropDown.style.display != 'none';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset isDroppedDown(value: boolean) {\n        value = asBoolean(value) && !this.disabled;\n\t\tconsole.log(\"is_dropped_down\");\n        if (value != this.isDroppedDown && this.onIsDroppedDownChanging(new CancelEventArgs())) {\n            const /** @type {?} */ dd = this._dropDown;\n            if (value) {\n                if (!dd.style.minWidth) {\n                    dd.style.minWidth = this.hostElement.getBoundingClientRect().width + 'px';\n                }\n\t\t\t\tconsole.log(\"dropped_down_setting_block\");\n                dd.style.display = 'block';\n                this._updateDropDown();\n            } else {\n                if (this.containsFocus()) {\n                    if (!this.isTouching || !this.showDropDownButton) {\n                        this.selectAll();\n                    }\n                }\n               // hidePopup(dd);\n\t\t\t   console.log(\"dropped_down_setting_none\");\n\t\t\t      dd.style.display='none';\n            }\n            this._updateFocusState();\n            this.onIsDroppedDownChanged();\n        }\n    }\n/**\n * Gets the drop down element shown when the \\@see:isDroppedDown\n * property is set to true.\n * @return {?}\n */\nget dropDown(): HTMLElement {\n        return this._dropDown;\n    }\n/**\n * Gets or sets a value that indicates whether the control should display a drop-down button.\n * @return {?}\n */\nget showDropDownButton(): boolean {\n        return this._showBtn;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset showDropDownButton(value: boolean) {\n        this._showBtn = asBoolean(value);\n        this._updateBtn();\n    }\n/**\n * Gets or sets a value that indicates whether the control should automatically expand the\n * selection to whole words/numbers when the control is clicked.\n * @return {?}\n */\nget autoExpandSelection(): boolean {\n        return this._autoExpand;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset autoExpandSelection(value: boolean) {\n        this._autoExpand = asBoolean(value);\n    }\n/**\n * Sets the focus to the control and selects all its content.\n * @return {?}\n */\nselectAll() {\n        if (this._elRef == this._tbx) {\n            setSelectionRange(this._tbx, 0, this.text.length);\n        }\n    }\n/**\n * Occurs when the value of the \\@see:text property changes.\n */\ntextChanged = new Event();\n/**\n * Raises the \\@see:textChanged event.\n * @param {?=} e\n * @return {?}\n */\nonTextChanged(e?: EventArgs) {\n        this.textChanged.raise(this, e);\n    }\n/**\n * Occurs before the drop down is shown or hidden.\n */\nisDroppedDownChanging = new Event();\n/**\n * Raises the \\@see:isDroppedDownChanging event.\n * @param {?} e\n * @return {?}\n */\nonIsDroppedDownChanging(e: CancelEventArgs): boolean {\n        this.isDroppedDownChanging.raise(this, e);\n        return !e.cancel;\n    }\n/**\n * Occurs after the drop down is shown or hidden.\n */\nisDroppedDownChanged = new Event();\n/**\n * Raises the \\@see:isDroppedDownChanged event.\n * @param {?=} e\n * @return {?}\n */\nonIsDroppedDownChanged(e?: EventArgs) {\n        this.isDroppedDownChanged.raise(this, e);\n    }\n/**\n * @param {?=} e\n * @return {?}\n */\nonGotFocus(e?: EventArgs) {\n        if (!this.isTouching) {\n            this.selectAll();\n        }\n        super.onGotFocus(e);\n    }\n/**\n * @param {?=} e\n * @return {?}\n */\nonLostFocus(e?: EventArgs) {\n        this._commitText();\n        if (!this.containsFocus()) {\n            this.isDroppedDown = false;\n        }\n        super.onLostFocus(e);\n    }\n/**\n * @return {?}\n */\ncontainsFocus(): boolean {\n        return super.containsFocus() || contains(this._dropDown, document.activeElement);\n    }\n/**\n * @return {?}\n */\ndispose() {\n        this.isDroppedDown = false;\n        super.dispose();\n    }\n/**\n * @param {?=} fullUpdate\n * @return {?}\n */\nrefresh(fullUpdate = true) {\n        super.refresh(fullUpdate);\n\n        // update popup/focus\n        if (this.isDroppedDown) {\n            if (getComputedStyle(this.hostElement).display != 'none') {\n                const /** @type {?} */ ae = /** @type {?} */(( <HTMLElement>document.activeElement));\n               // showPopup(this._dropDown, this.hostElement);\n                if (ae instanceof HTMLElement && ae != document.activeElement) {\n                    ae.focus();\n                }\n            }\n        }\n    }\n/**\n * @return {?}\n */\n_handleResize() {\n        if (this.isDroppedDown) {\n            this.refresh();\n        }\n    }\n/**\n * @return {?}\n */\n_expandSelection() {\n        const /** @type {?} */ tbx = this._tbx, /** @type {?} */\n              val = tbx.value;\n        let /** @type {?} */ start = tbx.selectionStart, /** @type {?} */\n              end = tbx.selectionEnd;\n        if (val && start == end) {\n            const /** @type {?} */ ct = this._getCharType(val, start);\n            if (ct > -1) {\n                for (; end < val.length; end++) {\n                    if (this._getCharType(val, end) != ct) {\n                        break;\n                    }\n                }\n                for (; start > 0; start--) {\n                    if (this._getCharType(val, start - 1) != ct) {\n                        break;\n                    }\n                }\n                if (start != end) {\n                    tbx.setSelectionRange(start, end);\n                }\n            }\n        }\n    }\n/**\n * @param {?} text\n * @param {?} pos\n * @return {?}\n */\n_getCharType(text: string, pos: number) {\n        const /** @type {?} */ chr = text[pos];\n        if (chr >= '0' && chr <= '9') return 0;\n        if ((chr >= 'a' && chr <= 'z') || (chr >= 'A' && chr <= 'Z')) return 1;\n        return -1;\n    }\n/**\n * @param {?} e\n * @return {?}\n */\n_keydown(e: KeyboardEvent) {\n\n        // honor defaultPrevented\n        if (e.defaultPrevented) return;\n\n        // handle key\n        switch (e.keyCode) {\n\n            // close dropdown on tab, escape, enter\n            case Key.Tab:\n            case Key.Escape:\n            case Key.Enter:\n                this.isDroppedDown = false;\n                break;\n\n            // toggle drop-down on F4, alt up/down\n            case Key.F4:\n            case Key.Down:\n            case Key.Up:\n                if (e.keyCode == Key.F4 || e.altKey) {\n                    this.isDroppedDown = !this.isDroppedDown;\n                    if (!this.isDroppedDown) {\n                        this._tbx.focus();\n                    }\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n/**\n * @param {?} e\n * @return {?}\n */\n_btnclick(e: MouseEvent) {\n        this.isDroppedDown = !this.isDroppedDown;\n    }\n/**\n * @param {?} text\n * @param {?} fullMatch\n * @return {?}\n */\n_setText(text: string, fullMatch: boolean) {\n\n        // make sure we have a string\n        if (text == null) text = '';\n        text = text.toString();\n\n        // update element\n        if (text != this._tbx.value) {\n            this._tbx.value = text;\n        }\n\n        // fire change event\n        if (text != this._oldText) {\n            this._oldText = text;\n            this.onTextChanged();\n        }\n    }\n/**\n * @return {?}\n */\n_updateBtn() {\n        this._btn.tabIndex      = -1;\n        this._btn.style.display = this._showBtn ? '' : 'none';\n    }\n/**\n * @return {?}\n */\n_createDropDown() {\n        // override in derived classes\n    }\n/**\n * @return {?}\n */\n_commitText() {\n        // override in derived classes\n    }\n/**\n * @return {?}\n */\n_updateDropDown() {\n        if (this.isDroppedDown) {\n            this._commitText();\n           // showPopup(this._dropDown, this.hostElement);\n\t\t   console.log(\"dropped_down_1\");\n        }else{\n\t\tconsole.log(\"dropped_down_2\");\n\t\t}\n    }\n}\n\nfunction DropDown_tsickle_Closure_declarations() {\n/**\n * Gets or sets the template used to instantiate \\@see:DropDown controls.\n * @type {?}\n */\nDropDown.controlTemplate;\n/** @type {?} */\nDropDown.prototype._tbx;\n/** @type {?} */\nDropDown.prototype._elRef;\n/** @type {?} */\nDropDown.prototype._btn;\n/** @type {?} */\nDropDown.prototype._dropDown;\n/** @type {?} */\nDropDown.prototype._showBtn;\n/** @type {?} */\nDropDown.prototype._autoExpand;\n/** @type {?} */\nDropDown.prototype._oldText;\n/**\n * Occurs when the value of the \\@see:text property changes.\n * @type {?}\n */\nDropDown.prototype.textChanged;\n/**\n * Occurs before the drop down is shown or hidden.\n * @type {?}\n */\nDropDown.prototype.isDroppedDownChanging;\n/**\n * Occurs after the drop down is shown or hidden.\n * @type {?}\n */\nDropDown.prototype.isDroppedDownChanged;\n}\n\n","\nexport type Key = number;\nexport let Key: any = {};\nKey.Back = 8;\nKey.Tab = 9;\nKey.Enter = 13;\nKey.Escape = 27;\nKey.Space = 32;\nKey.PageUp = 33;\nKey.PageDown = 34;\nKey.End = 35;\nKey.Home = 36;\nKey.Left = 37;\nKey.Up = 38;\nKey.Right = 39;\nKey.Down = 40;\nKey.Delete = 46;\nKey.F1 = 112;\nKey.F2 = 113;\nKey.F3 = 114;\nKey.F4 = 115;\nKey.F5 = 116;\nKey.F6 = 117;\nKey.F7 = 118;\nKey.F8 = 119;\nKey.F9 = 120;\nKey.F10 = 121;\nKey.F11 = 122;\nKey.F12 = 123;\nKey[Key.Back] = \"Back\";\nKey[Key.Tab] = \"Tab\";\nKey[Key.Enter] = \"Enter\";\nKey[Key.Escape] = \"Escape\";\nKey[Key.Space] = \"Space\";\nKey[Key.PageUp] = \"PageUp\";\nKey[Key.PageDown] = \"PageDown\";\nKey[Key.End] = \"End\";\nKey[Key.Home] = \"Home\";\nKey[Key.Left] = \"Left\";\nKey[Key.Up] = \"Up\";\nKey[Key.Right] = \"Right\";\nKey[Key.Down] = \"Down\";\nKey[Key.Delete] = \"Delete\";\nKey[Key.F1] = \"F1\";\nKey[Key.F2] = \"F2\";\nKey[Key.F3] = \"F3\";\nKey[Key.F4] = \"F4\";\nKey[Key.F5] = \"F5\";\nKey[Key.F6] = \"F6\";\nKey[Key.F7] = \"F7\";\nKey[Key.F8] = \"F8\";\nKey[Key.F9] = \"F9\";\nKey[Key.F10] = \"F10\";\nKey[Key.F11] = \"F11\";\nKey[Key.F12] = \"F12\";\n","import {Size} from './../core/index';\nimport {EventArgs} from '../eventArgs/EventArgs';\nimport {Event} from '../event/Event';\nimport {CollectionView} from '../collections/CollectionView';\nimport {\n    assert,\n    getElement,\n    addClass,\n    createElement,\n    asType,\n    contains,\n    asBoolean,\n    enable,\n    copy,\n    toggleClass\n} from '../core/index';\n/**\n * Base class for all Wijmo controls.\n * \n * The \\@see:Control class handles the association between DOM elements and the\n * actual control. Use the \\@see:hostElement property to get the DOM element\n * that is hosting a control, or the \\@see:getControl method to get the control\n * hosted in a given DOM element.\n * \n * The \\@see:Control class also provides a common pattern for invalidating and\n * refreshing controls, for updating the control layout when its size changes,\n * and for handling the HTML templates that define the control structure.\n */\nexport class Control {\nprivate static _DATA_KEY = 'wj-Control';\nprivate static _REFRESH_INTERVAL = 10;\nprivate static _wme: HTMLElement;           // watermark element\n    static _touching: boolean;\nprivate _focus = false;\nprivate _updating = 0;\nprivate _fullUpdate = false;\nprivate _toInv: number;\nprivate _szCtl: Size;\nprivate _e: HTMLElement;\nprivate _orgOuter: string;\nprivate _orgInner: string;\nprivate _listeners;                         // list of event listeners attached to this control\n    _orgTag: string;                            // host element's original tag (if not DIV)\n    _orgAtts: NamedNodeMap;\n/**\n * Initializes a new instance of a \\@see:Control and attaches it to a DOM element.\n * \n * @param {?} element The DOM element that will host the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options JavaScript object containing initialization data for the control.\n * @param {?=} invalidateOnResize Whether the control should be invalidated when it is resized.\n */\nconstructor(element: any, options = null, invalidateOnResize = false) {\n\n        // check that the element is not in use\n        assert(Control.getControl(element) == null, 'Element is already hosting a control.');\n\n        // get the host element\n        let host = getElement(element);\n        assert(host != null, 'Cannot find the host element.');\n\n        // save host and original content (to restore on dispose)\n        this._orgOuter = host.outerHTML;\n        this._orgInner = host.innerHTML;\n\n        // replace <input> and <select> elements with <div> and save their attributes\n        if (host.tagName == 'INPUT' || host.tagName == 'SELECT') {\n            this._orgAtts = host.attributes;\n            this._orgTag = host.tagName;\n            host = this._replaceWithDiv(host);\n        }\n\n        // save host element and store control instance in element\n        // (to retrieve with Control.getControl(element))\n        this._e = host;\n        host[Control._DATA_KEY] = this;\n\n        // update layout when user resizes the browser\n        if (invalidateOnResize == true) {\n            this._szCtl = new Size(host.offsetWidth, host.offsetHeight);\n            const hr = this._handleResize.bind(this);\n            this.addEventListener(window, 'resize', hr);\n        }\n\n        // fire events for got/lost focus\n        this.addEventListener(host, 'focus', () => {\n            this._updateFocusState();\n        }, true);\n        this.addEventListener(host, 'blur', () => {\n            this._updateFocusState();\n        }, true);\n\n        // handle disabled controls\n        // (pointer-events requires IE11, doesn't prevent wheel at all)\n        const hd = this._handleDisabled.bind(this);\n        this.addEventListener(host, 'mousedown', hd, true);\n        this.addEventListener(host, 'mouseup', hd, true);\n        this.addEventListener(host, 'click', hd, true);\n        this.addEventListener(host, 'dblclick', hd, true);\n        this.addEventListener(host, 'keydown', hd, true);\n        this.addEventListener(host, 'onmousewheel' in document ? 'mousewheel' : 'DOMMouseScroll', hd, true);\n\n        // keep track of touch actions at the document level\n        // (no need to add/remove event handlers to every Wijmo control)\n        if (Control._touching == null) {\n            Control._touching = false;\n            if ('ontouchstart' in window || 'onpointerdown' in window) {\n                const b  = document.body,\n                      ts = this._handleTouchStart,\n                      te = this._handleTouchEnd;\n                if ('ontouchstart' in window) { // Chrome, FireFox, Safari\n                    b.addEventListener('touchstart', ts);\n                    b.addEventListener('touchend', te);\n                    b.addEventListener('touchcancel', te);\n                    b.addEventListener('touchleave', te);\n                } else if ('onpointerdown' in window) { // IE\n                    b.addEventListener('pointerdown', ts);\n                    b.addEventListener('pointerup', te);\n                    b.addEventListener('pointerout', te);\n                    b.addEventListener('pointercancel', te);\n                    b.addEventListener('pointerleave', te);\n                }\n            }\n        }\n\n    }\n/**\n * Gets the HTML template used to create instances of the control.\n * \n * This method traverses up the class hierarchy to find the nearest ancestor that\n * specifies a control template. For example, if you specify a prototype for the\n * \\@see:ComboBox control, it will override the template defined by the \\@see:DropDown\n * base class.\n * @return {?}\n */\ngetTemplate(): string {\n        for (let /** @type {?} */ p = Object.getPrototypeOf(this); p; p = Object.getPrototypeOf(p)) {\n\n           \n\t\t\treturn p.constructor.controlTemplate;\n\t\t\t\n\n        }\n\t\treturn null;\n\t\t}\n/**\n * Applies the template to a new instance of a control, and returns the root element.\n * \n * This method should be called by constructors of templated controls.\n * It is responsible for binding the template parts to the\n * corresponding control members.\n * \n * For example, the code below applies a template to an instance\n * of an \\@see:InputNumber control. The template must contain elements\n * with the 'wj-part' attribute set to 'input', 'btn-inc', and 'btn-dec'.\n * The control members '_tbx', '_btnUp', and '_btnDn' will be assigned\n * references to these elements.\n * \n * <pre>this.applyTemplate('wj-control wj-inputnumber', template, {\n *   _tbx: 'input',\n *   _btnUp: 'btn-inc',\n *   _btnDn: 'btn-dec'\n * }, 'input');</pre>\n * \n * @param {?} classNames Names of classes to add to the control's host element.\n * @param {?} template An HTML string that defines the control template.\n * @param {?} parts A dictionary of part variables and their names.\n * @param {?=} namePart Name of the part to be named after the host element. This\n * determines how the control submits data when used in forms.\n * @return {?}\n */\napplyTemplate(classNames: string, template: string, parts: Object, namePart?: string): HTMLElement {\n        const /** @type {?} */ host = this._e;\n\n        // apply standard classes to host element\n        if (classNames) {\n            addClass(host, classNames);\n        }\n\n        // convert string into HTML template and append to host\n        let /** @type {?} */ tpl = null;\n        if (template) {\n            tpl = createElement(template);\n            tpl = host.appendChild(tpl);\n        }\n\n        // make sure the control can get the focus\n        // this is a little tricky:\n        // - Chrome won't give divs the focus unless we set tabIndex to something > -1\n        // - But if we do set it and the control contains input elements, the back-tab key won't work\n        // so we set the tabIndex to -1 or zero depending on whether the control contains input elements.\n        // http://wijmo.com/topic/shift-tab-not-working-for-input-controls-in-ff-and-chrome/, TFS 123457\n        if (host && !host.getAttribute('tabindex')) {\n            host.tabIndex = host.querySelector('input') ? -1 : 0;\n        }\n\n        // bind control variables to template parts\n        if (parts) {\n            for (let /** @type {?} */ part in parts) {\n                const /** @type {?} */ wjPart = parts[part];\n                this[part]   = tpl.querySelector('[wj-part=\"' + wjPart + '\"]');\n\n                // look in the root as well (querySelector doesn't...)\n                if (this[part] == null && tpl.getAttribute('wj-part') == wjPart) {\n                    this[part] = tpl;\n                }\n\n                // make sure we found the part\n                if (this[part] == null) {\n                    throw 'Missing template part: \"' + wjPart + '\"';\n                }\n\n                // copy/move attributes from host to input element\n                if (wjPart == namePart) {\n\n                    // copy parent element's name attribute to the namePart element\n                    // (to send data when submitting forms).\n                    let /** @type {?} */ att = host.attributes['name'];\n                    if (att && att.value) {\n                        this[part].setAttribute('name', att.value);\n                    }\n\n                    // transfer access key\n                    att = host.attributes['accesskey'];\n                    if (att && att.value) {\n                        this[part].setAttribute('accesskey', att.value);\n                        host.removeAttribute('accesskey');\n                    }\n                }\n            }\n        }\n\n        // return template\n        return tpl;\n    }\n/**\n * Disposes of the control by removing its association with the host element.\n * \n * The \\@see:dispose method automatically removes any event listeners added\n * with the \\@see:addEventListener method.\n * \n * Calling the \\@see:dispose method is important in applications that create\n * and remove controls dynamically. Failing to dispose of the controls may\n * cause memory leaks.\n * @return {?}\n */\ndispose() {\n\n        // dispose of any child controls\n        const /** @type {?} */ cc = this._e.querySelectorAll('.wj-control');\n        for (let /** @type {?} */ i = 0; i < cc.length; i++) {\n            const /** @type {?} */ ctl = Control.getControl(cc[i]);\n            if (ctl) {\n                ctl.dispose();\n            }\n        }\n\n        // cancel any pending refreshes\n        if (this._toInv) {\n            clearTimeout(this._toInv);\n        }\n\n        // remove all HTML event listeners\n        this.removeEventListener();\n\n        // remove all Wijmo event listeners\n        // (without getting the value for all properties)\n        for (var /** @type {?} */ prop in this) {\n            if (prop.length > 2 && prop.indexOf('on') == 0) {\n                var /** @type {?} */ evt = /** @type {?} */(( <Event>this[prop[2].toLowerCase() + prop.substr(3)]));\n                if (evt instanceof Event) {\n                    evt.removeAllHandlers();\n                }\n            }\n        }\n\n        // if the control has a collectionView property, remove handlers to stop receiving notifications\n        // REVIEW: perhaps optimize by caching the CollectionView properties?\n        const /** @type {?} */ cv = /** @type {?} */(( <CollectionView>this['collectionView']));\n        if (cv instanceof CollectionView) {\n            /*for (var prop in cv) {\n                var evt = <Event>cv[prop];\n                if (evt instanceof Event) {\n                    evt.removeHandler(null, this);\n                }\n            }\n\t\t\t*/\n        }\n\n        // restore original content\n        if (this._e.parentNode) {\n            this._e.outerHTML = this._orgOuter;\n        }\n\n        // done\n        this._e[Control._DATA_KEY] = null;\n        this._e = this._orgOuter = this._orgInner = this._orgAtts = this._orgTag = null;\n    }\n/**\n * Gets the control that is hosted in a given DOM element.\n * \n * @param {?} element The DOM element that is hosting the control, or a selector for the host element (e.g. '#theCtrl').\n * @return {?}\n */\nstatic getControl(element: any): Control {\n        const /** @type {?} */ e = getElement(element);\n        return e ? asType(e[Control._DATA_KEY], Control, true) : null;\n    }\n/**\n * Gets the DOM element that is hosting the control.\n * @return {?}\n */\nget hostElement(): HTMLElement {\n        return this._e;\n    }\n/**\n * Sets the focus to this control.\n * @return {?}\n */\nfocus() {\n        this._e.focus();\n    }\n/**\n * Checks whether this control contains the focused element.\n * @return {?}\n */\ncontainsFocus(): boolean {\n\n        // test for disposed controls\n        if (!this._e) {\n            return false;\n        }\n\n        // scan child controls (they may have popups, TFS 112676)\n        const /** @type {?} */ c = this._e.getElementsByClassName('wj-control');\n        for (let /** @type {?} */ i = 0; i < c.length; i++) {\n            const /** @type {?} */ ctl = Control.getControl(c[i]);\n            if (ctl && ctl != this && ctl.containsFocus()) {\n                return true;\n            }\n        }\n\n        // check for actual HTML containment\n        return contains(this._e, /** @type {?} */(( <HTMLElement>document.activeElement)));\n    }\n/**\n * Invalidates the control causing an asynchronous refresh.\n * \n * @param {?=} fullUpdate Whether to update the control layout as well as the content.\n * @return {?}\n */\ninvalidate(fullUpdate = true) {\n        this._fullUpdate = this._fullUpdate || fullUpdate;\n        if (this._toInv) {\n            clearTimeout(this._toInv);\n            this._toInv = null;\n        }\n        if (!this.isUpdating) {\n            this._toInv = window.setTimeout(() => {\n                this.refresh(this._fullUpdate);\n            }, Control._REFRESH_INTERVAL);\n        }\n    }\n/**\n * Refreshes the control.\n * \n * @param {?=} fullUpdate Whether to update the control layout as well as the content.\n * @return {?}\n */\nrefresh(fullUpdate = true) {\n        if (!this.isUpdating && this._toInv) {\n            clearTimeout(this._toInv);\n            this._toInv = null;\n            this._fullUpdate = false;\n        }\n        // derived classes should override this...\n    }\n/**\n * Invalidates all Wijmo controls contained in an HTML element.\n * \n * Use this method when your application has dynamic panels that change\n * the control's visibility or dimensions. For example, splitters, accordions,\n * and tab controls usually change the visibility of its content elements.\n * In this case, failing to notify the controls contained in the element\n * may cause them to stop working properly.\n * \n * If this happens, you must handle the appropriate event in the dynamic\n * container and call the \\@see:Control.invalidateAll method so the contained\n * Wijmo controls will update their layout information properly.\n * \n * @param {?=} e Container element. If set to null, all Wijmo controls\n * on the page will be invalidated.\n * @return {?}\n */\nstatic invalidateAll(e? : HTMLElement) {\n        if (!e) e = document.body;\n        const /** @type {?} */ ctl = Control.getControl(e);\n        if (ctl) {\n            ctl.invalidate();\n        }\n        if (e.children) {\n            for (let /** @type {?} */ i = 0; i < e.children.length; i++) {\n                Control.invalidateAll( /** @type {?} */((<HTMLElement>e.children[i])));\n            }\n        }\n    }\n/**\n * Refreshes all Wijmo controls contained in an HTML element.\n * \n * This method is similar to \\@see:invalidateAll, except the controls\n * are updated immediately rather than after an interval.\n * \n * @param {?=} e Container element. If set to null, all Wijmo controls\n * on the page will be invalidated.\n * @return {?}\n */\nstatic refreshAll(e?: HTMLElement) {\n        if (!e) e = document.body;\n        const /** @type {?} */ ctl = Control.getControl(e);\n        if (ctl) {\n            ctl.refresh();\n        }\n        if (e.children) {\n            for (let /** @type {?} */ i = 0; i < e.children.length; i++) {\n                Control.refreshAll( /** @type {?} */((<HTMLElement>e.children[i])));\n            }\n        }\n    }\n/**\n * Disposes of all Wijmo controls contained in an HTML element.\n * \n * @param {?=} e Container element.\n * @return {?}\n */\nstatic disposeAll(e?: HTMLElement) {\n        const /** @type {?} */ ctl = Control.getControl(e);\n        if (ctl) {\n            ctl.dispose();\n        } else if (e.children) {\n            for (let /** @type {?} */ i = 0; i < e.children.length; i++) {\n                Control.disposeAll( /** @type {?} */((<HTMLElement>e.children[i])));\n            }\n        }\n    }\n/**\n * Suspends notifications until the next call to \\@see:endUpdate.\n * @return {?}\n */\nbeginUpdate() {\n        this._updating++;\n    }\n/**\n * Resumes notifications suspended by calls to \\@see:beginUpdate.\n * @return {?}\n */\nendUpdate() {\n        this._updating--;\n        if (this._updating <= 0) {\n            this.invalidate();\n        }\n    }\n/**\n * Gets a value that indicates whether the control is currently being updated.\n * @return {?}\n */\nget isUpdating(): boolean {\n        return this._updating > 0;\n    }\n/**\n * Executes a function within a \\@see:beginUpdate/\\@see:endUpdate block.\n * \n * The control will not be updated until the function has been executed.\n * This method ensures \\@see:endUpdate is called even if the function throws.\n * \n * @param {?} fn Function to be executed.\n * @return {?}\n */\ndeferUpdate(fn: Function) {\n        try {\n            this.beginUpdate();\n            fn();\n        } finally {\n            this.endUpdate();\n        }\n    }\n/**\n * Gets a value that indicates whether the control is currently handling a touch event.\n * @return {?}\n */\nget isTouching(): boolean {\n        return Control._touching;\n    }\n/**\n * Gets or sets whether the control is disabled.\n * \n * Disabled controls cannot get mouse or keyboard events.\n * @return {?}\n */\nget disabled(): boolean {\n        return this._e && this._e.getAttribute('disabled') != null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: boolean) {\n        value = asBoolean(value, true);\n        if (value != this.disabled) {\n            enable(this._e, !value);\n        }\n    }\n/**\n * Initializes the control by copying the properties from a given object.\n * \n * This method allows you to initialize controls using plain data objects\n * instead of setting the value of each property in code.\n * \n * For example:\n * <pre>\n * grid.initialize({\n *   itemsSource: myList,\n *   autoGenerateColumns: false,\n *   columns: [\n *     { binding: 'id', header: 'Code', width: 130 },\n *     { binding: 'name', header: 'Name', width: 60 }\n *   ]\n * });\n * // is equivalent to\n * grid.itemsSource = myList;\n * grid.autoGenerateColumns = false;\n * // etc.\n * </pre>\n * \n * The initialization data is type-checked as it is applied. If the\n * initialization object contains unknown property names or invalid\n * data types, this method will throw.\n * \n * @param {?} options Object that contains the initialization data.\n * @return {?}\n */\ninitialize(options: any) {\n        if (options) {\n            this.beginUpdate();\n            copy(this, options);\n            this.endUpdate();\n        }\n    }\n/**\n * Adds an event listener to an element owned by this \\@see:Control.\n * \n * The control keeps a list of attached listeners and their handlers,\n * making it easier to remove them when the control is disposed (see the\n * \\@see:dispose and \\@see:removeEventListener method).\n * \n * Failing to remove event listeners may cause memory leaks.\n * \n * @param {?} target Target element for the event.\n * @param {?} type String that specifies the event.\n * @param {?} fn Function to execute when the event occurs.\n * @param {?=} capture Whether the listener is capturing.\n * @return {?}\n */\naddEventListener(target: EventTarget, type: string, fn: any, capture = false) {\n            if (target) {\n                target.addEventListener(type, fn, capture);\n                if (this._listeners == null) {\n                    this._listeners = [];\n                }\n                this._listeners.push({ target: target, type: type, fn: fn, capture: capture });\n            }\n        }\n/**\n * Removes one or more event listeners attached to elements owned by this \\@see:Control.\n * \n * @param {?=} target Target element for the event. If null, removes listeners attached to all targets.\n * @param {?=} type String that specifies the event. If null, removes listeners attached to all events.\n * @param {?=} capture Whether the listener is capturing. If null, removes capturing and non-capturing listeners.\n * @return {?}\n */\nremoveEventListener(target?: EventTarget, type?: string, capture?: boolean) {\n        if (this._listeners) {\n            for (let /** @type {?} */ i = 0; i < this._listeners.length; i++) {\n                const /** @type {?} */ l = this._listeners[i];\n                if (target == null || target == l.target) {\n                    if (type == null || type == l.type) {\n                        if (capture == null || capture == l.capture) {\n                            l.target.removeEventListener(l.type, l.fn, l.capture);\n                            this._listeners.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n            }\n        }\n    }\n/**\n * Occurs when the control gets the focus.\n */\ngotFocus = new Event();\n/**\n * Raises the \\@see:gotFocus event.\n * @param {?=} e\n * @return {?}\n */\nonGotFocus(e?: EventArgs) {\n        this.gotFocus.raise(this, e);\n    }\n/**\n * Occurs when the control loses the focus.\n */\nlostFocus = new Event();\n/**\n * Raises the \\@see:lostFocus event.\n * @param {?=} e\n * @return {?}\n */\nonLostFocus(e?: EventArgs) {\n        this.lostFocus.raise(this, e);\n    }\n/**\n * @return {?}\n */\n_handleResize() {\n        if (this._e.parentElement) {\n            const /** @type {?} */ sz = new Size(this._e.offsetWidth, this._e.offsetHeight);\n            if (!sz.equals(this._szCtl)) {\n                this._szCtl = sz;\n                this.invalidate();\n            }\n        }\n    }\n/**\n * @return {?}\n */\n_updateFocusState() {\n\n        // use a timeOut since Chrome and FF sometimes move the focus to the body\n        // before moving it to the new focused element\n        setTimeout(() => {\n\n            // update state for this control\n            const /** @type {?} */ focus = this.containsFocus();\n            if (focus != this._focus) {\n                this._focus = focus;\n                if (focus) {\n                    this.onGotFocus();\n                } else {\n                    this.onLostFocus();\n                }\n                toggleClass(this._e, 'wj-state-focused', focus);\n            }\n\n            // update state for any parent controls as well\n            if (this._e) {\n                for (let /** @type {?} */ e = this._e.parentElement; e; e = e.parentElement) {\n                    const /** @type {?} */ ctl = Control.getControl(e);\n                    if (ctl) {\n                        ctl._updateFocusState();\n                        break;\n                    }\n                }\n            }\n        });\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _handleTouchStart(e) {\n        if (e.pointerType == null || e.pointerType == 'touch') {\n            Control._touching = true;\n            console.log('touching = true');\n        }\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _handleTouchEnd(e) {\n        if (e.pointerType == null || e.pointerType == 'touch') {\n            setTimeout(function () {\n                Control._touching = false;\n                console.log('touching = false');\n            }, 400); // 300ms click event delay on IOS, plus some safety\n        }\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _handleDisabled(e: any) {\n        if (this.disabled) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate _replaceWithDiv(element: HTMLElement) {\n\n        // replace the element\n        const /** @type {?} */ p   = element.parentElement, /** @type {?} */\n              div = document.createElement('div');\n        p.replaceChild(div, element);\n\n        // copy children\n        div.innerHTML = element.innerHTML;\n\n        // copy id and style, or all attributes\n        const /** @type {?} */ atts = element.attributes;\n        for (let /** @type {?} */ i = 0; i < atts.length; i++) {\n            const /** @type {?} */ name = atts[i].name;\n            if (name == 'id' || name == 'style') {\n                div.setAttribute(name, atts[i].value);\n            }\n        }\n\n        // return new div\n        return div;\n    }\n/**\n * @param {?} e\n * @return {?}\n */\n_copyOriginalAttributes(e: HTMLElement) {\n        const /** @type {?} */ atts = this._orgAtts;\n        if (atts) {\n            for (let /** @type {?} */ i = 0; i < atts.length; i++) {\n                const /** @type {?} */ name = atts[i].name.toLowerCase();\n                if (name != 'id' && name != 'style' && name != 'type') {\n                    e.setAttribute(name, atts[i].value);\n                }\n            }\n        }\n    }\n}\n\nfunction Control_tsickle_Closure_declarations() {\n/** @type {?} */\nControl._DATA_KEY;\n/** @type {?} */\nControl._REFRESH_INTERVAL;\n/** @type {?} */\nControl._wme;\n/** @type {?} */\nControl._touching;\n/** @type {?} */\nControl.prototype._focus;\n/** @type {?} */\nControl.prototype._updating;\n/** @type {?} */\nControl.prototype._fullUpdate;\n/** @type {?} */\nControl.prototype._toInv;\n/** @type {?} */\nControl.prototype._szCtl;\n/** @type {?} */\nControl.prototype._e;\n/** @type {?} */\nControl.prototype._orgOuter;\n/** @type {?} */\nControl.prototype._orgInner;\n/** @type {?} */\nControl.prototype._listeners;\n/** @type {?} */\nControl.prototype._orgTag;\n/** @type {?} */\nControl.prototype._orgAtts;\n/**\n * Occurs when the control gets the focus.\n * @type {?}\n */\nControl.prototype.gotFocus;\n/**\n * Occurs when the control loses the focus.\n * @type {?}\n */\nControl.prototype.lostFocus;\n}\n\n","\n/**\n * Static class that provides utility methods for clipboard operations.\n * \n * The \\@see:Clipboard class provides static \\@see:copy and \\@see:paste methods\n * that can be used by controls to customize the clipboard content during\n * clipboard operations.\n * \n * For example, the code below shows how a control could intercept the\n * clipboard shortcut keys and provide custom clipboard handling:\n * \n * <pre>\n * rootElement.addEventListener('keydown', function(e) {\n *   // copy: ctrl+c or ctrl+Insert\n *   if (e.ctrlKey && (e.keyCode == 67 || e.keyCode == 45)) {\n *     var text = this.getClipString();\n *     Clipboard.copy(text);\n *     return;\n *   }\n *   // paste: ctrl+v or shift+Insert\n *   if ((e.ctrlKey && e.keyCode == 86) || (e.shiftKey && e.keyCode == 45)) {\n *     Clipboard.paste(function (text) {\n *       this.setClipString(text);\n *     });\n *     return;\n *   }\n * });</pre>\n */\nexport class Clipboard {\n/**\n * Copies a string to the clipboard.\n * \n * This method only works if invoked immediately after the user\n * pressed a clipboard copy command (such as ctrl+c).\n * \n * @param {?} text Text to copy to the clipboard.\n * @return {?}\n */\nstatic copy(text: string) {\n        Clipboard._copyPasteInternal(text);\n    }\n/**\n * Gets a string from the clipboard.\n * \n * This method only works if invoked immediately after the user\n * pressed a clipboard paste command (such as ctrl+v).\n * \n * @param {?} callback Function called when the clipboard content\n * has been retrieved. The function receives the clipboard\n * content as a parameter.\n * @return {?}\n */\nstatic paste(callback: Function) {\n        Clipboard._copyPasteInternal(callback);\n    }\n/**\n * @param {?} textOrCallback\n * @return {?}\n */\nprivate static _copyPasteInternal(textOrCallback: any) {\n\n        // get active element to restore later\n        const /** @type {?} */ activeElement = /** @type {?} */(( <HTMLElement>document.activeElement));\n                // find parent for temporary input element (so it works with jQuery dialogs...)\n                let /** @type {?} */ parent  = activeElement;\n                for (; parent; parent = parent.parentElement) {\n                    if (parent == document.body || parent.getAttribute('aria-describedby') == 'dialog') {\n                        break;\n                    }\n                }\n\n        // create hidden input element, append it to document\n        const /** @type {?} */ el = document.createElement('textarea');\n        el.style.position = 'fixed';\n        el.style.opacity = '0';\n                parent.appendChild(el);\n\n        // initialize text and give element the focus\n        if (typeof (textOrCallback) == 'string') {\n            el.value = textOrCallback;\n        }\n        el.select();\n\n        // when the clipboard operation is done, remove element, restore focus\n        // and invoke the paste callback\n        setTimeout(function () {\n            const /** @type {?} */ text = el.value;\n                        parent.removeChild(el);\n            activeElement.focus();\n            if (typeof (textOrCallback) == 'function') {\n                textOrCallback(text);\n            }\n        }, 100); // Apple needs extra timeOut\n    }\n}\n","\n/**\n * Provides binding to complex properties (e.g. 'customer.address.city')\n */\nexport class Binding {\n    _path: string;\n    _parts: any[];\n    _key: string;\n/**\n * Initializes a new instance of a \\@see:Binding object.\n * \n * @param {?} path Name of the property to bind to.\n */\nconstructor(path: string) {\n        this.path = path;\n    }\n/**\n * Gets or sets the path for the binding.\n * \n * In the simplest case, the path is the name of the property of the source\n * object to use for the binding (e.g. 'street').\n * \n * Subproperties of a property can be specified by a syntax similar to that\n * used in JavaScript (e.g. 'address.street').\n * @return {?}\n */\nget path(): string {\n        return this._path;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset path(value: string) {\n        this._path = value;\n        this._parts = value.split('.'); // e.g. 'customer.balance'\n        for (let /** @type {?} */ i = 0; i < this._parts.length; i++) {\n            const /** @type {?} */ part = this._parts[i], /** @type {?} */\n                  ib   = part.indexOf('['); // e.g. 'customer.balance[0]'\n            if (ib > -1) {\n                this._parts[i] = part.substr(0, ib);\n                this._parts.splice(++i, 0, parseInt(part.substr(ib + 1)));\n            }\n        }\n        this._key = this._parts.length == 1 ? this._parts[0] : null;\n    }\n/**\n * Gets the binding value for a given object.\n * \n * If the object does not contain the property specified by the\n * binding \\@see:path, the method returns null.\n * \n * @param {?} object The object that contains the data to be retrieved.\n * @return {?}\n */\ngetValue(object: any): any {\n        if (object) {\n\n            // optimize common case\n            if (this._key) {\n                return object[this._key];\n            }\n\n            // handle case where property name has a decimal point (TFS 139176)\n            if (this._path in object) {\n                return object[this._path];\n            }\n\n            // traverse path for complex properties\n            for (let /** @type {?} */ i = 0; i < this._parts.length && object; i++) {\n                object = object[this._parts[i]];\n            }\n        }\n        return object;\n    }\n/**\n * Sets the binding value on a given object.\n * \n * If the object does not contain the property specified by the\n * binding \\@see:path, the value is not set.\n * \n * @param {?} object The object that contains the data to be set.\n * @param {?} value Data value to set.\n * @return {?}\n */\nsetValue(object: any, value: any) {\n        if (object) {\n\n            // handle simple cases (and cases where the property name has a decimal point)\n            if (this._path in object) {\n                object[this._path] = value;\n                return;\n            }\n\n            // traverse parts for complex properties\n            for (let /** @type {?} */ i = 0; i < this._parts.length - 1; i++) {\n                object = object[this._parts[i]];\n                if (object == null) {\n                    return;\n                }\n            }\n\n            // make the assignment\n            object[this._parts[this._parts.length - 1]] = value;\n        }\n    }\n}\n\nfunction Binding_tsickle_Closure_declarations() {\n/** @type {?} */\nBinding.prototype._path;\n/** @type {?} */\nBinding.prototype._parts;\n/** @type {?} */\nBinding.prototype._key;\n}\n\n","import {asNumber, assert} from '../../util/util';\nimport {Point} from './point';\n/**\n * Class that represents a rectangle (with left, top, width, and height).\n */\nexport class Rectangle {\n/**\n * Gets or sets the left coordinate of this \\@see:Rectangle.\n */\nx: number;\n/**\n * Gets or sets the top coordinate of this \\@see:Rectangle.\n */\ny: number;\n/**\n * Gets or sets the width of this \\@see:Rectangle.\n */\nwidth: number;\n/**\n * Gets or sets the height of this \\@see:Rectangle.\n */\nheight: number;\n/**\n * Initializes a new instance of a \\@see:Rectangle object.\n * \n * @param {?=} x Left coordinate of the new \\@see:Rectangle.\n * @param {?=} y Top coordinate of the new \\@see:Rectangle.\n * @param {?=} width Width of the new \\@see:Rectangle.\n * @param {?=} height Height of the new \\@see:Rectangle.\n */\nconstructor(x: number = 0, y: number = 0, width: number = 0, height: number = 0) {\n        this.x      = asNumber(x);\n        this.y      = asNumber(y);\n        this.width  = asNumber(width);\n        this.height = asNumber(height);\n    }\n/**\n * The sum of the <code>y</code> and <code>height</code> properties.\n * @return {?}\n */\npublic get bottom(): number {\n        return this.y + this.height;\n    }\nprivate _bottomRight: Point;\n/**\n * The location of the Rectangle object's bottom-right corner, determined by\n * the values of the <code>right</code> and <code>bottom</code> properties.\n * @return {?}\n */\npublic get bottomRight(): Point {\n        if (this._bottomRight == null)\n            this._bottomRight = new Point();\n        this._bottomRight.x = this.right;\n        this._bottomRight.y = this.bottom;\n        return this._bottomRight;\n    }\n/**\n * The <i>x</i> coordinate of the top-left corner of the rectangle. Changing\n * the <code>left</code> property of a Rectangle object has no effect on the\n * <code>y</code> and <code>height</code> properties. However it does affect\n * the <code>width</code> property, whereas changing the <code>x</code> value\n * does <i>not</i> affect the <code>width</code> property.\n * \n * <p>The value of the <code>left</code> property is equal to the value of\n * the <code>x</code> property.</p>\n * @return {?}\n */\npublic get left(): number {\n        return this.x;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set left(value: number) {\n        this.x = value;\n    }\n/**\n * The sum of the <code>x</code> and <code>width</code> properties.\n * @return {?}\n */\npublic get right(): number {\n        return this.x + this.width;\n    }\nprivate _size: Point;\n/**\n * The size of the Rectangle object, expressed as a Point object with the\n * values of the <code>width</code> and <code>height</code> properties.\n * @return {?}\n */\npublic get size(): Point {\n        if (this._size == null)\n            this._size = new Point();\n        this._size.x = this.width;\n        this._size.y = this.height;\n        return this._size;\n    }\n/**\n * The <i>y</i> coordinate of the top-left corner of the rectangle. Changing\n * the <code>top</code> property of a Rectangle object has no effect on the\n * <code>x</code> and <code>width</code> properties. However it does affect\n * the <code>height</code> property, whereas changing the <code>y</code>\n * value does <i>not</i> affect the <code>height</code> property.\n * \n * <p>The value of the <code>top</code> property is equal to the value of the\n * <code>y</code> property.</p>\n * @return {?}\n */\npublic get top(): number {\n        return this.y;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npublic set top(value: number) {\n        this.y = value;\n    }\nprivate _topLeft: Point;\n/**\n * The location of the Rectangle object's top-left corner, determined by the\n * <i>x</i> and <i>y</i> coordinates of the point.\n * @return {?}\n */\npublic get topLeft(): Point {\n        if (this._topLeft == null)\n            this._topLeft = new Point();\n        this._topLeft.x = this.x;\n        this._topLeft.y = this.y;\n        return this._topLeft;\n    }\n/**\n * Creates a copy of this \\@see:Rectangle.\n * @return {?}\n */\nclone(): Rectangle {\n        return new Rectangle(this.x, this.y, this.width, this.height);\n    }\n/**\n * Creates a \\@see:Rectangle from <b>ClientRect</b> or <b>SVGRect</b> objects.\n * \n * @param {?} rc Rectangle obtained by a call to the DOM's <b>getBoundingClientRect</b>\n * or <b>GetBoundingBox</b> methods.\n * @return {?}\n */\nstatic fromBoundingRect(rc: any): Rectangle {\n        if (rc.left != null) {\n            return new Rectangle(rc.left, rc.top, rc.width, rc.height);\n        } else if (rc.x != null) {\n            return new Rectangle(rc.x, rc.y, rc.width, rc.height);\n        } else {\n            assert(false, 'Invalid source rectangle.');\n        }\n    }\n/**\n * Gets a rectangle that represents the union of two rectangles.\n * \n * @param {?} rc1 First rectangle.\n * @param {?} rc2 Second rectangle.\n * @return {?}\n */\nstatic union(rc1: Rectangle, rc2: Rectangle): Rectangle {\n        const /** @type {?} */ x      = Math.min(rc1.x, rc2.x), /** @type {?} */\n              y      = Math.min(rc1.y, rc2.y), /** @type {?} */\n              right  = Math.max(rc1.right, rc2.right), /** @type {?} */\n              bottom = Math.max(rc1.bottom, rc2.bottom);\n        return new Rectangle(x, y, right - x, bottom - y);\n    }\n/**\n * Determines whether the rectangle contains a given point or rectangle.\n * \n * @param {?} pt The \\@see:Point or \\@see:Rectangle to ckeck.\n * @return {?}\n */\ncontains(pt: any): boolean {\n        if (pt instanceof Point) {\n            return this.containsPoint( /** @type {?} */((<Point>pt)));\n        } else if (pt instanceof Rectangle) {\n            return this.containsRect( /** @type {?} */((<Rectangle>pt)));\n        } else {\n            assert(false, 'Point or Rect expected.');\n        }\n    }\n/**\n * Determines whether the specified point is contained within the rectangular\n * region defined by this Rectangle object. This method is similar to the\n * <code>Rectangle.contains()</code> method, except that it takes a Point\n * object as a parameter.\n * \n * @param {?} point The point, as represented by its <i>x</i> and <i>y</i>\n *              coordinates.\n * @return {?} A value of <code>true</code> if the Rectangle object contains the\n *         specified point; otherwise <code>false</code>.\n */\npublic containsPoint(point: Point): boolean {\n        return (this.x <= point.x && this.x + this.width >= point.x && this.y <= point.y && this.y + this.height >= point.y);\n    }\n/**\n * Determines whether the Rectangle object specified by the <code>rect</code>\n * parameter is contained within this Rectangle object. A Rectangle object is\n * said to contain another if the second Rectangle object falls entirely\n * within the boundaries of the first.\n * \n * @param {?} rect The Rectangle object being checked.\n * @return {?} A value of <code>true</code> if the Rectangle object that you\n *         specify is contained by this Rectangle object; otherwise\n *         <code>false</code>.\n */\npublic containsRect(rect: Rectangle): boolean {\n        return (this.x <= rect.x && this.x + this.width >= rect.x + rect.width && this.y <= rect.y && this.y + this.height >= rect.y + rect.height)\n    }\n/**\n * Increases the size of the Rectangle object by the specified amounts, in\n * pixels. The center point of the Rectangle object stays the same, and its\n * size increases to the left and right by the <code>dx</code> value, and to\n * the top and the bottom by the <code>dy</code> value.\n * \n * @param {?} dx The value to be added to the left and the right of the Rectangle\n *           object. The following equation is used to calculate the new\n *           width and position of the rectangle:\n * @param {?} dy The value to be added to the top and the bottom of the\n *           Rectangle. The following equation is used to calculate the new\n *           height and position of the rectangle:\n * @return {?}\n */\npublic inflate(dx: number, dy: number): void {\n        this.x -= dx;\n        this.y -= dy;\n        this.width += 2 * dx;\n        this.height += 2 * dy;\n    }\n/**\n * Increases the size of the Rectangle object. This method is similar to the\n * <code>Rectangle.inflate()</code> method except it takes a Point object as\n * a parameter.\n * \n * <p>The following two code examples give the same result:</p>\n * \n * @param {?} point The <code>x</code> property of this Point object is used to\n *              increase the horizontal dimension of the Rectangle object.\n *              The <code>y</code> property is used to increase the vertical\n *              dimension of the Rectangle object.\n * @return {?}\n */\npublic inflatePoint(point: Point): void {\n        this.x -= point.x;\n        this.y -= point.y;\n        this.width += 2 * point.x;\n        this.height += 2 * point.y;\n    }\n/**\n * If the Rectangle object specified in the <code>toIntersect</code>\n * parameter intersects with this Rectangle object, returns the area of\n * intersection as a Rectangle object. If the rectangles do not intersect,\n * this method returns an empty Rectangle object with its properties set to\n * 0.\n * \n * @param {?} toIntersect The Rectangle object to compare against to see if it\n *                    intersects with this Rectangle object.\n * @return {?} A Rectangle object that equals the area of intersection. If the\n *         rectangles do not intersect, this method returns an empty\n *         Rectangle object; that is, a rectangle with its <code>x</code>,\n *         <code>y</code>, <code>width</code>, and <code>height</code>\n *         properties set to 0.\n */\npublic intersection(toIntersect: Rectangle): Rectangle {\n        let /** @type {?} */ x1: number = Math.max(this.x, toIntersect.x);\n        let /** @type {?} */ x2: number = Math.min(this.x + this.width, toIntersect.x + toIntersect.width);\n        let /** @type {?} */ y1: number = Math.max(this.y, toIntersect.x);\n        let /** @type {?} */ y2: number = Math.min(this.y + this.height, toIntersect.x + toIntersect.height);\n        if (x2 >= x1 && y2 >= y1) {\n            return new Rectangle(x1, y1, x2 - x1, y2 - y1);\n        }\n        return new Rectangle;\n    }\n/**\n * Determines whether the object specified in the <code>toIntersect</code>\n * parameter intersects with this Rectangle object. This method checks the\n * <code>x</code>, <code>y</code>, <code>width</code>, and\n * <code>height</code> properties of the specified Rectangle object to see if\n * it intersects with this Rectangle object.\n * \n * @param {?} toIntersect The Rectangle object to compare against this Rectangle\n *                    object.\n * @return {?} A value of <code>true</code> if the specified object intersects\n *         with this Rectangle object; otherwise <code>false</code>.\n */\npublic intersects(toIntersect: Rectangle): boolean {\n        return (\n            this.x + this.width > toIntersect.x\n            && this.x < toIntersect.x + toIntersect.width\n            && this.y + this.height > toIntersect.y\n            && this.y < toIntersect.y + toIntersect.height\n        );\n    }\n/**\n * Determines whether or not this Rectangle object is empty.\n * \n * @return {?} A value of <code>true</code> if the Rectangle object's width or\n *         height is less than or equal to 0; otherwise <code>false</code>.\n */\npublic isEmpty(): boolean {\n        return (this.x == 0 && this.y == 0 && this.width == 0 && this.height == 0);\n    }\n/**\n * Adjusts the location of the Rectangle object, as determined by its\n * top-left corner, by the specified amounts.\n * \n * @param {?} dx Moves the <i>x</i> value of the Rectangle object by this amount.\n * @param {?} dy Moves the <i>y</i> value of the Rectangle object by this amount.\n * @return {?}\n */\npublic offset(dx: number, dy: number): void {\n        this.x += dx;\n        this.y += dy;\n    }\n/**\n * Adjusts the location of the Rectangle object using a Point object as a\n * parameter. This method is similar to the <code>Rectangle.offset()</code>\n * method, except that it takes a Point object as a parameter.\n * \n * @param {?} point A Point object to use to offset this Rectangle object.\n * @return {?}\n */\npublic offsetPoint(point: Point): void {\n        this.x += point.x;\n        this.y += point.y;\n    }\n/**\n * Sets all of the Rectangle object's properties to 0. A Rectangle object is\n * empty if its width or height is less than or equal to 0.\n * \n * <p> This method sets the values of the <code>x</code>, <code>y</code>,\n * <code>width</code>, and <code>height</code> properties to 0.</p>\n * \n * @return {?}\n */\npublic setEmpty(): void {\n        this.x      = 0;\n        this.y      = 0;\n        this.width  = 0;\n        this.height = 0;\n    }\n}\n\nfunction Rectangle_tsickle_Closure_declarations() {\n/**\n * Gets or sets the left coordinate of this \\@see:Rectangle.\n * @type {?}\n */\nRectangle.prototype.x;\n/**\n * Gets or sets the top coordinate of this \\@see:Rectangle.\n * @type {?}\n */\nRectangle.prototype.y;\n/**\n * Gets or sets the width of this \\@see:Rectangle.\n * @type {?}\n */\nRectangle.prototype.width;\n/**\n * Gets or sets the height of this \\@see:Rectangle.\n * @type {?}\n */\nRectangle.prototype.height;\n/** @type {?} */\nRectangle.prototype._bottomRight;\n/** @type {?} */\nRectangle.prototype._size;\n/** @type {?} */\nRectangle.prototype._topLeft;\n}\n\n","import {asNumber, clamp, asType, isString, assert, asString} from '../../util/util';\n/**\n * Color class.\n * \n * The \\@see:Color class parses colors specified as CSS strings and exposes\n * their red, green, blue, and alpha channels as read-write properties.\n * \n * The \\@see:Color class also provides \\@see:fromHsb and \\@see:fromHsl methods\n * for creating colors using the HSB and HSL color models instead of RGB,\n * as well as \\@see:getHsb and \\@see:getHsl methods for retrieving the color\n * components using those color models.\n * \n * Finally, the \\@see:Color class provides an \\@see:interpolate method that\n * creates colors by interpolating between two colors using the HSL model.\n * This method is especially useful for creating color animations with the\n * \\@see:animate method.\n */\nexport class Color {\n\n    // fields\n    _r = 0;\n    _g = 0;\n    _b = 0;\n    _a = 1;\n/**\n * Initializes a new \\@see:Color from a CSS color specification.\n * \n * @param {?} color CSS color specification.\n */\nconstructor(color: string) {\n        if (color) {\n            this._parse(color);\n        }\n    }\n/**\n * Gets or sets the red component of this \\@see:Color,\n * in a range from 0 to 255.\n * @return {?}\n */\nget r(): number {\n        return this._r;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset r(value: number) {\n        this._r = clamp(asNumber(value), 0, 255);\n    }\n/**\n * Gets or sets the green component of this \\@see:Color,\n * in a range from 0 to 255.\n * @return {?}\n */\nget g(): number {\n        return this._g;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset g(value: number) {\n        this._g = clamp(asNumber(value), 0, 255);\n    }\n/**\n * Gets or sets the blue component of this \\@see:Color,\n * in a range from 0 to 255.\n * @return {?}\n */\nget b(): number {\n        return this._b;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset b(value: number) {\n        this._b = clamp(asNumber(value), 0, 255);\n    }\n/**\n * Gets or sets the alpha component of this \\@see:Color,\n * in a range from 0 to 1 (zero is transparent, one is solid).\n * @return {?}\n */\nget a(): number {\n        return this._a;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset a(value: number) {\n        this._a = clamp(asNumber(value), 0, 1);\n    }\n/**\n * Returns true if a \\@see:Color has the same value as this \\@see:Color.\n * \n * @param {?} clr \\@see:Color to compare to this \\@see:Color.\n * @return {?}\n */\nequals(clr: Color): boolean {\n        return (clr instanceof Color) &&\n            this.r == clr.r && this.g == clr.g && this.b == clr.b &&\n            this.a == clr.a;\n    }\n/**\n * Gets a string representation of this \\@see:Color.\n * @return {?}\n */\ntoString(): string {\n        const /** @type {?} */ a = Math.round(this.a * 100);\n        return a > 99\n            ? '#' + ((1 << 24) + (this.r << 16) + (this.g << 8) + this.b).toString(16).slice(1)\n                        : 'rgba(' + this.r + ',' + this.g + ',' + this.b + ',' + (a / 100) +')';\n    }\n/**\n * Creates a new \\@see:Color using the specified RGBA color channel values.\n * \n * @param {?} r Value for the red channel, from 0 to 255.\n * @param {?} g Value for the green channel, from 0 to 255.\n * @param {?} b Value for the blue channel, from 0 to 255.\n * @param {?=} a Value for the alpha channel, from 0 to 1.\n * @return {?}\n */\nstatic fromRgba(r: number, g: number, b: number, a = 1): Color {\n        const /** @type {?} */ c     = new Color(null);\n                c.r = Math.round(clamp(asNumber(r), 0, 255));\n                c.g = Math.round(clamp(asNumber(g), 0, 255));\n                c.b = Math.round(clamp(asNumber(b), 0, 255));\n                c.a = clamp(asNumber(a), 0, 1);\n        return c;\n    }\n/**\n * Creates a new \\@see:Color using the specified HSB values.\n * \n * @param {?} h Hue value, from 0 to 1.\n * @param {?} s Saturation value, from 0 to 1.\n * @param {?} b Brightness value, from 0 to 1.\n * @param {?=} a Alpha value, from 0 to 1.\n * @return {?}\n */\nstatic fromHsb(h: number, s: number, b: number, a = 1): Color {\n            const /** @type {?} */ rgb = Color._hsbToRgb(clamp(asNumber(h), 0, 1), clamp(asNumber(s), 0, 1), clamp(asNumber(b), 0, 1));\n            return Color.fromRgba(rgb[0], rgb[1], rgb[2], a);\n    }\n/**\n * Creates a new \\@see:Color using the specified HSL values.\n * \n * @param {?} h Hue value, from 0 to 1.\n * @param {?} s Saturation value, from 0 to 1.\n * @param {?} l Lightness value, from 0 to 1.\n * @param {?=} a Alpha value, from 0 to 1.\n * @return {?}\n */\nstatic fromHsl(h: number, s: number, l: number, a = 1): Color {\n            const /** @type {?} */ rgb = Color._hslToRgb(clamp(asNumber(h), 0, 1), clamp(asNumber(s), 0, 1), clamp(asNumber(l), 0, 1));\n        return Color.fromRgba(rgb[0], rgb[1], rgb[2], a);\n    }\n/**\n * Creates a new \\@see:Color from a CSS color string.\n * \n * @param {?} value String containing a CSS color specification.\n * @return {?} A new \\@see:Color, or null if the string cannot be parsed into a color.\n */\nstatic fromString(value: string): Color {\n        const /** @type {?} */ c = new Color(null);\n        return c._parse(asString(value)) ? c : null;\n    }\n/**\n * Gets an array with this color's HSB components.\n * @return {?}\n */\ngetHsb(): number[] {\n        return Color._rgbToHsb(this.r, this.g, this.b)\n    }\n/**\n * Gets an array with this color's HSL components.\n * @return {?}\n */\ngetHsl(): number[] {\n        return Color._rgbToHsl(this.r, this.g, this.b)\n    }\n/**\n * Creates a \\@see:Color by interpolating between two colors.\n * \n * @param {?} c1 First color.\n * @param {?} c2 Second color.\n * @param {?} pct Value between zero and one that determines how close the\n * interpolation should be to the second color.\n * @return {?}\n */\nstatic interpolate(c1: Color, c2: Color, pct: number): Color {\n\n        // sanity\n        pct = clamp(asNumber(pct), 0, 1);\n\n        // convert rgb to hsl\n        const /** @type {?} */ h1 = Color._rgbToHsl(c1.r, c1.g, c1.b), /** @type {?} */\n              h2 = Color._rgbToHsl(c2.r, c2.g, c2.b);\n\n        // interpolate\n        const /** @type {?} */ qct   = 1 - pct, /** @type {?} */\n              alpha = c1.a * qct + c2.a * pct, /** @type {?} */\n              h3    = [\n                  h1[0] * qct + h2[0] * pct,\n                  h1[1] * qct + h2[1] * pct,\n                  h1[2] * qct + h2[2] * pct\n              ];\n\n        // convert back to rgb\n        const /** @type {?} */ rgb = Color._hslToRgb(h3[0], h3[1], h3[2]);\n        return Color.fromRgba(rgb[0], rgb[1], rgb[2], alpha);\n    }\n/**\n * Gets the closest opaque color to a given color.\n * \n * @param {?} c \\@see:Color to be converted to an opaque color\n * (the color may also be specified as a string).\n * @param {?=} bkg Background color to use when removing the transparency\n * (defaults to white).\n * @return {?}\n */\nstatic toOpaque(c: any, bkg?: any): Color {\n\n            // get color\n            c = isString(c) ? Color.fromString(c) : asType(c, Color);\n\n            // no alpha? no work\n            if (c.a == 1) return c;\n\n            // get background\n            bkg = bkg == null ? Color.fromRgba(255, 255, 255, 1) :\n                  isString(bkg) ? Color.fromString(bkg) : /** @type {?} */((\n                  <Color>asType(bkg, Color)));\n\n            // interpolate in RGB space\n            const /** @type {?} */ p = c.a, /** @type {?} */ q = 1 - p;\n            return Color.fromRgba(c.r * p + bkg.r * q, c.g * p + bkg.g * q, c.b * p + bkg.b * q);\n        }\n/**\n * @param {?} color\n * @return {?}\n */\n_parse(color: string): boolean {\n\n        // let browser parse stuff we don't handle\n        color = color.toLowerCase();\n        if (color && color.indexOf('#') != 0 && color.indexOf('rgb') != 0 && color.indexOf('hsl') != 0) {\n            const /** @type {?} */ e       = document.createElement('div');\n            e.style.color = color;\n            let /** @type {?} */ cc        = e.style.color;\n            if (cc == color) {                              // same value?\n                cc = window.getComputedStyle(e).color;      // then get computed style\n                if (!cc) {                                  // not yet? (Chrome/named colors)\n                    document.body.appendChild(e);           // then add element to document\n                    cc = window.getComputedStyle(e).color;  // and try again\n                    document.body.removeChild(e);\n                }\n            }\n            color = cc.toLowerCase();\n        }\n\n        // parse #RGB/#RRGGBB\n        if (color.indexOf('#') == 0) {\n            if (color.length == 4) {\n                this.r = parseInt(color[1] + color[1], 16);\n                this.g = parseInt(color[2] + color[2], 16);\n                this.b = parseInt(color[3] + color[3], 16);\n                this.a = 1;\n                return true;\n            } else if (color.length == 7) {\n                this.r = parseInt(color.substr(1, 2), 16);\n                this.g = parseInt(color.substr(3, 2), 16);\n                this.b = parseInt(color.substr(5, 2), 16);\n                this.a = 1;\n                return true;\n            }\n            return false;\n        }\n\n        // parse rgb/rgba\n        if (color.indexOf('rgb') == 0) {\n            var /** @type {?} */ op = color.indexOf('('), /** @type {?} */\n                ep = color.indexOf(')');\n            if (op > -1 && ep > -1) {\n                var /** @type {?} */ p = color.substr(op + 1, ep - (op + 1)).split(',');\n                if (p.length > 2) {\n                    this.r = parseInt(p[0]);\n                    this.g = parseInt(p[1]);\n                    this.b = parseInt(p[2]);\n                    this.a = p.length > 3 ? parseFloat(p[3]) : 1;\n                    return true;\n                }\n            }\n        }\n\n        // parse hsl/hsla\n        if (color.indexOf('hsl') == 0) {\n            var /** @type {?} */ op = color.indexOf('('), /** @type {?} */\n                ep = color.indexOf(')');\n            if (op > -1 && ep > -1) {\n                var /** @type {?} */ p = color.substr(op + 1, ep - (op + 1)).split(',');\n                if (p.length > 2) {\n                    const /** @type {?} */ h = parseInt(p[0]) / 360;\n                    let /** @type {?} */ s = parseInt(p[1]), /** @type {?} */\n                          l = parseInt(p[2]);\n                    if (p[1].indexOf('%') > -1) s /= 100;\n                    if (p[2].indexOf('%') > -1) l /= 100;\n                    const /** @type {?} */ rgb = Color._hslToRgb(h, s, l);\n                    this.r = rgb[0];\n                    this.g = rgb[1];\n                    this.b = rgb[2];\n                    this.a = p.length > 3 ? parseFloat(p[3]) : 1;\n                    return true;\n                }\n            }\n        }\n\n        // failed to parse\n        return false;\n    }\n/**\n * Converts an HSL color value to RGB.\n * \n * @param {?} h The hue (between zero and one).\n * @param {?} s The saturation (between zero and one).\n * @param {?} l The lightness (between zero and one).\n * @return {?} An array containing the R, G, and B values (between zero and 255).\n */\nstatic _hslToRgb(h: number, s: number, l: number): number[] {\n        assert(h >= 0 && h <= 1 && s >= 0 && s <= 1 && l >= 0 && l <= 1, 'bad HSL values');\n        let /** @type {?} */ r: number, /** @type {?} */ g: number, /** @type {?} */ b: number;\n        if (s == 0) {\n            r = g = b = l; // achromatic\n        } else {\n            const /** @type {?} */ q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n            const /** @type {?} */ p = 2 * l - q;\n            r       = Color._hue2rgb(p, q, h + 1 / 3);\n            g       = Color._hue2rgb(p, q, h);\n            b       = Color._hue2rgb(p, q, h - 1 / 3);\n        }\n        return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255)];\n    }\n/**\n * @param {?} p\n * @param {?} q\n * @param {?} t\n * @return {?}\n */\nstatic _hue2rgb(p: number, q: number, t: number): number {\n        if (t < 0) t += 1;\n        if (t > 1) t -= 1;\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\n        if (t < 1 / 2) return q;\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n        return p;\n    }\n/**\n * Converts an RGB color value to HSL.\n * \n * @param {?} r The value of the red channel (between zero and 255).\n * @param {?} g The value of the green channel (between zero and 255).\n * @param {?} b The value of the blue channel (between zero and 255).\n * @return {?} An array containing the H, S, and L values (between zero and one).\n */\nstatic _rgbToHsl(r: number, g: number, b: number): number[] {\n        assert(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255, 'bad RGB values');\n        r /= 255, g /= 255, b /= 255;\n        const /** @type {?} */ max = Math.max(r, g, b), /** @type {?} */\n              min = Math.min(r, g, b);\n        let /** @type {?} */ h, /** @type {?} */ s;\n        const /** @type {?} */ l   = (max + min) / 2;\n        if (max == min) {\n            h = s = 0;\n        } else {\n            const /** @type {?} */ d = max - min;\n            s       = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                    h = (r - g) / d + 4;\n                    break;\n            }\n            h /= 6;\n        }\n        return [h, s, l];\n    }\n/**\n * Converts an RGB color value to HSB.\n * \n * @param {?} r The value of the red channel (between zero and 255).\n * @param {?} g The value of the green channel (between zero and 255).\n * @param {?} b The value of the blue channel (between zero and 255).\n * @return {?} An array containing the H, S, and B values (between zero and one).\n */\nstatic _rgbToHsb(r: number, g: number, b: number): number[]{\n        assert(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255, 'bad RGB values');\n        const /** @type {?} */ hsl = Color._rgbToHsl(r, g, b);\n        return Color._hslToHsb(hsl[0], hsl[1], hsl[2]);\n    }\n/**\n * Converts an HSB color value to RGB.\n * \n * @param {?} h The hue (between zero and one).\n * @param {?} s The saturation (between zero and one).\n * @param {?} b The brightness (between zero and one).\n * @return {?} An array containing the R, G, and B values (between zero and 255).\n */\nstatic _hsbToRgb(h: number, s: number, b: number): number[] {\n        //assert(h >= 0 && h <= 1 && s >= 0 && s <= 1 && b >= 0 && b <= 1, 'bad HSB values');\n        const /** @type {?} */ hsl = Color._hsbToHsl(h, s, b);\n        return Color._hslToRgb(hsl[0], hsl[1], hsl[2]);\n    }\n/**\n * Converts an HSB color value to HSL.\n * \n * @param {?} h The hue (between zero and one).\n * @param {?} s The saturation (between zero and one).\n * @param {?} b The brightness (between zero and one).\n * @return {?} An array containing the H, S, and L values (between zero and one).\n */\nstatic _hsbToHsl(h: number, s: number, b: number): number[]{\n        // http://codeitdown.com/hsl-hsb-hsv-color/\n        assert(h >= 0 && h <= 1 && s >= 0 && s <= 1 && b >= 0 && b <= 1, 'bad HSB values');\n        const /** @type {?} */ ll  = clamp(b * (2 - s) / 2, 0, 1), /** @type {?} */\n              div = 1 - Math.abs(2 * ll - 1), /** @type {?} */\n              ss  = clamp(div > 0 ? b * s / div : s/*0*/, 0, 1);\n        assert(!isNaN(ll) && !isNaN(ss), 'bad conversion to HSL');\n        return [h, ss, ll];\n    }\n/**\n * Converts an HSL color value to HSB.\n * \n * @param {?} h The hue (between zero and one).\n * @param {?} s The saturation (between zero and one).\n * @param {?} l The lightness (between zero and one).\n * @return {?} An array containing the H, S, and B values (between zero and one).\n */\nstatic _hslToHsb(h: number, s: number, l: number): number[] {\n        // http://codeitdown.com/hsl-hsb-hsv-color/\n        assert(h >= 0 && h <= 1 && s >= 0 && s <= 1 && l >= 0 && l <= 1, 'bad HSL values');\n        const /** @type {?} */ bb = clamp(l == 1 ? 1 : (2 * l + s * (1 - Math.abs(2 * l - 1))) / 2, 0, 1);\n        const /** @type {?} */ ss = clamp(bb > 0 ? 2 * (bb - l) / bb : s/*0*/, 0, 1);\n        assert(!isNaN(bb) && !isNaN(ss), 'bad conversion to HSB');\n        return [h, ss, bb];\n    }\n}\n\nfunction Color_tsickle_Closure_declarations() {\n/** @type {?} */\nColor.prototype._r;\n/** @type {?} */\nColor.prototype._g;\n/** @type {?} */\nColor.prototype._b;\n/** @type {?} */\nColor.prototype._a;\n}\n\n","import {asDate, asNumber, asString, isDate, isString, isNumber, toFixed} from '../util/util';\nimport {DateTime} from '../common/datetime/datetime';\nimport {culture} from './Localization';\n/**\n * Class that implements formatting and parsing of numbers and Dates.\n * \n * By default, \\@see:Globalize uses the American English culture.\n * To switch cultures, include the appropriate <b>wijmo.culture.*.js</b>\n * file after the wijmo files.\n */\nexport class Globalize {\n/**\n * Formats a number or a date.\n * \n * The format strings used with the \\@see:format function are similar to\n * the ones used by <b>Globalize.js</b> and by the .NET Globalization\n * library. The tables below contains links that describe the formats\n * available:\n * \n * <ul>\n * <li><a href=\"http://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx\">\n *      Standard Numeric Format Strings</a></li>\n * <li><a href=\"http://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx\">\n *      Standard Date and Time Format Strings</a></li>\n * <li><a href=\"http://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx\">\n *      Custom Date and Time Format Strings</a></li>\n * </ul>\n * \n * @param {?} value Number or Date to format (all other types are converted to strings).\n * @param {?} format Format string to use when formatting numbers or dates.\n * @param {?=} trim Whether to remove trailing zeros from numeric results.\n * @param {?=} truncate Whether to truncate the numeric values rather than round them.\n * @return {?} A string representation of the given value.\n */\nstatic format(value: any, format: string, trim?: boolean, truncate?: boolean): string {\n\n        // if a format was not provided, create one\n        if (!format) {\n            if (isNumber(value)) {\n                format = value == Math.round(value) ? 'n0' : 'n2';\n            }\n            else if (isDate(value)) {\n                format = 'd';\n            }\n        }\n\n        // format numbers and dates, convert others to string\n        if (isNumber(value)) {\n            return Globalize.formatNumber(value, format, trim, truncate);\n        } else if (isDate(value)) {\n            return Globalize.formatDate(value, format);\n        } else {\n            return value != null ? value.toString() : '';\n        }\n    }\n/**\n * Formats a number using the current culture.\n * \n * The \\@see:formatNumber method accepts most .NET-style\n * <a href=\"http://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx\">\n * Standard Numeric Format Strings</a>, except for the 'e' and 'x' formats\n * (scientific notation and hexadecimal) which are not supported.\n * \n * Numeric format strings takes the form <i>Axxccss</i>, where:\n * <ul>\n * <li>\n *  <i>A</i> is a single case-insensitive alphabetic character called the\n *  format specifier.</i>\n * <li>\n *  <i>xx</i> is an optional integer called the precision specifier.\n *  The precision specifier affects the number of digits in the result.</li>\n * <li>\n *  <i>cc</i> is an optional string used to override the currency symbol\n *  when formatting currency values. This is useful when formatting\n *  currency values for cultures different than the current default\n *  (for example, when formatting Euro or Yen values in applications\n *  that use the English culture).</li>\n * <li>\n *  <i>ss</i> is an optional string used to scale the number. If provided,\n *  it must consist of commas. The number is divided by 1000 for each comma\n *  specified.</li>\n * </ul>\n * \n * The following table describes the standard numeric format specifiers and\n * displays sample output produced by each format specifier for the default\n * culture.\n * \n * <b>n</b> Number: <code>formatNumber(1234.5, 'n2') => '1,234.50'</code><br/>\n * <b>f</b> Fixed-point: <code>formatNumber(1234.5, 'f2') => '1234.50'</code><br/>\n * <b>g</b> General (no trailing zeros): <code>formatNumber(1234.5, 'g2') => '1,234.5'</code><br/>\n * <b>d</b> Decimal (integers): <code>formatNumber(-1234, 'd6') => '-001234'</code><br/>\n * <b>x</b> Hexadecimal (integers): <code>formatNumber(1234, 'x6') => '0004d2'</code><br/>\n * <b>c</b> Currency: <code>formatNumber(1234, 'c') => '$ 1,234.00'</code><br/>\n * <b>p</b> Percent: <code>formatNumber(0.1234, 'p2') => '12.34 %'</code>\n * \n * The scaling specifier is especially useful when charting large values. For\n * example, the markup below creates a chart that plots population versus GDP.\n * The raw data expresses the population is units and the GDP in millions.\n * The scaling specified in the axes formats causes the chart to show population\n * in millions and GDP in trillions:\n * \n * <pre>&lt;wj-flex-chart\n *   items-source=\"countriesGDP\" binding-x=\"pop\" chart-type=\"Scatter\"&gt;\n *   &lt;wj-flex-chart-series\n *     name=\"GDP\" binding=\"gdp\"&gt;&lt;/wj-flex-chart-series&gt;\n *   &lt;wj-flex-chart-axis\n *     wj-property=\"axisX\" title=\"Population (millions)\"\n *     format=\"n0,,\"&gt;\n *   &lt;/wj-flex-chart-axis&gt;\n *   &lt;wj-flex-chart-axis\n *     wj-property=\"axisY\" title=\"GDP (US$ trillions)\"\n *     format=\"c0,,\"&gt;\n *   &lt;/wj-flex-chart-axis&gt;\n * &lt;/wj-flex-chart&gt;</pre>\n * \n * @param {?} value Number to format.\n * @param {?} format .NET-style standard numeric format string (e.g. 'n2', 'c4', 'p0', 'g2', 'd2').\n * @param {?=} trim Whether to remove trailing zeros from the result.\n * @param {?=} truncate Whether to truncate the value rather than round it.\n * @return {?} A string representation of the given number.\n */\nstatic formatNumber(value: number, format: string, trim?: boolean, truncate?: boolean): string {\n        asNumber(value);\n        asString(format);\n\n        let /** @type {?} */ result;\n        const /** @type {?} */ m   = format ? format.match(/([a-z])(\\d*)(,*)(.*)/i) : null, /** @type {?} */\n            nf    = culture.Globalize.numberFormat, /** @type {?} */\n            f1    = m ? m[1].toLowerCase() : 'n', /** @type {?} */\n            prec  = (m && m[2]) ? parseInt(m[2]) : (f1 == 'c') ? nf.currency.decimals : value == Math.round(value) ? 0 : 2, /** @type {?} */\n            scale = (m && m[3]) ? 3 * m[3].length : 0, /** @type {?} */\n            curr  = (m && m[4]) ? m[4] : nf.currency.symbol, /** @type {?} */\n            dp    = nf['.'], /** @type {?} */\n            ts    = nf[','];\n\n        // scale (,:thousands ,,:millions ,,,:billions)\n        if (scale) {\n            value /= Math.pow(10, scale);\n        }\n\n        // d, x: integers/hexadecimal\n        if (f1 == 'd' || f1 == 'x') {\n            result = Math.round(Math.abs(value)).toString(f1 == 'd' ? 10 : 16);\n            while (result.length < prec) {\n                result = '0' + result;\n            }\n            if (value < 0) {\n                result = '-' + result;\n            }\n            if (format && format[0] == 'X') {\n                result = result.toUpperCase();\n            }\n            return result;\n        }\n\n        // p: percentage\n        if (f1 == 'p') {\n            value *= 100;\n        }\n\n        // truncate value\n        if (truncate) {\n            value = toFixed(value, prec, true);\n        }\n\n        // get result\n        result = (f1 == 'c' || f1 == 'p')\n            ? Math.abs(value).toFixed(prec)\n            : value.toFixed(prec);\n\n        // g: remove trailing zeros\n        if ((trim || f1 == 'g') && result.indexOf('.') > -1) {\n            result = result.replace(/(\\.[0-9]*?)0+$/g, '$1');\n            result = result.replace(/\\.$/, '');\n        }\n\n        // replace decimal point\n        if (dp != '.') {\n            result = result.replace('.', dp);\n        }\n\n        // n, c, p: thousand separators\n        if (ts && (f1 == 'n' || f1 == 'c' || f1 == 'p')) {\n            const /** @type {?} */ idx = result.indexOf(dp), /** @type {?} */\n                  rx  = /\\B(?=(\\d\\d\\d)+(?!\\d))/g;\n            result    = idx > -1 ? result.substr(0, idx).replace(rx, ts) + result.substr(idx) : result.replace(rx, ts);\n        }\n\n        // c: currency pattern\n        if (f1 == 'c') {\n            var /** @type {?} */ pat = nf.currency.pattern[value < 0 ? 0 : 1];\n            result = pat.replace('n', result).replace('$', curr);\n        }\n\n        // p: percentage pattern\n        if (f1 == 'p') {\n            var /** @type {?} */ pat = nf.percent.pattern[value < 0 ? 0 : 1];\n            result = pat.replace('n', result);\n        }\n\n        // done\n        return result;\n    }\n/**\n * Formats a date using the current culture.\n * \n * The \\@see:format parameter contains a .NET-style\n * <a href=\"http://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx\">Date format string</a>\n * with the following additions:\n * <ul>\n * <li>\n *  <i>Q, q</i> Calendar quarter.</li>\n *  <i>U</i> Fiscal quarter (government).</li>\n *  <i>u</i> Fiscal quarter (private sector).</li>\n *  <i>EEEE, EEE, EE, E</i> Fiscal year (government).</li>\n *  <i>eeee, eee, ee, e</i> Fiscal year (private sector).</li>\n * </ul>\n * \n * For example:\n * <code>\n * var d = new Date(2015, 9, 1); // Oct 1, 2015\n * console.log(wijmo.Globalize.format(d, '\"FY\"EEEE\"Q\"U') + ' (US culture)');\n * &gt; <b>FY2016Q1 (US culture)</b>\n * </code>\n * \n * @param {?} value Number or Date to format.\n * @param {?} format .NET-style Date format string</a>.\n * @return {?} A string representation of the given date.\n */\nstatic formatDate(value: Date, format: string): string {\n        value = asDate(value);\n\n        // culture-invariant formats\n        switch (format) {\n            case 'r':\n            case 'R':\n                return value.toUTCString();\n            case 'u':\n                return value.toISOString().replace(/\\.\\d{3}/, '');\n        }\n\n        // expand pre-defined formats\n        format = Globalize._expandFormat(format);\n\n        // parse the format string and build return value\n        const /** @type {?} */ parts = Globalize._parseDateFormat(format);\n        let /** @type {?} */ str     = '';\n        for (let /** @type {?} */ i = 0; i < parts.length; i++) {\n            str += Globalize._formatDatePart(value, format, parts[i]);\n        }\n\n        // all done\n        return str;\n    }\n/**\n * Parses a string into an integer.\n * \n * @param {?} value String to convert to an integer.\n * @param {?=} format Format to use when parsing the number.\n * @return {?} The integer represented by the given string,\n * or <b>NaN</b> if the string cannot be parsed into an integer.\n */\nstatic parseInt(value: string, format?: string): number {\n        return Math.round(Globalize.parseFloat(value, format));\n    }\n/**\n * Parses a string into a floating point number.\n * \n * @param {?} value String to convert to a number.\n * @param {?=} format Format to use when parsing the number.\n * @return {?} The floating point number represented by the given string,\n * or <b>NaN</b> if the string cannot be parsed into a floating point number.\n */\nstatic parseFloat(value: string, format?: string): number {\n        const /** @type {?} */ neg   = value.indexOf('-') > -1 || (value.indexOf('(') > -1 && value.indexOf(')') > -1) ? -1 : +1, /** @type {?} */\n              pct   = value.indexOf('%') > -1 ? .01 : 1, /** @type {?} */\n              m     = format ? format.match(/,+/) : null, /** @type {?} */\n              scale = m ? m[0].length * 3 : 0;\n\n        // hex\n        if (format && (format[0] == 'x' || format[0] == 'X')) {\n            value = value.replace(/[^0-9a-f]+.*$/gi, ''); // truncate at first invalid char\n            return parseInt(value, 16) * neg * pct * Math.pow(10, scale);\n        }\n\n        // decimal\n        var /** @type {?} */ dp = culture.Globalize.numberFormat['.'], /** @type {?} */\n            rx = new RegExp('[^\\\\d\\\\' + dp + ']', 'g'), /** @type {?} */\n            value = value.replace(rx, '').replace(dp, '.'); // remove non-digits, replace decimal point\n        return parseFloat(value) * neg * pct * Math.pow(10, scale);\n    }\n/**\n * Parses a string into a Date.\n * \n * @param {?} value String to convert to a Date.\n * @param {?} format Format string used to parse the date.\n * @return {?} The date represented by the given string, or null if the string\n * cannot be parsed into a Date.\n */\nstatic parseDate(value: string, format: string): Date {\n\n        // make sure we have a value\n        value = asString(value);\n        if (!value) {\n            return null;\n        }\n\n        // culture-invariant formats\n        if (format == 'u') {\n            return new Date(value);\n        }\n\n        // parse using RFC 3339 pattern ([yyyy-MM-dd] [hh:mm[:ss]])\n        var /** @type {?} */ d: Date;\n        if (format == 'R' || format == 'r') {\n            const /** @type {?} */ rx    = /(([0-9]+)\\-([0-9]+)\\-([0-9]+))?\\s?(([0-9]+):([0-9]+)(:([0-9]+))?)?/, /** @type {?} */\n                  match = value.match(rx);\n            if (match[1] || match[5]) {\n                var /** @type {?} */ d = match[1] // parse date\n                    ? new Date(parseInt(match[2]), parseInt(match[3]) - 1, parseInt(match[4]))\n                    : new Date();\n                if (match[5]) { // parse time\n                    d.setHours(parseInt(match[6]));\n                    d.setMinutes(parseInt(match[7]));\n                    d.setSeconds(match[8] ? parseInt(match[9]) : 0);\n                }\n            } else {\n                d = new Date(value);\n            }\n            return !isNaN(d.getTime()) ? d : null;\n        }\n\n        // expand the format\n        format = Globalize._expandFormat(format ? format : 'd');\n\n        // get format parts and data parts\n        //\n        // cjk: chars, http://www.rikai.com/library/kanjitables/kanji_codes.unicode.shtml\n        // rxf: format (no dots in strings: 'mm.dd.yyyy' => ['mm', 'dd', 'yyyy']).\n        // rxv: value (dots OK in strings: 'A.D' => 'A.D', but not by themselves)\n        const /** @type {?} */ cal                                                 = culture.Globalize.calendar, /** @type {?} */\n              cjk                                                 = Globalize._CJK, /** @type {?} */\n              rxv                                                 = new RegExp('(\\\\' + cal['/'] + ')|(\\\\' + cal[':'] + ')|' + // date/time separators\n                  '(\\\\d+)|' + // digits\n                  '([' + cjk + '\\\\.]{2,})|' + // strings with dots\n                  '([' + cjk + ']+)', // strings with no dots\n                  'gi'\n              );\n        let /** @type {?} */ vparts                                                = value.match(rxv), /** @type {?} */\n              fparts = Globalize._parseDateFormat(format), /** @type {?} */ offset = 0, /** @type {?} */\n              year                                                = -1, /** @type {?} */ month = 0, /** @type {?} */ day = 1, /** @type {?} */ hour = 0, /** @type {?} */ min = 0;\n        const /** @type {?} */ tzm                                                 = 0;\n        let /** @type {?} */ sec                                                   = 0, /** @type {?} */ ms                                           = 0, /** @type {?} */ era = -1, /** @type {?} */\n              hasDayName, /** @type {?} */ hasDay, /** @type {?} */ hasQuarter, /** @type {?} */ hasMonth, /** @type {?} */ fiscalFmt;\n\n        // basic validation (TFS 81465, 128359)\n        if (!vparts || !vparts.length || !fparts || !fparts.length) {\n            return null;\n        }\n\n        // parse each element\n        for (let /** @type {?} */ i = 0; i < fparts.length && vparts; i++) {\n            const /** @type {?} */ vpi  = i - offset;\n            let /** @type {?} */ pval   = (vpi > -1 && vpi < vparts.length) ? vparts[vpi] : '';\n            const /** @type {?} */ plen = fparts[i].length;\n            switch (fparts[i]) {\n\n                // ** year\n                case 'EEEE': case 'EEE': case 'EE': case 'E': // fiscal (govt)\n                case 'eeee': case 'eee': case 'ee': case 'e': // fiscal (corp)\n                fiscalFmt = fparts[i];\n                // ** fall through **\n                case 'yyyy': case 'yyy': case 'yy': case 'y': // calendar\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                year = parseInt(pval);\n                break;\n\n                // ** month\n                case 'MMMM': case 'MMM':\n                hasMonth = true;\n                const /** @type {?} */ monthName = pval.toLowerCase();\n                month = -1;\n                for (let /** @type {?} */ j = 0; j < 12; j++) {\n                    if (cal.months[j].toLowerCase().indexOf(monthName) == 0) {\n                        month = j;\n                        break;\n                    }\n                }\n                break;\n                case 'MM': case 'M':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                month = parseInt(pval) - 1;\n                hasMonth = true;\n                break;\n\n                // ** day\n                case 'dddd':\n                case 'ddd':\n                    hasDayName = true;\n                    break; // skip day names\n                case 'dd': case 'd':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                day = parseInt(pval);\n                hasDay = true;\n                break;\n\n                // ** hour\n                case 'hh': case 'h':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                hour = parseInt(pval);\n                hour = hour == 12 ? 0 : hour; // 0-12, 12 == midnight\n                break;\n                case 'HH':\n                    if (plen > 1 && pval.length > plen) {\n                        vparts[vpi] = pval.substr(plen);\n                        pval = pval.substr(0, plen);\n                        offset++;\n                    }\n                    hour = parseInt(pval); // 0-24\n                    break;\n                case 'H':\n                    hour = parseInt(pval); // 0-24\n                    break;\n\n                // ** minute\n                case 'mm': case 'm':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                min = parseInt(pval);\n                break;\n\n                // ** second\n                case 'ss': case 's':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                sec = parseInt(pval);\n                break;\n\n                // ** millisecond\n                case 'fffffff': case 'FFFFFFF':\n                case 'ffffff': case 'FFFFFF':\n                case 'fffff': case 'FFFFF':\n                case 'ffff': case 'FFFF':\n                case 'fff': case 'FFF':\n                case 'ff': case 'FF':\n                case 'f': case 'F':\n                ms = parseInt(pval) / Math.pow(10, plen - 3);\n                break;\n\n                // ** am/pm\n                case 'tt': case 't':\n                pval = pval.toUpperCase();\n                if ((cal.pm[0] && pval == cal.pm[0] && hour < 12) ||\n                    (cal.pm[1] && pval == cal.pm[1] && hour < 12)) {\n                    hour += 12;\n                }\n                break;\n\n                // ** quarter\n                case 'q': case 'Q': case 'u': case 'U':\n                hasQuarter = true;\n                break;\n\n                // ** era\n                case 'ggg': case 'gg': case 'g':\n                era = cal.eras.length > 1 ? Globalize._getEra(pval, cal) : -1;\n                break;\n\n                // ** localized separators (TFS 131320)\n                case cal['/']:\n                case cal[':']:\n                    if (pval && pval != fparts[i]) {\n                        return null; // present and wrong separator\n                    }\n                    break;\n\n                // ** time zone (skip )\n                case 'K':\n                    break;\n\n                // ** all else: if not a match, keep using the same pval\n                default:\n                    if (Globalize._unquote(fparts[i]) != pval) {\n                        offset++;\n                    }\n                    break;\n            }\n        }\n\n        // allow dates with no times even if the format requires times\n        if (hasMonth && hasDay) {\n            if (isNaN(hour)) hour = 0;\n            if (isNaN(min)) min = 0;\n            if (isNaN(sec)) sec = 0;\n        }\n\n        // basic validation\n        if (month < 0 || month > 11 || isNaN(month) ||\n            day < 0 || day > 31 || isNaN(day) ||\n            hour < 0 || hour > 24 || isNaN(hour) ||\n            min < 0 || min > 60 || isNaN(min) ||\n            sec < 0 || sec > 60 || isNaN(sec)) {\n            return null;\n        }\n\n        // convert fiscal year/month to calendar\n        if (fiscalFmt) {\n            if (!hasMonth) { // need year and month to convert fiscal to calendar\n                return null;\n            }\n            d = new Date(year, month);\n            d = DateTime.fromFiscal(d, fiscalFmt[0] == 'E');\n            year = d.getFullYear();\n            month = d.getMonth();\n        }\n\n        // if the day name was specified but the day wasn't, the result is meaningless\n        if (hasDayName && !hasDay) {\n            return null;\n        }\n\n        // if the quarter was specified but the month wasn't, the result is meaningless\n        if (hasQuarter && !hasMonth) {\n            return null;\n        }\n\n        // if year not found, use current (as Globalize.js)\n        if (year < 0) {\n            year = new Date().getFullYear();\n        }\n\n        // apply era offset if any, or adjust for two-digit years (see Calendar.TwoDigitYearMax)\n        if (era > -1) {\n            year = year + cal.eras[era].start.getFullYear() - 1;\n        } else if (year < 100) {\n            year += year >= 30 ? 1900 : 2000;\n        }\n\n        // return result\n        d = new Date(year, month, day, hour, min + tzm, sec, ms);\n        return isNaN(d.getTime()) ? null : d;\n    }\n\n    // Chinese/Japanese/Korean characters\n    // http://www.rikai.com/library/kanjitables/kanji_codes.unicode.shtml\n    // NOTE: using 'replace' to keep minifier from switching the escaped Unicode chars into real Unicode.\n    static _CJK = 'a-zu00C0-u017Fu3000-u30ffu4e00-u9faf'.replace(/u/g, '\\\\u');\n/**\n * Gets the first day of the week according to the current culture.\n * \n * The value returned is between zero (Sunday) and six (Saturday).\n * @return {?}\n */\nstatic getFirstDayOfWeek(): number {\n        const /** @type {?} */ fdw = culture.Globalize.calendar.firstDay;\n        return fdw ? fdw : 0;\n    }\n/**\n * Gets the symbol used as a decimal separator in numbers.\n * @return {?}\n */\nstatic getNumberDecimalSeparator(): string {\n        const /** @type {?} */ ndc = culture.Globalize.numberFormat['.'];\n        return ndc ? ndc : '.';\n    }\n/**\n * @param {?} s\n * @return {?}\n */\nprivate static _unquote(s: string): string {\n        if (s.length > 1 && s[0] == s[s.length - 1]) {\n            if (s[0] == '\\'' || s[0] == '\\\"') {\n                return s.substr(1, s.length - 2);\n            }\n        }\n        return s;\n    }\nprivate static _dateFomatParts = {};\n/**\n * @param {?} format\n * @return {?}\n */\nprivate static _parseDateFormat(format: string): string[] {\n\n        // use cache whenever possible\n        if (format in Globalize._dateFomatParts) {\n            return Globalize._dateFomatParts[format];\n        }\n\n        // parse the format\n        const /** @type {?} */ parts = [], /** @type {?} */\n              str   = '';\n        let /** @type {?} */ start, /** @type {?} */ end;\n        for (start = 0; start > -1 && start < format.length; start++) {\n            const /** @type {?} */ c = format[start];\n            if (c == '\\'' || c == '\"') { // handle quoted parts\n                end = format.indexOf(c, start + 1); // keep quotes to distinguish from regular date parts\n                if (end > -1) {\n                    parts.push(format.substring(start, end + 1));\n                    start = end;\n                    continue;\n                }\n            }\n            end = start + 1;\n            for (; end < format.length; end++) {\n                if (format[end] != c) break;\n            }\n            parts.push(format.substring(start, end));\n            start = end - 1;\n        }\n\n        // cache and return\n        Globalize._dateFomatParts[format] = parts;\n        return parts;\n    }\n/**\n * @param {?} d\n * @param {?} format\n * @param {?} part\n * @return {?}\n */\nprivate static _formatDatePart(d: Date, format: string, part: string): string {\n        const /** @type {?} */ cal  = culture.Globalize.calendar;\n        let /** @type {?} */ era    = 0, /** @type {?} */ year = 0, /** @type {?} */ ff = 0, /** @type {?} */ fd;\n        const /** @type {?} */ plen = part.length;\n        switch (part) {\n\n            // ** year\n            case 'yyyy': case 'yyy': case 'yy': case 'y': // calendar year\n            case 'EEEE': case 'EEE': case 'EE': case 'E': // fiscal year (govt)\n            case 'eeee': case 'eee': case 'ee': case 'e': // fiscal year (corporate)\n\n            // get the year (calendar or fiscal)\n            fd = part[0] == 'E' ? DateTime.toFiscal(d, true) :\n                part[0] == 'e' ? DateTime.toFiscal(d, false) :\n                    d;\n            year = fd.getFullYear();\n\n            // if the calendar has multiple eras and the format specifies an era,\n            // then adjust the year to count from the start of the era.\n            // if the format has no era, then use the regular (Western) year.\n            if (cal.eras.length > 1 && format.indexOf('g') > -1) {\n                era = Globalize._getEra(d, cal);\n                if (era > -1) {\n                    year = year - cal.eras[era].start.getFullYear() + 1;\n                }\n            }\n\n            // adjust number of digits\n            return Globalize._zeroPad(year, 4).substr(4 - part.length);\n\n            // ** month\n            case 'MMMM':\n                return cal.months[d.getMonth()];\n            case 'MMM':\n                return cal.monthsAbbr[d.getMonth()];\n            case 'MM': case 'M':\n            return Globalize._zeroPad(d.getMonth() + 1, plen);\n\n            // ** day\n            case 'dddd':\n                return cal.days[d.getDay()];\n            case 'ddd':\n                return cal.daysAbbr[d.getDay()];\n            case 'dd':\n                return Globalize._zeroPad(d.getDate(), 2);\n            case 'd':\n                return d.getDate().toString();\n\n            // ** hour\n            case 'hh': case 'h':\n            return Globalize._zeroPad(Globalize._h12(d), plen);\n            case 'HH': case 'H':\n            return Globalize._zeroPad(d.getHours(), plen);\n\n            // ** minute\n            case 'mm': case 'm':\n            return Globalize._zeroPad(d.getMinutes(), plen);\n\n            // ** second\n            case 'ss': case 's':\n            return Globalize._zeroPad(d.getSeconds(), plen);\n\n            // ** millisecond\n            case 'fffffff': case 'FFFFFFF':\n            case 'ffffff': case 'FFFFFF':\n            case 'fffff': case 'FFFFF':\n            case 'ffff': case 'FFFF':\n            case 'fff': case 'FFF':\n            case 'ff': case 'FF':\n            case 'f': case 'F':\n            ff = d.getMilliseconds() * Math.pow(10, plen - 3);\n            return part[0] == 'f' ? Globalize._zeroPad(ff, plen) : ff.toFixed(0);\n\n            // ** am/pm\n            case 'tt':\n                return d.getHours() < 12 ? cal.am[0] : cal.pm[0];\n            case 't':\n                return d.getHours() < 12 ? cal.am[1] : cal.pm[1];\n\n            // ** quarter\n            case 'q': case 'Q': // calendar\n            return (Math.floor(d.getMonth() / 3) + 1).toString();\n            case 'u': case 'U': // quarter (U: govt; u: corp)\n            fd = DateTime.toFiscal(d, part == 'U');\n            return (Math.floor(fd.getMonth() / 3) + 1).toString();\n\n            // ** era\n            case 'ggg': case 'gg': case 'g':\n            if (cal.eras.length > 1) {\n                era = Globalize._getEra(d, cal);\n                if (era > -1) {\n                    return part == 'ggg' ? cal.eras[era].name : part == 'gg' ? cal.eras[era].name[0] : cal.eras[era].symbol;\n                }\n            }\n            return cal.eras[0];\n\n            // ** localized separators\n            case ':':\n            case '/':\n                return cal[part];\n\n            // ** time zone\n            case 'K':\n                const /** @type {?} */ tz = d.toString().match(/(\\+|\\-)(\\d{2})(\\d{2})/);\n                return tz ? tz[1] + tz[2] + tz[3] : '';\n        }\n\n        // unquote part\n        if (plen > 1 && part[0] == part[plen - 1]) {\n            if (part[0] == '\\\"' || part[0] == '\\'') {\n                return part.substr(1, plen - 2);\n            }\n        }\n\n        // return part\n        return part;\n    }\n/**\n * @param {?} d\n * @param {?} cal\n * @return {?}\n */\nprivate static _getEra(d: any, cal: any): number {\n        if (isDate(d)) { // find era by start date\n            for (var /** @type {?} */ i = 0; i < cal.eras.length; i++) {\n                if (d >= cal.eras[i].start) {\n                    return i;\n                }\n            }\n        } else if (isString(d)) { // find era by name or symbol\n            for (var /** @type {?} */ i = 0; i < cal.eras.length; i++) {\n                if (cal.eras[i].name) {\n                    if (cal.eras[i].name.indexOf(d) == 0 || cal.eras[i].symbol.indexOf(d) == 0) {\n                        return i;\n                    }\n                }\n            }\n        }\n        return -1; // not found\n    }\n/**\n * @param {?} format\n * @return {?}\n */\nprivate static _expandFormat(format: string): string {\n        const /** @type {?} */ fmt = culture.Globalize.calendar.patterns[format];\n        return fmt ? fmt : format;\n    }\n/**\n * @param {?} num\n * @param {?} places\n * @return {?}\n */\nprivate static _zeroPad(num: number, places: number) {\n        const /** @type {?} */ n    = num.toFixed(0), /** @type {?} */\n              zero = places - n.length + 1;\n        return zero > 0 ? Array(zero).join('0') + n : n;\n    }\n/**\n * @param {?} d\n * @return {?}\n */\nprivate static _h12(d: Date) {\n        const /** @type {?} */ cal = culture.Globalize.calendar;\n        let /** @type {?} */ h     = d.getHours();\n        if (cal.am && cal.am[0]) {\n            h = h % 12;\n            if (h == 0) h = 12;\n        }\n        return h;\n    }\n}\n\nfunction Globalize_tsickle_Closure_declarations() {\n/** @type {?} */\nGlobalize._CJK;\n/** @type {?} */\nGlobalize._dateFomatParts;\n}\n\n","\n/**\n * The Vector3D class represents a point or a location in the three-dimensional\n * space using the Cartesian coordinates x, y, and z. As in a two-dimensional\n * space, the x property represents the horizontal axis and the y property\n * represents the vertical axis. In three-dimensional space, the z property\n * represents depth. The value of the x property increases as the object moves\n * to the right. The value of the y property increases as the object moves\n * down. The z property increases as the object moves farther from the point\n * of view. Using perspective projection and scaling, the object is seen to be\n * bigger when near and smaller when farther away from the screen. As in a\n * right-handed three-dimensional coordinate system, the positive z-axis points\n * away from the viewer and the value of the z property increases as the object\n * moves away from the viewer's eye. The origin point (0,0,0) of the global\n * space is the upper-left corner of the stage.\n * \n * <p>The Vector3D class can also represent a direction, an arrow pointing from\n * the origin of the coordinates, such as (0,0,0), to an endpoint; or a\n * floating-point component of an RGB (Red, Green, Blue) color model.</p>\n * \n * <p>Quaternion notation introduces a fourth element, the w property, which\n * provides additional orientation information. For example, the w property can\n * define an angle of rotation of a Vector3D object. The combination of the\n * angle of rotation and the coordinates x, y, and z can determine the display\n * object's orientation. Here is a representation of Vector3D elements in\n * matrix notation:</p>\n */\nexport class Vector3D\n{\n/**\n * The x axis defined as a Vector3D object with coordinates (1,0,0).\n */\npublic static X_AXIS:Vector3D = new Vector3D(1, 0, 0);\n/**\n * The y axis defined as a Vector3D object with coordinates (0,1,0).\n */\npublic static Y_AXIS:Vector3D = new Vector3D(0, 1, 0);\n/**\n * The z axis defined as a Vector3D object with coordinates (0,0,1).\n */\npublic static Z_AXIS:Vector3D = new Vector3D(0, 0, 1);\n/**\n * The first element of a Vector3D object, such as the x coordinate of\n * a point in the three-dimensional space. The default value is 0.\n */\npublic x:number;\npublic y:number;\n/**\n * The third element of a Vector3D object, such as the y coordinate of\n * a point in the three-dimensional space. The default value is 0.\n */\npublic z:number;\n/**\n * TThe fourth element of a Vector3D object (in addition to the x, y,\n * and z properties) can hold data such as the angle of rotation. The\n * default value is 0.\n * \n * <p>Quaternion notation employs an angle as the fourth element in\n * its calculation of three-dimensional rotation. The w property can\n * be used to define the angle of rotation about the Vector3D object.\n * The combination of the rotation angle and the coordinates (x,y,z)\n * determines the display object's orientation.</p>\n * \n * <p>In addition, the w property can be used as a perspective warp\n * factor for a projected three-dimensional position or as a projection\n * transform value in representing a three-dimensional coordinate\n * projected into the two-dimensional space. For example, you can\n * create a projection matrix using the <code>Matrix3D.rawData</code>\n * property, that, when applied to a Vector3D object, produces a\n * transform value in the Vector3D object's fourth element (the w\n * property). Dividing the Vector3D object's other elements by the\n * transform value then produces a projected Vector3D object. You can\n * use the <code>Vector3D.project()</code> method to divide the first\n * three elements of a Vector3D object by its fourth element.</p>\n */\npublic w:number;\n/**\n * The length, magnitude, of the current Vector3D object from the\n * origin (0,0,0) to the object's x, y, and z coordinates. The w\n * property is ignored. A unit vector has a length or magnitude of\n * one.\n * @return {?}\n */\npublic get length():number\n    {\n        return Math.sqrt(this.lengthSquared);\n    }\n/**\n * The square of the length of the current Vector3D object, calculated\n * using the x, y, and z properties. The w property is ignored. Use the\n * <code>lengthSquared()</code> method whenever possible instead of the\n * slower <code>Math.sqrt()</code> method call of the\n * <code>Vector3D.length()</code> method.\n * @return {?}\n */\npublic get lengthSquared():number\n    {\n        return this.x*this.x + this.y*this.y + this.z*this.z;\n    }\n/**\n * Creates an instance of a Vector3D object. If you do not specify a\n * parameter for the constructor, a Vector3D object is created with\n * the elements (0,0,0,0).\n * \n * @param {?=} x The first element, such as the x coordinate.\n * @param {?=} y The second element, such as the y coordinate.\n * @param {?=} z The third element, such as the z coordinate.\n * @param {?=} w An optional element for additional data such as the angle\n *          of rotation.\n */\nconstructor(x:number = 0, y:number = 0, z:number = 0, w:number = 0)\n    {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.w = w;\n    }\n/**\n * Adds the value of the x, y, and z elements of the current Vector3D\n * object to the values of the x, y, and z elements of another Vector3D\n * object. The <code>add()</code> method does not change the current\n * Vector3D object. Instead, it returns a new Vector3D object with\n * the new values.\n * \n * <p>The result of adding two vectors together is a resultant vector.\n * One way to visualize the result is by drawing a vector from the\n * origin or tail of the first vector to the end or head of the second\n * vector. The resultant vector is the distance between the origin\n * point of the first vector and the end point of the second vector.\n * </p>\n * @param {?} a\n * @return {?}\n */\npublic add(a:Vector3D):Vector3D\n    {\n        return new Vector3D(this.x + a.x, this.y + a.y, this.z + a.z, this.w + a.w)\n    }\n/**\n * Returns the angle in radians between two vectors. The returned angle\n * is the smallest radian the first Vector3D object rotates until it\n * aligns with the second Vector3D object.\n * \n * <p>The <code>angleBetween()</code> method is a static method. You\n * can use it directly as a method of the Vector3D class.</p>\n * \n * <p>To convert a degree to a radian, you can use the following\n * formula:</p>\n * \n * <p><code>radian = Math.PI/180 * degree</code></p>\n * \n * @param {?} a The first Vector3D object.\n * @param {?} b The second Vector3D object.\n * @return {?} The angle between two Vector3D objects.\n */\npublic static angleBetween(a:Vector3D, b:Vector3D):number\n    {\n        return Math.acos(a.dotProduct(b)/(a.length*b.length));\n    }\n/**\n * Returns a new Vector3D object that is an exact copy of the current\n * Vector3D object.\n * \n * @return {?} A new Vector3D object that is a copy of the current\n * Vector3D object.\n */\npublic clone():Vector3D\n    {\n        return new Vector3D(this.x, this.y, this.z, this.w);\n    }\n/**\n * @param {?} a\n * @param {?} b\n * @param {?} ascl\n * @param {?} bscl\n * @return {?}\n */\npublic static combine(a:Vector3D, b:Vector3D, ascl:number, bscl:number):Vector3D\n    {\n        return new Vector3D(a.x*ascl + b.x*bscl, a.y*ascl + b.y*bscl, a.z*ascl + b.z*bscl);\n    }\n/**\n * Copies all of vector data from the source Vector3D object into the\n * calling Vector3D object.\n * \n * @param {?} src The Vector3D object from which to copy the data.\n * @return {?}\n */\npublic copyFrom(src:Vector3D):void\n    {\n        this.x = src.x;\n        this.y = src.y;\n        this.z = src.z;\n        this.w = src.w;\n    }\n/**\n * Returns a new Vector3D object that is perpendicular (at a right\n * angle) to the current Vector3D and another Vector3D object. If the\n * returned Vector3D object's coordinates are (0,0,0), then the two\n * Vector3D objects are parallel to each other.\n * \n * <p>You can use the normalized cross product of two vertices of a\n * polygon surface with the normalized vector of the camera or eye\n * viewpoint to get a dot product. The value of the dot product can\n * identify whether a surface of a three-dimensional object is hidden\n * from the viewpoint.</p>\n * \n * @param {?} a A second Vector3D object.\n * @return {?} A new Vector3D object that is perpendicular to the current\n *          Vector3D object and the Vector3D object specified as the\n *          parameter.\n */\npublic crossProduct(a:Vector3D):Vector3D\n    {\n        return new Vector3D(this.y*a.z - this.z*a.y, this.z*a.x - this.x*a.z, this.x*a.y - this.y*a.x, 1);\n    }\n/**\n * Decrements the value of the x, y, and z elements of the current\n * Vector3D object by the values of the x, y, and z elements of\n * specified Vector3D object. Unlike the\n * <code>Vector3D.subtract()</code> method, the\n * <code>decrementBy()</code> method changes the current Vector3D\n * object and does not return a new Vector3D object.\n * \n * @param {?} a The Vector3D object containing the values to subtract from\n *          the current Vector3D object.\n * @return {?}\n */\npublic decrementBy(a:Vector3D)\n    {\n        this.x -= a.x;\n        this.y -= a.y;\n        this.z -= a.z;\n    }\n/**\n * Returns the distance between two Vector3D objects. The\n * <code>distance()</code> method is a static method. You can use it\n * directly as a method of the Vector3D class to get the Euclidean\n * distance between two three-dimensional points.\n * \n * @param {?} pt1 A Vector3D object as the first three-dimensional point.\n * @param {?} pt2 A Vector3D object as the second three-dimensional point.\n * @return {?} The distance between two Vector3D objects.\n */\nstatic distance(pt1:Vector3D, pt2:Vector3D):number\n    {\n        const /** @type {?} */ x: number = (pt1.x - pt2.x);\n        const /** @type {?} */ y: number = (pt1.y - pt2.y);\n        const /** @type {?} */ z: number = (pt1.z - pt2.z);\n        return Math.sqrt(x*x + y*y + z*z);\n    }\n/**\n * If the current Vector3D object and the one specified as the\n * parameter are unit vertices, this method returns the cosine of the\n * angle between the two vertices. Unit vertices are vertices that\n * point to the same direction but their length is one. They remove the\n * length of the vector as a factor in the result. You can use the\n * <code>normalize()</code> method to convert a vector to a unit\n * vector.\n * \n * <p>The <code>dotProduct()</code> method finds the angle between two\n * vertices. It is also used in backface culling or lighting\n * calculations. Backface culling is a procedure for determining which\n * surfaces are hidden from the viewpoint. You can use the normalized\n * vertices from the camera, or eye, viewpoint and the cross product of\n * the vertices of a polygon surface to get the dot product. If the dot\n * product is less than zero, then the surface is facing the camera or\n * the viewer. If the two unit vertices are perpendicular to each\n * other, they are orthogonal and the dot product is zero. If the two\n * vertices are parallel to each other, the dot product is one.</p>\n * \n * @see away.geom.Vector3D#crossProduct()\n * @see away.geom.Vector3D#normalize()\n * @param {?} a The second Vector3D object.\n * @return {?} A scalar which is the dot product of the current Vector3D\n *          object and the specified Vector3D object.\n * \n */\npublic dotProduct(a:Vector3D):number\n    {\n        return this.x*a.x + this.y*a.y + this.z*a.z;\n    }\n/**\n *\n * @param {?} toCompare The Vector3D object to be compared with the current\n *                  Vector3D object.\n * @param {?=} allFour   An optional parameter that specifies whether the w\n *                  property of the Vector3D objects is used in the\n *                  comparison.\n * @return {?} A value of true if the specified Vector3D object is equal\n *          to the current Vector3D object; false if it is not equal.\n */\npublic equals(toCompare:Vector3D, allFour:boolean = false):boolean\n    {\n        return (this.x == toCompare.x && this.y == toCompare.y && this.z == toCompare.z && (!allFour || this.w == toCompare.w ));\n    }\n/**\n * Increments the value of the x, y, and z elements of the current\n * Vector3D object by the values of the x, y, and z elements of a\n * specified Vector3D object. Unlike the <code>Vector3D.add()</code>\n * method, the <code>incrementBy()</code> method changes the current\n * Vector3D object and does not return a new Vector3D object.\n * \n * @param {?} a The Vector3D object to be added to the current Vector3D\n *          object.\n * @return {?}\n */\npublic incrementBy(a:Vector3D)\n    {\n        this.x += a.x;\n        this.y += a.y;\n        this.z += a.z;\n    }\n/**\n *\n * @see away.geom.Vector3D#equals()\n * @param {?} toCompare The Vector3D object to be compared with the current\n *                  Vector3D object.\n * @param {?} tolerance A number determining the tolerance factor. If the\n *                  difference between the values of the Vector3D\n *                  element specified in the toCompare parameter and\n *                  the current Vector3D element is less than the\n *                  tolerance number, the two values are considered\n *                  nearly equal.\n * @param {?=} allFour   An optional parameter that specifies whether the w\n *                  property of the Vector3D objects is used in the\n *                  comparison.\n * @return {?} A value of true if the specified Vector3D object is nearly\n *          equal to the current Vector3D object; false if it is not\n *          equal.\n * \n */\npublic nearEquals(toCompare:Vector3D, tolerance:number, allFour:boolean = true):boolean\n    {\n        return ((Math.abs(this.x - toCompare.x) < tolerance) && (Math.abs(this.y - toCompare.y) < tolerance) && (Math.abs(this.z - toCompare.z) < tolerance) && (!allFour || Math.abs(this.w - toCompare.w) < tolerance));\n    }\n/**\n * Sets the current Vector3D object to its inverse. The inverse object\n * is also considered the opposite of the original object. The value of\n * the x, y, and z properties of the current Vector3D object is changed\n * to -x, -y, and -z.\n * @return {?}\n */\npublic negate():void\n    {\n        this.x = -this.x;\n        this.y = -this.y;\n        this.z = -this.z;\n    }\n/**\n * Scales the line segment between(0,0) and the current point to a set\n * length.\n * \n * @param {?=} thickness The scaling value. For example, if the current\n *                  Vector3D object is (0,3,4), and you normalize it to\n *                  1, the point returned is at(0,0.6,0.8).\n * @return {?}\n */\npublic normalize(thickness:number = 1)\n    {\n        if (this.length != 0) {\n            const /** @type {?} */ invLength = thickness / this.length;\n            this.x *= invLength;\n            this.y *= invLength;\n            this.z *= invLength;\n            return;\n        }\n    }\n/**\n * Divides the value of the <code>x</code>, <code>y</code>, and\n * <code>z</code> properties of the current Vector3D object by the\n * value of its <code>w</code> property.\n * \n * <p>If the current Vector3D object is the result of multiplying a\n * Vector3D object by a projection Matrix3D object, the w property can\n * hold the transform value. The <code>project()</code> method then can\n * complete the projection by dividing the elements by the\n * <code>w</code> property. Use the <code>Matrix3D.rawData</code>\n * property to create a projection Matrix3D object.</p>\n * @return {?}\n */\npublic project():void\n    {\n        this.x /= this.w;\n        this.y /= this.w;\n        this.z /= this.w;\n    }\n/**\n * Scales the current Vector3D object by a scalar, a magnitude. The\n * Vector3D object's x, y, and z elements are multiplied by the scalar\n * number specified in the parameter. For example, if the vector is\n * scaled by ten, the result is a vector that is ten times longer. The\n * scalar can also change the direction of the vector. Multiplying the\n * vector by a negative number reverses its direction.\n * \n * @param {?} s A multiplier (scalar) used to scale a Vector3D object.\n * @return {?}\n */\npublic scaleBy(s:number):void\n    {\n        this.x *= s;\n        this.y *= s;\n        this.z *= s;\n    }\n/**\n * Sets the members of Vector3D to the specified values\n * \n * @param {?} xa The first element, such as the x coordinate.\n * @param {?} ya The second element, such as the y coordinate.\n * @param {?} za The third element, such as the z coordinate.\n * @return {?}\n */\npublic setTo(xa:number, ya:number, za:number):void\n    {\n        this.x = xa;\n        this.y = ya;\n        this.z = za;\n    }\n/**\n * Subtracts the value of the x, y, and z elements of the current\n * Vector3D object from the values of the x, y, and z elements of\n * another Vector3D object. The <code>subtract()</code> method does not\n * change the current Vector3D object. Instead, this method returns a\n * new Vector3D object with the new values.\n * \n * @see away.geom.Vector3D#decrementBy()\n * @param {?} a The Vector3D object to be subtracted from the current\n *          Vector3D object.\n * @return {?} A new Vector3D object that is the difference between the\n *          current Vector3D and the specified Vector3D object.\n * \n */\npublic subtract(a:Vector3D):Vector3D\n    {\n        return new Vector3D(this.x - a.x, this.y - a.y, this.z - a.z);\n    }\n/**\n * Returns a string representation of the current Vector3D object. The\n * string contains the values of the x, y, and z properties.\n * @return {?}\n */\npublic toString():string\n    {\n        return \"[Vector3D] (x:\" + this.x + \" ,y:\" + this.y + \", z\" + this.z + \", w:\" + this.w + \")\";\n    }\n}\n\nfunction Vector3D_tsickle_Closure_declarations() {\n/**\n * The x axis defined as a Vector3D object with coordinates (1,0,0).\n * @type {?}\n */\nVector3D.X_AXIS;\n/**\n * The y axis defined as a Vector3D object with coordinates (0,1,0).\n * @type {?}\n */\nVector3D.Y_AXIS;\n/**\n * The z axis defined as a Vector3D object with coordinates (0,0,1).\n * @type {?}\n */\nVector3D.Z_AXIS;\n/**\n * The first element of a Vector3D object, such as the x coordinate of\n * a point in the three-dimensional space. The default value is 0.\n * @type {?}\n */\nVector3D.prototype.x;\n/** @type {?} */\nVector3D.prototype.y;\n/**\n * The third element of a Vector3D object, such as the y coordinate of\n * a point in the three-dimensional space. The default value is 0.\n * @type {?}\n */\nVector3D.prototype.z;\n/**\n * TThe fourth element of a Vector3D object (in addition to the x, y,\n * and z properties) can hold data such as the angle of rotation. The\n * default value is 0.\n * \n * <p>Quaternion notation employs an angle as the fourth element in\n * its calculation of three-dimensional rotation. The w property can\n * be used to define the angle of rotation about the Vector3D object.\n * The combination of the rotation angle and the coordinates (x,y,z)\n * determines the display object's orientation.</p>\n * \n * <p>In addition, the w property can be used as a perspective warp\n * factor for a projected three-dimensional position or as a projection\n * transform value in representing a three-dimensional coordinate\n * projected into the two-dimensional space. For example, you can\n * create a projection matrix using the <code>Matrix3D.rawData</code>\n * property, that, when applied to a Vector3D object, produces a\n * transform value in the Vector3D object's fourth element (the w\n * property). Dividing the Vector3D object's other elements by the\n * transform value then produces a projected Vector3D object. You can\n * use the <code>Vector3D.project()</code> method to divide the first\n * three elements of a Vector3D object by its fourth element.</p>\n * @type {?}\n */\nVector3D.prototype.w;\n}\n\n","import {asNumber} from '../../util/util';\n/**\n * Class that represents a size (with width and height).\n */\nexport class Size {\n/**\n * Gets or sets the width of this \\@see:Size.\n */\nwidth: number;\n/**\n * Gets or sets the height of this \\@see:Size.\n */\nheight: number;\n/**\n * Initializes a new instance of a \\@see:Size object.\n * \n * @param {?=} width Width of the new \\@see:Size.\n * @param {?=} height Height of the new \\@see:Size.\n */\nconstructor(width = 0, height = 0) {\n        this.width = asNumber(width);\n        this.height = asNumber(height);\n    }\n/**\n * Returns true if a \\@see:Size has the same dimensions as this \\@see:Size.\n * \n * @param {?} sz \\@see:Size to compare to this \\@see:Size.\n * @return {?}\n */\nequals(sz: Size): boolean {\n        return (sz instanceof Size) && this.width == sz.width && this.height == sz.height;\n    }\n/**\n * Creates a copy of this \\@see:Size.\n * @return {?}\n */\nclone(): Size {\n        return new Size(this.width, this.height);\n    }\n}\n\nfunction Size_tsickle_Closure_declarations() {\n/**\n * Gets or sets the width of this \\@see:Size.\n * @type {?}\n */\nSize.prototype.width;\n/**\n * Gets or sets the height of this \\@see:Size.\n * @type {?}\n */\nSize.prototype.height;\n}\n\n","\nimport { Vector3D } from './vector3d';\nimport { Point } from '../ui/point';\n/**\n * The Matrix class represents a transformation matrix that determines how to\n * map points from one coordinate space to another. You can perform various\n * graphical transformations on a display object by setting the properties of\n * a Matrix object, applying that Matrix object to the <code>matrix</code>\n * property of a Transform object, and then applying that Transform object as\n * the <code>transform</code> property of the display object. These\n * transformation functions include translation(<i>x</i> and <i>y</i>\n * repositioning), rotation, scaling, and skewing.\n * \n * <p>Together these types of transformations are known as <i>affine\n * transformations</i>. Affine transformations preserve the straightness of\n * lines while transforming, so that parallel lines stay parallel.</p>\n * \n * <p>To apply a transformation matrix to a display object, you create a\n * Transform object, set its <code>matrix</code> property to the\n * transformation matrix, and then set the <code>transform</code> property of\n * the display object to the Transform object. Matrix objects are also used as\n * parameters of some methods, such as the following:</p>\n * \n * <ul>\n *   <li>The <code>draw()</code> method of a BitmapData object</li>\n *   <li>The <code>beginBitmapFill()</code> method,\n * <code>beginGradientFill()</code> method, or\n * <code>lineGradientStyle()</code> method of a Graphics object</li>\n * </ul>\n * \n * <p>A transformation matrix object is a 3 x 3 matrix with the following\n * contents:</p>\n * \n * <p>In traditional transformation matrixes, the <code>u</code>,\n * <code>v</code>, and <code>w</code> properties provide extra capabilities.\n * The Matrix class can only operate in two-dimensional space, so it always\n * assumes that the property values <code>u</code> and <code>v</code> are 0.0,\n * and that the property value <code>w</code> is 1.0. The effective values of\n * the matrix are as follows:</p>\n * \n * <p>You can get and set the values of all six of the other properties in a\n * Matrix object: <code>a</code>, <code>b</code>, <code>c</code>,\n * <code>d</code>, <code>tx</code>, and <code>ty</code>.</p>\n * \n * <p>The Matrix class supports the four major types of transformations:\n * translation, scaling, rotation, and skewing. You can set three of these\n * transformations by using specialized methods, as described in the following\n * table: </p>\n * \n * <p>Each transformation function alters the current matrix properties so\n * that you can effectively combine multiple transformations. To do this, you\n * call more than one transformation function before applying the matrix to\n * its display object target(by using the <code>transform</code> property of\n * that display object).</p>\n * \n * <p>Use the <code>new Matrix()</code> constructor to create a Matrix object\n * before you can call the methods of the Matrix object.</p>\n */\nexport class Matrix\n{\n/**\n * The value that affects the positioning of pixels along the <i>x</i> axis\n * when scaling or rotating an image.\n */\npublic a:number;\n/**\n * The value that affects the positioning of pixels along the <i>y</i> axis\n * when rotating or skewing an image.\n */\npublic b:number;\n/**\n * The value that affects the positioning of pixels along the <i>x</i> axis\n * when rotating or skewing an image.\n */\npublic c:number;\n/**\n * The value that affects the positioning of pixels along the <i>y</i> axis\n * when scaling or rotating an image.\n */\npublic d:number;\n/**\n * The distance by which to translate each point along the <i>x</i> axis.\n */\npublic tx:number;\n/**\n * The distance by which to translate each point along the <i>y</i> axis.\n */\npublic ty:number;\n/**\n * Creates a new Matrix object with the specified parameters. In matrix\n * notation, the properties are organized like this:\n * \n * <p>If you do not provide any parameters to the <code>new Matrix()</code>\n * constructor, it creates an <i>identity matrix</i> with the following\n * values:</p>\n * \n * <p>In matrix notation, the identity matrix looks like this:</p>\n * \n * @param {?=} a  The value that affects the positioning of pixels along the\n *           <i>x</i> axis when scaling or rotating an image.\n * @param {?=} b  The value that affects the positioning of pixels along the\n *           <i>y</i> axis when rotating or skewing an image.\n * @param {?=} c  The value that affects the positioning of pixels along the\n *           <i>x</i> axis when rotating or skewing an image.\n * @param {?=} d  The value that affects the positioning of pixels along the\n *           <i>y</i> axis when scaling or rotating an image..\n * @param {?=} tx The distance by which to translate each point along the <i>x</i>\n *           axis.\n * @param {?=} ty The distance by which to translate each point along the <i>y</i>\n *           axis.\n */\nconstructor(a:number = 1, b:number = 0, c:number = 0, d:number = 1, tx:number = 0, ty:number = 0)\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n/**\n * Returns a new Matrix object that is a clone of this matrix, with an exact\n * copy of the contained object.\n * \n * @return {?} A Matrix object.\n */\npublic clone():Matrix\n\t{\n\t\treturn new Matrix(this.a, this.b, this.c, this.d, this.tx, this.ty);\n\t}\n/**\n * Concatenates a matrix with the current matrix, effectively combining the\n * geometric effects of the two. In mathematical terms, concatenating two\n * matrixes is the same as combining them using matrix multiplication.\n * \n * <p>For example, if matrix <code>m1</code> scales an object by a factor of\n * four, and matrix <code>m2</code> rotates an object by 1.5707963267949\n * radians(<code>Math.PI/2</code>), then <code>m1.concat(m2)</code>\n * transforms <code>m1</code> into a matrix that scales an object by a factor\n * of four and rotates the object by <code>Math.PI/2</code> radians. </p>\n * \n * <p>This method replaces the source matrix with the concatenated matrix. If\n * you want to concatenate two matrixes without altering either of the two\n * source matrixes, first copy the source matrix by using the\n * <code>clone()</code> method, as shown in the Class Examples section.</p>\n * \n * @param {?} matrix The matrix to be concatenated to the source matrix.\n * @return {?}\n */\npublic concat(matrix:Matrix):void\n\t{\n\t\tconst /** @type {?} */ a1 = this.a * matrix.a + this.b * matrix.c;\n\t\tthis.b   = this.a*matrix.b + this.b*matrix.d;\n\t\tthis.a   = a1;\n\n\t\tconst /** @type {?} */ c1 = this.c * matrix.a + this.d * matrix.c;\n\t\tthis.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tthis.c = c1;\n\n\t\tconst /** @type {?} */ tx1 = this.tx * matrix.a + this.ty * matrix.c + matrix.tx;\n\t\tthis.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\t\tthis.tx = tx1;\n\t}\n/**\n * Copies a Vector3D object into specific column of the calling Matrix3D\n * object.\n * \n * @param {?} column   The column from which to copy the data from.\n * @param {?} vector3D The Vector3D object from which to copy the data.\n * @return {?}\n */\npublic copyColumnFrom(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow \"Column \" + column + \" out of bounds (2)\";\n\t\t} else if (column == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (column == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n/**\n * Copies specific column of the calling Matrix object into the Vector3D\n * object. The w element of the Vector3D object will not be changed.\n * \n * @param {?} column   The column from which to copy the data from.\n * @param {?} vector3D The Vector3D object from which to copy the data.\n * @return {?}\n */\npublic copyColumnTo(column:number, vector3D:Vector3D):void\n\t{\n\t\tif (column > 2) {\n\t\t\tthrow new Error(\"Error, Column \" + column + \" out of bounds [0, ..., 2]\");\n\t\t} else if (column == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.c;\n\t\t\tvector3D.z = 0;\n\t\t} else if (column == 1) {\n\t\t\tvector3D.x = this.b;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = 0;\n\t\t} else {\n\t\t\tvector3D.x = this.tx;\n\t\t\tvector3D.y = this.ty;\n\t\t\tvector3D.z = 1;\n\t\t}\n\t}\n/**\n * Copies all of the matrix data from the source Point object into the\n * calling Matrix object.\n * \n * @param {?} sourceMatrix The Matrix object from which to copy the data.\n * @return {?}\n */\npublic copyFrom(sourceMatrix:Matrix):void\n\t{\n\t\tthis.a = sourceMatrix.a;\n\t\tthis.b = sourceMatrix.b;\n\t\tthis.c = sourceMatrix.c;\n\t\tthis.d = sourceMatrix.d;\n\t\tthis.tx = sourceMatrix.tx;\n\t\tthis.ty = sourceMatrix.ty;\n\t}\n/**\n * Copies a Vector3D object into specific row of the calling Matrix object.\n * \n * @param {?} row      The row from which to copy the data from.\n * @param {?} vector3D The Vector3D object from which to copy the data.\n * @return {?}\n */\npublic copyRowFrom(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new Error(\"Error, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tthis.a = vector3D.x;\n\t\t\tthis.c = vector3D.y;\n\t\t} else if (row == 1) {\n\t\t\tthis.b = vector3D.x;\n\t\t\tthis.d = vector3D.y;\n\t\t} else {\n\t\t\tthis.tx = vector3D.x;\n\t\t\tthis.ty = vector3D.y;\n\t\t}\n\t}\n/**\n * Copies specific row of the calling Matrix object into the Vector3D object.\n * The w element of the Vector3D object will not be changed.\n * \n * @param {?} row      The row from which to copy the data from.\n * @param {?} vector3D The Vector3D object from which to copy the data.\n * @return {?}\n */\npublic copyRowTo(row:number, vector3D:Vector3D):void\n\t{\n\t\tif (row > 2) {\n\t\t\tthrow new Error(\"Error, Row \" + row + \" out of bounds [0, ..., 2]\");\n\t\t} else if (row == 0) {\n\t\t\tvector3D.x = this.a;\n\t\t\tvector3D.y = this.b;\n\t\t\tvector3D.z = this.tx;\n\t\t} else if (row == 1) {\n\t\t\tvector3D.x = this.c;\n\t\t\tvector3D.y = this.d;\n\t\t\tvector3D.z = this.ty;\n\t\t} else {\n\t\t\tvector3D.setTo(0, 0, 1);\n\t\t}\n\t}\n/**\n * Includes parameters for scaling, rotation, and translation. When applied\n * to a matrix it sets the matrix's values based on those parameters.\n * \n * <p>Using the <code>createBox()</code> method lets you obtain the same\n * matrix as you would if you applied the <code>identity()</code>,\n * <code>rotate()</code>, <code>scale()</code>, and <code>translate()</code>\n * methods in succession. For example, <code>mat1.createBox(2,2,Math.PI/4,\n * 100, 100)</code> has the same effect as the following:</p>\n * \n * @param {?} scaleX   The factor by which to scale horizontally.\n * @param {?} scaleY   The factor by which scale vertically.\n * @param {?=} rotation The amount to rotate, in radians.\n * @param {?=} tx       The number of pixels to translate(move) to the right\n *                 along the <i>x</i> axis.\n * @param {?=} ty       The number of pixels to translate(move) down along the\n *                 <i>y</i> axis.\n * @return {?}\n */\npublic createBox(scaleX:number, scaleY:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = scaleX;\n\t\tthis.d = scaleY;\n\t\tthis.b = rotation;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n/**\n * Creates the specific style of matrix expected by the\n * <code>beginGradientFill()</code> and <code>lineGradientStyle()</code>\n * methods of the Graphics class. Width and height are scaled to a\n * <code>scaleX</code>/<code>scaleY</code> pair and the\n * <code>tx</code>/<code>ty</code> values are offset by half the width and\n * height.\n * \n * <p>For example, consider a gradient with the following\n * characteristics:</p>\n * \n * <ul>\n *   <li><code>GradientType.LINEAR</code></li>\n *   <li>Two colors, green and blue, with the ratios array set to <code>[0,\n * 255]</code></li>\n *   <li><code>SpreadMethod.PAD</code></li>\n *   <li><code>InterpolationMethod.LINEAR_RGB</code></li>\n * </ul>\n * \n * <p>The following illustrations show gradients in which the matrix was\n * defined using the <code>createGradientBox()</code> method with different\n * parameter settings:</p>\n * \n * @param {?} width    The width of the gradient box.\n * @param {?} height   The height of the gradient box.\n * @param {?=} rotation The amount to rotate, in radians.\n * @param {?=} tx       The distance, in pixels, to translate to the right along\n *                 the <i>x</i> axis. This value is offset by half of the\n *                 <code>width</code> parameter.\n * @param {?=} ty       The distance, in pixels, to translate down along the\n *                 <i>y</i> axis. This value is offset by half of the\n *                 <code>height</code> parameter.\n * @return {?}\n */\npublic createGradientBox(width:number, height:number, rotation:number = 0, tx:number = 0, ty:number = 0):void\n\t{\n\t\tthis.a = width/1638.4;\n\t\tthis.d = height/1638.4;\n\n\t\tif (rotation != 0.0) {\n\t\t\tconst /** @type {?} */ cos = Math.cos(rotation);\n\t\t\tlet /** @type {?} */ sin   = Math.sin(rotation);\n\n\t\t\tthis.b = sin*this.d;\n\t\t\tthis.c = -sin*this.a;\n\t\t\tthis.a *= cos;\n\t\t\tthis.d *= cos;\n\t\t} else {\n\t\t\tthis.b = this.c = 0;\n\t\t}\n\n\t\tthis.tx = tx + width/2;\n\t\tthis.ty = ty + height/2;\n\t}\n/**\n * Given a point in the pretransform coordinate space, returns the\n * coordinates of that point after the transformation occurs. Unlike the\n * standard transformation applied using the <code>transformPoint()</code>\n * method, the <code>deltaTransformPoint()</code> method's transformation\n * does not consider the translation parameters <code>tx</code> and\n * <code>ty</code>.\n * \n * @param {?} point The point for which you want to get the result of the matrix\n *              transformation.\n * @return {?} The point resulting from applying the matrix transformation.\n */\npublic deltaTransformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c, point.x*this.b + point.y*this.d);\n\t}\n/**\n * Sets each matrix property to a value that causes a null transformation. An\n * object transformed by applying an identity matrix will be identical to the\n * original.\n * \n * <p>After calling the <code>identity()</code> method, the resulting matrix\n * has the following properties: <code>a</code>=1, <code>b</code>=0,\n * <code>c</code>=0, <code>d</code>=1, <code>tx</code>=0,\n * <code>ty</code>=0.</p>\n * \n * <p>In matrix notation, the identity matrix looks like this:</p>\n * \n * @return {?}\n */\npublic identity():void\n\t{\n\t\tthis.a = 1;\n\t\tthis.b = 0;\n\t\tthis.c = 0;\n\t\tthis.d = 1;\n\t\tthis.tx = 0;\n\t\tthis.ty = 0;\n\t}\n/**\n * Performs the opposite transformation of the original matrix. You can apply\n * an inverted matrix to an object to undo the transformation performed when\n * applying the original matrix.\n * @return {?}\n */\npublic invert():void\n\t{\n\t\tlet /** @type {?} */ norm = this.a * this.d - this.b * this.c;\n\n\t\tif (norm == 0) {\n\t\t\tthis.a = this.b = this.c = this.d = 0;\n\t\t\tthis.tx = -this.tx;\n\t\t\tthis.ty = -this.ty;\n\t\t} else {\n\t\t\tnorm = 1.0/norm;\n\t\t\tconst /** @type {?} */ a1 = this.d * norm;\n\t\t\tthis.d = this.a*norm;\n\t\t\tthis.a = a1;\n\t\t\tthis.b *= -norm;\n\t\t\tthis.c *= -norm;\n\n\t\t\tconst /** @type {?} */ tx1 = -this.a * this.tx - this.c * this.ty;\n\t\t\tthis.ty = -this.b*this.tx - this.d*this.ty;\n\t\t\tthis.tx = tx1;\n\t\t}\n\t}\n/**\n * Returns a new Matrix object that is a clone of this matrix, with an exact\n * copy of the contained object.\n * \n * @param {?} matrix The matrix for which you want to get the result of the matrix\n *               transformation.\n * @return {?} A Matrix object.\n */\npublic multiply(matrix:Matrix):Matrix\n\t{\n\t\tconst /** @type {?} */ result = new Matrix();\n\n\t\tresult.a = this.a*matrix.a + this.b*matrix.c;\n\t\tresult.b = this.a*matrix.b + this.b*matrix.d;\n\t\tresult.c = this.c*matrix.a + this.d*matrix.c;\n\t\tresult.d = this.c*matrix.b + this.d*matrix.d;\n\n\t\tresult.tx = this.tx*matrix.a + this.ty*matrix.c + matrix.tx;\n\t\tresult.ty = this.tx*matrix.b + this.ty*matrix.d + matrix.ty;\n\n\t\treturn result;\n\t}\n/**\n * Applies a rotation transformation to the Matrix object.\n * \n * <p>The <code>rotate()</code> method alters the <code>a</code>,\n * <code>b</code>, <code>c</code>, and <code>d</code> properties of the\n * Matrix object. In matrix notation, this is the same as concatenating the\n * current matrix with the following:</p>\n * \n * @param {?} angle The rotation angle in radians.\n * @return {?}\n */\npublic rotate(angle:number):void\n\t{\n\t\tconst /** @type {?} */ cos = Math.cos(angle);\n\t\tconst /** @type {?} */ sin = Math.sin(angle);\n\n\t\tconst /** @type {?} */ a1 = this.a * cos - this.b * sin;\n\t\tthis.b = this.a*sin + this.b*cos;\n\t\tthis.a = a1;\n\n\t\tconst /** @type {?} */ c1 = this.c * cos - this.d * sin;\n\t\tthis.d = this.c*sin + this.d*cos;\n\t\tthis.c = c1;\n\n\t\tconst /** @type {?} */ tx1 = this.tx * cos - this.ty * sin;\n\t\tthis.ty = this.tx*sin + this.ty*cos;\n\t\tthis.tx = tx1;\n\t}\n/**\n * Applies a scaling transformation to the matrix. The <i>x</i> axis is\n * multiplied by <code>sx</code>, and the <i>y</i> axis it is multiplied by\n * <code>sy</code>.\n * \n * <p>The <code>scale()</code> method alters the <code>a</code> and\n * <code>d</code> properties of the Matrix object. In matrix notation, this\n * is the same as concatenating the current matrix with the following\n * matrix:</p>\n * \n * @param {?} sx A multiplier used to scale the object along the <i>x</i> axis.\n * @param {?} sy A multiplier used to scale the object along the <i>y</i> axis.\n * @return {?}\n */\npublic scale(sx:number, sy:number):void\n\t{\n\t\tthis.a *= sx;\n\t\tthis.b *= sy;\n\n\t\tthis.c *= sx;\n\t\tthis.d *= sy;\n\n\t\tthis.tx *= sx;\n\t\tthis.ty *= sy;\n\t}\n/**\n * Sets the members of Matrix to the specified values.\n * \n * @param {?} a  The value that affects the positioning of pixels along the\n *           <i>x</i> axis when scaling or rotating an image.\n * @param {?} b  The value that affects the positioning of pixels along the\n *           <i>y</i> axis when rotating or skewing an image.\n * @param {?} c  The value that affects the positioning of pixels along the\n *           <i>x</i> axis when rotating or skewing an image.\n * @param {?} d  The value that affects the positioning of pixels along the\n *           <i>y</i> axis when scaling or rotating an image..\n * @param {?} tx The distance by which to translate each point along the <i>x</i>\n *           axis.\n * @param {?} ty The distance by which to translate each point along the <i>y</i>\n *           axis.\n * @return {?}\n */\npublic setTo(a:number, b:number, c:number, d:number, tx:number, ty:number):void\n\t{\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\t\tthis.d = d;\n\t\tthis.tx = tx;\n\t\tthis.ty = ty;\n\t}\n/**\n * Returns a text value listing the properties of the Matrix object.\n * \n * @return {?} A string containing the values of the properties of the Matrix\n *         object: <code>a</code>, <code>b</code>, <code>c</code>,\n *         <code>d</code>, <code>tx</code>, and <code>ty</code>.\n */\npublic toString():string\n\t{\n\t\treturn \"[Matrix] (a=\" + this.a + \", b=\" + this.b + \", c=\" + this.c + \", d=\" + this.d + \", tx=\" + this.tx + \", ty=\" + this.ty + \")\";\n\t}\n/**\n * Returns the result of applying the geometric transformation represented by\n * the Matrix object to the specified point.\n * \n * @param {?} point The point for which you want to get the result of the Matrix\n *              transformation.\n * @return {?} The point resulting from applying the Matrix transformation.\n */\npublic transformPoint(point:Point):Point\n\t{\n\t\treturn new Point(point.x*this.a + point.y*this.c + this.tx, point.x*this.b + point.y*this.d + this.ty);\n\t}\n/**\n * Translates the matrix along the <i>x</i> and <i>y</i> axes, as specified\n * by the <code>dx</code> and <code>dy</code> parameters.\n * \n * @param {?} dx The amount of movement along the <i>x</i> axis to the right, in\n *           pixels.\n * @param {?} dy The amount of movement down along the <i>y</i> axis, in pixels.\n * @return {?}\n */\npublic translate(dx:number, dy:number):void\n\t{\n\t\tthis.tx += dx;\n\t\tthis.ty += dy;\n\t}\n}\n\nfunction Matrix_tsickle_Closure_declarations() {\n/**\n * The value that affects the positioning of pixels along the <i>x</i> axis\n * when scaling or rotating an image.\n * @type {?}\n */\nMatrix.prototype.a;\n/**\n * The value that affects the positioning of pixels along the <i>y</i> axis\n * when rotating or skewing an image.\n * @type {?}\n */\nMatrix.prototype.b;\n/**\n * The value that affects the positioning of pixels along the <i>x</i> axis\n * when rotating or skewing an image.\n * @type {?}\n */\nMatrix.prototype.c;\n/**\n * The value that affects the positioning of pixels along the <i>y</i> axis\n * when scaling or rotating an image.\n * @type {?}\n */\nMatrix.prototype.d;\n/**\n * The distance by which to translate each point along the <i>x</i> axis.\n * @type {?}\n */\nMatrix.prototype.tx;\n/**\n * The distance by which to translate each point along the <i>y</i> axis.\n * @type {?}\n */\nMatrix.prototype.ty;\n}\n\n","import {isArray, isDate} from '../../util/util';\nimport {culture} from '../../globalization/Localization';\n/**\n * Provides date and time utilities.\n */\nexport class DateTime {\n/**\n * Gets a new Date that adds the specified number of days to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} days Number of days to add to the given date.\n * @return {?}\n */\nstatic addDays(value: Date, days: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate() + days);\n    }\n/**\n * Gets a new Date that adds the specified number of months to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} months Number of months to add to the given date.\n * @return {?}\n */\nstatic addMonths(value: Date, months: number): Date {\n        return new Date(value.getFullYear(), value.getMonth() + months, value.getDate());\n    }\n/**\n * Gets a new Date that adds the specified number of years to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} years Number of years to add to the given date.\n * @return {?}\n */\nstatic addYears(value: Date, years: number): Date {\n        return new Date(value.getFullYear() + years, value.getMonth(), value.getDate());\n    }\n/**\n * Gets a new Date that adds the specified number of hours to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} hours Number of hours to add to the given date.\n * @return {?}\n */\nstatic addHours(value: Date, hours: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours() + hours);\n    }\n/**\n * Gets a new Date that adds the specified number of minutes to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} minutes Number of minutes to add to the given date.\n * @return {?}\n */\nstatic addMinutes(value: Date, minutes: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes() + minutes);\n    }\n/**\n * Gets a new Date that adds the specified number of seconds to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} seconds Number of seconds to add to the given date.\n * @return {?}\n */\nstatic addSeconds(value: Date, seconds: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes(), value.getSeconds() + seconds);\n    }\n/**\n * Returns true if two Date objects refer to the same date (ignoring time).\n * \n * @param {?} d1 First date.\n * @param {?} d2 Second date.\n * @return {?}\n */\nstatic sameDate(d1: Date, d2: Date): boolean {\n        return isDate(d1) && isDate(d2) &&\n            d1.getFullYear() == d2.getFullYear() &&\n            d1.getMonth() == d2.getMonth() &&\n            d1.getDate() == d2.getDate();\n    }\n/**\n * Returns true if two Date objects refer to the same time (ignoring date).\n * \n * @param {?} d1 First date.\n * @param {?} d2 Second date.\n * @return {?}\n */\nstatic sameTime(d1: Date, d2: Date): boolean {\n        return isDate(d1) && isDate(d2) &&\n            d1.getHours() == d2.getHours() &&\n            d1.getMinutes() == d2.getMinutes() &&\n            d1.getSeconds() == d2.getSeconds();\n    }\n/**\n * Returns true if two Date objects refer to the same date and time.\n * \n * @param {?} d1 First date.\n * @param {?} d2 Second date.\n * @return {?}\n */\nstatic equals(d1: Date, d2: Date): boolean {\n        return isDate(d1) && isDate(d2) && d1.getTime() == d2.getTime();\n    }\n/**\n * Gets a Date object with the date and time set on two Date objects.\n * \n * @param {?} date Date object that contains the date (day/month/year).\n * @param {?} time Date object that contains the time (hour:minute:second).\n * @return {?}\n */\nstatic fromDateTime(date: Date, time: Date): Date {\n        if (!date && !time) return null;\n        if (!date) date = time;\n        if (!time) time = date;\n        return new Date(\n            date.getFullYear(), date.getMonth(), date.getDate(),\n            time.getHours(), time.getMinutes(), time.getSeconds());\n    }\n/**\n * Converts a calendar date to a fiscal date using the current culture.\n * \n * @param {?} date Calendar date.\n * @param {?} govt Whether to use the government or corporate fiscal year.\n * @return {?}\n */\nstatic toFiscal(date: Date, govt: boolean) {\n        const /** @type {?} */ cal = culture.Globalize.calendar;\n        return isArray(cal.fiscalYearOffsets)\n            ? DateTime.addMonths(date, -cal.fiscalYearOffsets[govt ? 0 : 1])\n            : date;\n    }\n/**\n * Converts a fiscal year date to a calendar date using the current culture.\n * \n * @param {?} date Fiscal year date.\n * @param {?} govt Whether to use the government or corporate fiscal year.\n * @return {?}\n */\nstatic fromFiscal(date: Date, govt: boolean) {\n        const /** @type {?} */ cal = culture.Globalize.calendar;\n        return isArray(cal.fiscalYearOffsets)\n            ? DateTime.addMonths(date, +cal.fiscalYearOffsets[govt ? 0 : 1])\n            : date;\n    }\n/**\n * Creates a copy of a given Date object.\n * \n * @param {?} date Date object to copy.\n * @return {?}\n */\nstatic clone(date: Date): Date {\n        return DateTime.fromDateTime(date, date);\n    }\n}\n","'use strict';\n/**\n * Gets or sets an object that contains all localizable strings in the Wijmo library.\n * \n * The culture selector is a two-letter string that represents an\n * <a href='http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes'>ISO 639 culture</a>.\n */\nexport let culture: any = {\n    Globalize: {\n        numberFormat: {\n            NumberDecimalSeparator: '.',\n            NumberGroupSeparator: ',',\n            CurrencySymbol: '$',\n            '.': '.',\n            ',': ',',\n            percent: {pattern: ['-n %', 'n %']},\n            currency: {decimals: 2, symbol: '$', pattern: ['($n)', '$n']}\n        },\n        dateTimeFormat: {\n            TimeSeparator: '/',\n            DateSeparator: ':',\n            '/': '/',\n            ':': ':',\n        },\n        calendar: {\n            '/': '/',\n            ':': ':',\n            firstDay: 0,\n            days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            daysAbbr: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n            monthsAbbr: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            am: ['AM', 'A'],\n            pm: ['PM', 'P'],\n            eras: ['A.D.', 'B.C.'],\n            patterns: {\n                d: 'M/d/yyyy', D: 'dddd, MMMM dd, yyyy',\n                f: 'dddd, MMMM dd, yyyy h:mm tt', F: 'dddd, MMMM dd, yyyy h:mm:ss tt',\n                t: 'h:mm tt', T: 'h:mm:ss tt',\n                M: 'MMMM d', m: 'MMMM d',\n                Y: 'MMMM, yyyy', y: 'MMMM, yyyy',\n                g: 'M/d/yyyy h:mm tt', G: 'M/d/yyyy h:mm:ss tt',\n                s: 'yyyy\"-\"MM\"-\"dd\"T\"HH\":\"mm\":\"ss',\n                o: 'yyyy\"-\"MM\"-\"dd\"T\"HH\":\"mm\":\"ss\".\"fffffffK',\n                O: 'yyyy\"-\"MM\"-\"dd\"T\"HH\":\"mm\":\"ss\".\"fffffffK',\n                U: 'dddd, MMMM dd, yyyy h:mm:ss tt'\n            },\n            fiscalYearOffsets: [-3, -3]\n        }\n    },\n    MultiSelect: {\n        itemsSelected: '{count:n0} items selected'\n    },\n    FlexGrid: {\n        groupHeaderFormat: '{name}: <b>{value} </b>({count:n0} items)'\n    },\n    FlexGridFilter: {\n\n        // filter\n        ascending: '\\u2191 Ascending',\n        descending: '\\u2193 Descending',\n        apply: 'Apply',\n        clear: 'Clear',\n        conditions: 'Filter by Condition',\n        values: 'Filter by Value',\n\n        // value filter\n        search: 'Search',\n        selectAll: 'Select All',\n        null: '(nothing)',\n\n        // condition filter\n        header: 'Show items where the value',\n        and: 'And',\n        or: 'Or',\n        stringOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Does not equal', op: 1},\n            {name: 'Begins with', op: 6},\n            {name: 'Ends with', op: 7},\n            {name: 'Contains', op: 8},\n            {name: 'Does not contain', op: 9}\n        ],\n        numberOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Does not equal', op: 1},\n            {name: 'Is Greater than', op: 2},\n            {name: 'Is Greater than or equal to', op: 3},\n            {name: 'Is Less than', op: 4},\n            {name: 'Is Less than or equal to', op: 5}\n        ],\n        dateOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Is Before', op: 4},\n            {name: 'Is After', op: 3}\n        ],\n        booleanOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Does not equal', op: 1}\n        ]\n    }\n};\n","import {DataType} from '../enum/data-type';\nimport {isArray} from '../lang/is-array';\nimport {isString} from '../lang/is-string';\nimport {isDate} from '../lang/is-date';\nimport {isBoolean} from '../lang/is-boolean';\nimport {isNumber} from '../lang/is-number';\n/**\n * Gets the type of a value.\n * \n * @param {?} value Value to test.\n * @return {?} A \\@see:DataType value representing the type of the value passed in.\n */\nexport function getType(value: any): DataType {\n    if (isNumber(value)) return DataType.Number;\n    if (isBoolean(value)) return DataType.Boolean;\n    if (isDate(value)) return DataType.Date;\n    if (isString(value)) return DataType.String;\n    if (isArray(value)) return DataType.Array;\n    return DataType.Object;\n}\n","\n/**\n * @param {?} text\n * @return {?}\n */\nexport function toHyphenCase(text: string): string {\n    return text.length ? (text[0] + text.substr(1).replace(/([A-Z])/g, '-$1')).toLowerCase() : '';\n}\n","\n/**\n * Converts a camel-cased string into a header-type string by capitalizing the first letter\n * and adding spaces before uppercase characters preceded by lower-case characters.\n * \n * For example, 'somePropertyName' becomes 'Some Property Name'.\n * \n * @param {?} text String to convert to header case.\n * @return {?}\n */\nexport function toHeaderCase(text: string): string {\n    return text.length ? text[0].toUpperCase() + text.substr(1).replace(/([a-z])([A-Z])/g, '$1 $2') : '';\n}","import {isString} from '../lang/is-string';\n/**\n * Escapes a string by replacing HTML characters as text entities.\n * \n * Strings entered by uses should always be escaped before they are displayed\n * in HTML pages. This ensures page integrity and prevents HTML/javascript\n * injection attacks.\n * \n * @param {?} text Text to escape.\n * @return {?} An HTML-escaped version of the original string.\n */\nexport function escapeHtml(text: string) {\n    if (isString(text)) {\n        text = text.replace(/[&<>\"'\\/]/g, function (s) {\n            return _ENTITYMAP[s];\n        });\n    }\n    return text;\n}\nconst /** @type {?} */ _ENTITYMAP = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;'\n};\n","\n/**\n * Rounds or truncates a number to a specified precision.\n * \n * @param {?} value Value to round or truncate.\n * @param {?} prec Number of decimal digits for the result.\n * @param {?} truncate Whether to truncate or round the original value.\n * @return {?}\n */\nexport function toFixed(value: number, prec: number, truncate: boolean): number {\n    if (truncate) {\n        var /** @type {?} */ s = value.toString(), /** @type {?} */\n            decPos = s.indexOf('.');\n        if (decPos > -1) {\n            s = s.substr(0, decPos + 1 + prec);\n            value = parseFloat(s);\n        }\n    } else {\n        var /** @type {?} */ s = value.toFixed(prec);\n        value = parseFloat(s);\n    }\n    return value;\n}","\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nexport function clamp(value: number, min: number, max: number): number {\n    if (value != null) {\n        if (max != null && value > max) value = max;\n        if (min != null && value < min) value = min;\n    }\n    return value;\n}\n","\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isPresent(obj: any): boolean {\n    return obj != null;\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isUndefined(value: any): boolean {\n    return typeof value == 'undefined'\n}\n","import {isDate} from './is-date';\nimport {isBoolean} from './is-boolean';\nimport {isNumber} from './is-number';\nimport {isString} from './is-string';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isPrimitive(value: any): boolean {\n    return isString(value) || isNumber(value) || isBoolean(value) || isDate(value);\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNullOrWhitespace(value:string) {\n    return value == null ? true : value.replace(/\\s/g, '').length < 1;\n}\n","\n/**\n * Sets the text content of an element.\n * \n * @param {?} e Element that will have its content updated.\n * @param {?} text Plain text to be assigned to the element.\n * @return {?}\n */\nexport function setText(e: HTMLElement, text: string) {\n\n    // clear\n    if (text == null) {\n        if (e.hasChildNodes()) {\n\n            // this causes serious/weird problems in IE, so DON'T DO IT!!!\n            //e.innerHTML = '';\n\n            // this works, but seems inefficient/convoluted\n            //var dr = document.createRange();\n            //dr.setStart(e, 0);\n            //dr.setEnd(e, e.childNodes.length);\n            //dr.deleteContents();\n\n            // seems like the best option (simple and works)\n            e.textContent = '';\n        }\n        return;\n    }\n\n    // set text\n    const /** @type {?} */ fc = e.firstChild;\n    if (e.childNodes.length == 1 && fc.nodeType == 3) {\n        if (fc.nodeValue != text) {\n            fc.nodeValue = text; // update text directly in the text node\n        }\n    } else if (fc || text) {\n        e.textContent = text; // something else, set the textContent\n    }\n}\n","\n/**\n * Modifies the style of an element by applying the properties specified in an object.\n * \n * @param {?} e Element whose style will be modified.\n * @param {?} css Object containing the style properties to apply to the element.\n * @return {?}\n */\nexport function setCss(e: HTMLElement, css: any) {\n    const /** @type {?} */ s = e.style;\n    for (let /** @type {?} */ p in css) {\n\n        // add pixel units to numeric geometric properties\n        let /** @type {?} */ val = css[p];\n        if (typeof (val) == 'number' &&\n            p.match(/width|height|left|top|right|bottom|size|padding|margin'/i)) {\n           // val += 'px';\n        }\n\n        // set the attribute if it changed\n        if (s[p] != val) {\n            s[p] = val.toString();\n        }\n    }\n}\n","import {isString} from '../lang/is-string';\n/**\n * Gets an element from a jQuery-style selector.\n * \n * @param {?} selector An element, a query selector string, or a jQuery object.\n * @return {?}\n */\nexport function getElement(selector: any): HTMLElement {\n    if (selector instanceof HTMLElement) return selector;\n    if (isString(selector)) return /** @type {?} */(( <HTMLElement>document.querySelector(selector)));\n    if (selector && selector.jquery) return /** @type {?} */(( <HTMLElement>selector[0]));\n    return null;\n}\n","import {toggleClass} from './toggle-class';\n/**\n * Enables or disables an element.\n * \n * @param {?} e Element to enable or disable.\n * @param {?} enable Whether to enable or disable the element.\n * @return {?}\n */\nexport function enable(e: HTMLElement, enable: boolean) {\n    if (enable) {\n        e.removeAttribute('disabled');\n    } else {\n        e.setAttribute('disabled', 'true');\n    }\n    toggleClass(e, 'wj-state-disabled', !enable);\n}\n","import {removeClass} from './remove-class';\nimport {addClass} from './add-class';\n/**\n * Adds or removes a class to or from an element.\n * \n * @param {?} e Element that will have the class added.\n * @param {?} className Class to add or remove.\n * @param {?} addOrRemove Whether to add or remove the class.\n * Use true to add class to element and false to remove class from element.\n * @return {?}\n */\nexport function toggleClass(e: HTMLElement, className: string, addOrRemove: boolean) {\n    if (addOrRemove) {\n        addClass(e, className);\n    } else {\n        removeClass(e, className);\n    }\n}\n","import {hasClass} from './has-class';\n/**\n * Removes a class from an element.\n * \n * @param {?} e Element that will have the class removed.\n * @param {?} className Class to remove form the element.\n * @return {?}\n */\nexport function removeClass(e: HTMLElement, className: string) {\n    // note: using e.getAttribute('class') instead of e.classNames\n    // so this works with SVG as well as regular HTML elements.\n    if (e && e.setAttribute && hasClass(e, className)) {\n        const /** @type {?} */ rx = new RegExp('\\\\s?\\\\b' + className + '\\\\b', 'g'), /** @type {?} */\n              cn = e.getAttribute('class');\n        e.setAttribute('class', cn.replace(rx, ''));\n    }\n}\n","\n/**\n * Checks whether an HTML element contains another.\n * \n * @param {?} parent Parent element.\n * @param {?} child Child element.\n * @return {?} True if the parent element contains the child element.\n */\nexport function contains(parent: any, child: any): boolean {\n    for (let /** @type {?} */ e = /** @type {?} */(( <Node>child)); e; e = e.parentNode) {\n        if (e === parent) return true;\n    }\n    return false;\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function containsFocus(e:HTMLElement):boolean{\n  return contains(e, document.activeElement);\n}\n","\n/**\n * Finds the closest ancestor that satisfies a selector.\n * \n * @param {?} e Element where the search should start.\n * @param {?} selector A string containing a selector expression to match elements against.\n * @return {?} The nearest ancestor that satisfies the selector (including the original element), or null if not found.\n */\nexport function closest(e: any, selector: string): Node {\n\n    // simpler/faster implementation with 'matches' method\n    // http://davidwalsh.name/element-matches-selector\n    const /** @type {?} */ matches = e ? (e.matches || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector) : null;\n    if (matches) {\n        for (; e; e = e.parentNode) {\n            if (e instanceof HTMLElement && matches.call(e, selector)) {\n                return e;\n            }\n        }\n    }\n\n    // original implementation using querySelectorAll (no 'matches')\n    //var start = e;\n    //for (e = e.parentNode; e; e = e.parentNode) {\n    //    var qs = e.querySelectorAll && e.querySelectorAll(selector);\n    //    if (qs && qs.length) {\n    //\n    //        // return original element if it is a match\n    //        for (var i = 0; i < qs.length; i++) {\n    //            if (qs[i] == start) {\n    //                return start;\n    //            }\n    //        }\n    //\n    //        // look for a match that contains the original element\n    //        for (var i = 0; i < qs.length; i++) {\n    //            if (contains(qs[i], start)) {\n    //                return qs[i];\n    //            }\n    //        }\n    //\n    //        // not found\n    //        return null;\n    //    }\n    //}\n\n    // not found\n    return null;\n}\n","import {hasClass} from './has-class';\n/**\n * Adds a class to an element.\n * \n * @param {?} e Element that will have the class added.\n * @param {?} className Class to add to the element.\n * @return {?}\n */\nexport function addClass(e: HTMLElement, className: string) {\n    // note: using e.getAttribute('class') instead of e.classNames\n    // so this works with SVG as well as regular HTML elements.\n    if (e && e.setAttribute && !hasClass(e, className)) {\n        const /** @type {?} */ cn = e.getAttribute('class');\n        e.setAttribute('class', cn ? cn + ' ' + className : className);\n    }\n}\n","\n/**\n * Checks whether an element has a class.\n * \n * @param {?} e Element to check.\n * @param {?} className Class to check for.\n * @return {?}\n */\nexport function hasClass(e: HTMLElement, className: string): boolean {\n    // note: using e.getAttribute('class') instead of e.classNames\n    // so this works with SVG as well as regular HTML elements.\n    if (e && e.getAttribute) {\n        const /** @type {?} */ rx = new RegExp('\\\\b' + className + '\\\\b');\n        return e && rx.test(e.getAttribute('class'));\n    }\n    return false;\n}\n","\n/**\n * @return {?}\n */\nexport function maxCssWidth(){\n    let /** @type {?} */ maxWidth         = 1e6;\n    const /** @type {?} */ testUpTo = 60e6, /** @type {?} */\n        div        = document.createElement('div');\n    div.style.visibility = 'hidden';\n    document.body.appendChild(div);\n    for (let /** @type {?} */ test = maxWidth; test <= testUpTo; test += 500000) {\n        div.style.width = test + 'px';\n        if (div.offsetWidth != test) {\n            break;\n        }\n        maxWidth = test;\n    }\n    document.body.removeChild(div);\n    return maxWidth;\n}\n","\n/**\n * @return {?}\n */\nexport function maxCssHeight(){\n    let /** @type {?} */ maxHeight        = 1e6;\n    const /** @type {?} */ testUpTo = 60e6, /** @type {?} */\n        div        = document.createElement('div');\n    div.style.visibility = 'hidden';\n    document.body.appendChild(div);\n    for (let /** @type {?} */ test = maxHeight; test <= testUpTo; test += 500000) {\n        div.style.height = test + 'px';\n        if (div.offsetHeight != test) {\n            break;\n        }\n        maxHeight = test;\n    }\n    document.body.removeChild(div);\n    return maxHeight;\n}\n","import {createElement} from '../dom/create-element';\nimport { RtlMode } from '../enum/rtl-mode';\n/**\n * @return {?}\n */\nexport function isRtlMode() {\n    const /** @type {?} */ el = createElement(\n        '<div dir=\"rtl\" style=\"visibility:hidden;width:100px;height:100px;overflow:auto\">' +\n        '<div style=\"width:2000px;height:2000px\"></div>' +\n        '</div>'\n    );\n\n    document.body.appendChild(el);\n    const /** @type {?} */ sl = el.scrollLeft;\n    el.scrollLeft = -1000;\n    const /** @type {?} */ sln = el.scrollLeft;\n    document.body.removeChild(el);\n\n    return sln < 0 ? RtlMode.Negative : sl > 0 ? RtlMode.Reverse : RtlMode.Standard;\n}\n","\n/**\n * Creates an element from an HTML string.\n * \n * @param {?} html HTML fragment to convert into an HTMLElement.\n * @return {?} The new element.\n */\nexport function createElement(html: string) : HTMLElement {\n    const /** @type {?} */ div     = document.createElement('div');\n    div.innerHTML = html;\n    return /** @type {?} */(( <HTMLElement>div.removeChild(div.firstChild)));\n}\n","import {tryCast} from '../../common/Global';\nimport {assert} from './assert';\n/**\n * Asserts that a value is an instance of a given type.\n * \n * @param {?} value Value to be checked.\n * @param {?} type Type of value expected.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The value passed in.\n */\nexport function asType(value: any, type: any, nullOK = false): any {\n    value = tryCast(value, type);\n    assert(nullOK || value != null, type + ' expected.');\n    return value;\n}\n","import {Binding} from './Binding';\nimport {Rectangle} from './ui/Rectangle';\nimport {isFunction, isString, asType, contains, asNumber, isBoolean, isNumber} from '../util/util';\nimport {Aggregate} from '../../../enum/Aggregate';\nimport {ICollectionView} from '../../../collections/interface/ICollectionView';\n\n\n\n\n/**\n * Allows callers to verify whether an object implements an interface.\n */\nexport interface IQueryInterface {\n    /**\n     * Returns true if the object implements a given interface.\n     *\n     * @param interfaceName Name of the interface to look for.\n     */\n    implementsInterface(interfaceName: string): boolean;\n}\n/**\n * Casts a value to a type if possible.\n * \n * @param {?} value Value to cast.\n * @param {?} type Type or interface name to cast to.\n * @return {?} The value passed in if the cast was successful, null otherwise.\n */\nexport function tryCast(value: any, type: any): any {\n\n    // null doesn't implement anything\n    if (value == null) {\n        return null;\n    }\n\n    // test for interface implementation (IQueryInterface)\n    if (isString(type)) {\n        return isFunction(value.implementsInterface) && value.implementsInterface(type) ? value : null;\n    }\n\n    // regular type test\n    return value instanceof type ? value : null;\n}\n/**\n * Checks whether an \\@see:ICollectionView is defined and not empty.\n * \n * @param {?} value \\@see:ICollectionView to check.\n * @return {?}\n */\nexport function hasItems(value: ICollectionView) {\n    return value && value.items && value.items.length;\n}\n/**\n * Sets the start and end positions of a selection in a text field.\n * \n * This method is similar to the native \\@see:setSelectionRange method\n * in HTMLInputElement objects, except it checks for conditions that\n * may cause exceptions (element not in the DOM, disabled, or hidden).\n * \n * @param {?} e\n * @param {?} start Offset into the text field for the start of the selection.\n * @param {?=} end Offset into the text field for the end of the selection.\n * @return {?}\n */\nexport function setSelectionRange(e: HTMLInputElement, start: number, end = start) {\n    e = asType(e, HTMLInputElement);\n    if (contains(document.body, e) && !e.disabled && e.style.display != 'none') {\n        try {\n            e.setSelectionRange(asNumber(start), asNumber(end));\n            e.focus(); // needed in Chrome (TFS 124102)\n        } catch ( /** @type {?} */x) { }\n    }\n}\n/**\n * Gets the bounding rectangle of an element in page coordinates.\n * \n * This is similar to the <b>getBoundingClientRect</b> function,\n * except that uses window coordinates, which change when the\n * document scrolls.\n * @param {?} e\n * @return {?}\n */\nexport function getElementRect(e: Element): Rectangle {\n    const /** @type {?} */ rc = e.getBoundingClientRect();\n    return new Rectangle(rc.left + window.pageXOffset, rc.top + window.pageYOffset, rc.width, rc.height);\n}\n/**\n * Calculates an aggregate value from the values in an array.\n * \n * @param {?} aggType Type of aggregate to calculate.\n * @param {?} items Array with the items to aggregate.\n * @param {?=} binding Name of the property to aggregate on (in case the items are not simple values).\n * @return {?}\n */\nexport function getAggregate(aggType: Aggregate, items: any[], binding?: string) {\n    let /** @type {?} */ cnt   = 0, /** @type {?} */\n        cntn  = 0, /** @type {?} */\n        sum   = 0, /** @type {?} */\n        sum2  = 0, /** @type {?} */\n        min   = null, /** @type {?} */\n        max = null;\n    const /** @type {?} */ bnd = binding ? new Binding(binding) : null;\n\n    // calculate aggregate\n    for (let /** @type {?} */ i = 0; i < items.length; i++) {\n\n        // get item/value\n        let /** @type {?} */ val = items[i];\n        if (bnd) {\n            val = bnd.getValue(val);\n            //assert(!isUndefined(val), 'item does not define property \"' + binding + '\".');\n        }\n\n        // aggregate\n        if (val != null) {\n            cnt++;\n            if (min == null || val < min) {\n                min = val;\n            }\n            if (max == null || val > max) {\n                max = val;\n            }\n            if (isNumber(val) && !isNaN(val)) {\n                cntn++;\n                sum += val;\n                sum2 += val * val;\n            } else if (isBoolean(val)) {\n                cntn++;\n                if (val == true) {\n                    sum++;\n                    sum2++;\n                }\n            }\n        }\n    }\n\n    // return result\n    const /** @type {?} */ avg = cntn == 0 ? 0 : sum / cntn;\n    switch (aggType)\n    {\n        case Aggregate.Avg:\n            return avg;\n        case Aggregate.Cnt:\n            return cnt;\n        case Aggregate.Max:\n            return max;\n        case Aggregate.Min:\n            return min;\n        case Aggregate.Rng:\n            return max - min;\n        case Aggregate.Sum:\n            return sum;\n        case Aggregate.VarPop:\n            return cntn <= 1 ? 0 : sum2 / cntn - avg * avg;\n        case Aggregate.StdPop:\n            return cntn <= 1 ? 0 : Math.sqrt(sum2 / cntn - avg * avg);\n        case Aggregate.Var:\n            return cntn <= 1 ? 0 : (sum2 / cntn - avg * avg) * cntn / (cntn - 1);\n        case Aggregate.Std:\n            return cntn <= 1 ? 0 : Math.sqrt((sum2 / cntn - avg * avg) * cntn / (cntn - 1));\n    }\n\n    // should never get here...\n    throw 'Invalid aggregate type.';\n}\n","import {assert} from './assert';\nimport {isString} from '../lang/is-string';\n/**\n * Asserts that a value is a string.\n * \n * @param {?} value Value supposed to be a string.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The string passed in.\n */\nexport function asString(value: string, nullOK = true): string {\n    assert((nullOK && value == null) || isString(value), 'String expected.');\n    return value;\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isString(value: any): boolean {\n    return typeof (value) == 'string';\n}\n","import {assert} from './assert';\nimport {isInt} from '../lang/is-int';\n/**\n * Asserts that a value is an integer.\n * \n * @param {?} value Value supposed to be an integer.\n * @param {?=} nullOK Whether null values are acceptable.\n * @param {?=} positive Whether to accept only positive integers.\n * @return {?} The number passed in.\n */\nexport function asInt(value: number, nullOK = false, positive = false): number {\n    assert((nullOK && value == null) || isInt(value), 'Integer expected.');\n    if (positive && value && value < 0) throw 'Positive integer expected.';\n    return value;\n}\n","import {isNumber} from './is-number';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isInt(value: any): boolean {\n    return isNumber(value) && value == Math.round(value);\n}\n","import {assert} from './assert';\nimport {isNumber} from '../lang/is-number';\n/**\n * Asserts that a value is a valid setting for an enumeration.\n * \n * @param {?} value Value supposed to be a member of the enumeration.\n * @param {?} enumType Enumeration to test for.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The value passed in.\n */\nexport function asEnum(value: number, enumType: any, nullOK = false): number {\n    if (value == null && nullOK) return null;\n    const /** @type {?} */ e = enumType[value];\n    assert(e != null, 'Invalid enum value.');\n    return isNumber(e) ? e : value;\n}\n","import {assert} from './assert';\nimport {isDate} from '../lang/is-date';\n/**\n * Asserts that a value is a Date.\n * \n * @param {?} value Value supposed to be a Date.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The Date passed in.\n */\nexport function asDate(value: Date, nullOK = false): Date {\n    assert((nullOK && value == null) || isDate(value), 'Date expected.');\n    return value;\n}\n","import {isArray} from '../lang/is-array';\nimport {ICollectionView} from '../../../../collections/interface/ICollectionView';\nimport {tryCast} from '../../common/global';\nimport {assert} from './assert';\nimport {CollectionView} from '../../../../collections/CollectionView';\n/**\n * Asserts that a value is an \\@see:ICollectionView or an Array.\n * \n * @param {?} value Array or \\@see:ICollectionView.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The \\@see:ICollectionView that was passed in or a \\@see:CollectionView\n * created from the array that was passed in.\n */\nexport function asCollectionView(value: any, nullOK = true): ICollectionView {\n    if (value == null && nullOK) {\n        return null;\n    }\n    const /** @type {?} */ cv = tryCast(value, 'ICollectionView');\n    if (cv != null) {\n        return cv;\n    }\n    if (!isArray(value)) {\n        assert(false, 'Array or ICollectionView expected.');\n    }\n    return new CollectionView(value);\n}\n\n","import {DateTime} from '../core/index';\nimport {Event} from '../event/Event';\nimport {EventArgs} from '../eventArgs/EventArgs';\nimport {CancelEventArgs} from '../eventArgs/CancelEventArgs';\nimport {assert, asFunction, asBoolean, clamp, isPrimitive, tryCast, asArray, asInt} from '../core/index';\nimport {ObservableArray} from './ObservableArray';\nimport {IEditableCollectionView} from '../collections/interface/IEditableCollectionView';\nimport {IPagedCollectionView} from '../collections/interface/IPagedCollectionView';\nimport {INotifyCollectionChanged} from '../collections/interface/INotifyCollectionChanged';\nimport {IPredicate} from '../collections/interface/IPredicate';\nimport {ICollectionView} from '../collections/interface/ICollectionView';\nimport {GroupDescription} from './GroupDescription';\nimport {NotifyCollectionChangedEventArgs} from './eventArgs/NotifyCollectionChangedEventArgs';\nimport {PageChangingEventArgs} from './eventArgs/PageChangingEventArgs';\nimport {SortDescription} from './SortDescription';\nimport {NotifyCollectionChangedAction} from '../enum/collections/NotifyCollectionChangedAction';\nimport {CollectionViewGroup} from './CollectionViewGroup';\nimport {EventEmitter} from '@angular/core';\nimport {$$observable} from 'rxjs/symbol/observable';\nimport {Observable, Subscriber} from 'rxjs/Rx';\n/**\n * Class that implements the \\@see:ICollectionView interface to expose data in\n * regular JavaScript arrays.\n * \n * The \\@see:CollectionView class implements the following interfaces:\n * <ul>\n *   <li>\\@see:ICollectionView: provides current record management,\n *       custom sorting, filtering, and grouping.</li>\n *   <li>\\@see:IEditableCollectionView: provides methods for editing,\n *       adding, and removing items.</li>\n *   <li>\\@see:IPagedCollectionView: provides paging.</li>\n * </ul>\n * \n * To use the \\@see:CollectionView class, start by declaring it and passing a\n * regular array as a data source. Then configure the view using the\n * \\@see:filter, \\@see:sortDescriptions, \\@see:groupDescriptions, and\n * \\@see:pageSize properties. Finally, access the view using the \\@see:items\n * property. For example:\n * \n * <pre>\n *   // create a new CollectionView\n *   var cv = new wijmo.collections.CollectionView(myArray);\n *   // sort items by amount in descending order\n *   var sd = new wijmo.collections.SortDescription('amount', false);\n *   cv.sortDescriptions.push(sd);\n *   // show only items with amounts greater than 100\n *   cv.filter = function(item) { return item.amount > 100 };\n *   // show the sorted, filtered result on the console\n *   for (var i = 0; i &lt; cv.items.length; i++) {\n *     var item = cv.items[i];\n *     console.log(i + ': ' + item.name + ' ' + item.amount);\n *   }\n * </pre>\n * @deprecated\n */\nexport class CollectionView /*extends Observable*/ implements IEditableCollectionView, IPagedCollectionView {\n    _src: any[];\n    _ncc: INotifyCollectionChanged;\n    _view: any[];\n    _pgView: any[];\n    _groups: CollectionViewGroup[];\n    _fullGroups: CollectionViewGroup[];\n    _digest: string;\n    _idx           = -1;\n    _filter: IPredicate;\n    _srtDsc        = new ObservableArray();\n    _grpDesc       = new ObservableArray();\n    _newItem       = null;\n    _edtItem       = null;\n    _edtClone: any;\n    _pgSz          = 0;\n    _pgIdx         = 0;\n    _updating      = 0;\n    _itemCreator: Function;\n    _canFilter     = true;\n    _canGroup      = true;\n    _canSort       = true;\n    _canAddNew     = true;\n    _canCancelEdit = true;\n    _canRemove     = true;\n    _canChangePage = true;\n    _trackChanges  = false;\n    _chgAdded      = new ObservableArray();\n    _chgRemoved    = new ObservableArray();\n    _chgEdited     = new ObservableArray();\n    _srtCvt: Function;\n/**\n * Initializes a new instance of a \\@see:CollectionView.\n * \n * \\@see:CollectionView.\n * @param {?=} sourceCollection Array that serves as a source for this\n */\nconstructor(sourceCollection?: any) {\n\n        // check that sortDescriptions contains SortDescriptions\n        this._srtDsc.collectionChanged.subscribe(() => {\n            const arr = this._srtDsc;\n            for (let i = 0; i < arr.length; i++) {\n                assert(arr[i] instanceof SortDescription, 'sortDescriptions array must contain SortDescription objects.');\n            }\n            if (this.canSort) {\n                this.refresh();\n            }\n        });\n\n        // check that groupDescriptions contains GroupDescriptions\n        this._grpDesc.collectionChanged.subscribe(() => {\n            const arr = this._grpDesc;\n            for (let i = 0; i < arr.length; i++) {\n                assert(arr[i] instanceof GroupDescription, 'groupDescriptions array must contain GroupDescription objects.');\n            }\n            if (this.canGroup) {\n                this.refresh();\n            }\n        });\n\n        // initialize the source collection\n        this.sourceCollection = sourceCollection ? sourceCollection : new ObservableArray();\n    }\n/**\n * Gets or sets a function that creates new items for the collection.\n * \n * If the creator function is not supplied, the \\@see:CollectionView\n * will try to create an uninitilized item of the appropriate type.\n * \n * If the creator function is supplied, it should be a function that\n * takes no parameters and returns an initialized object of the proper\n * type for the collection.\n * @return {?}\n */\nget newItemCreator(): Function {\n        return this._itemCreator;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset newItemCreator(value: Function) {\n        this._itemCreator = asFunction(value);\n    }\n/**\n * Gets or sets a function used to convert values when sorting.\n * \n * If provided, the function should take as parameters a\n * \\@see:SortDescription, a data item, and a value to convert,\n * and should return the converted value.\n * \n * This property provides a way to customize sorting. For example,\n * the \\@see:FlexGrid control uses it to sort mapped columns by\n * display value instead of by raw value.\n * \n * For example, the code below causes a \\@see:CollectionView to\n * sort the 'country' property, which contains country code integers,\n * using the corresponding country names:\n * \n * <pre>var countries = 'US,Germany,UK,Japan,Italy,Greece'.split(',');\n * collectionView.sortConverter = function (sd, item, value) {\n *   if (sd.property == 'countryMapped') {\n *     value = countries[value]; // convert country id into name\n *   }\n *   return value;\n * }</pre>\n * @return {?}\n */\nget sortConverter(): Function {\n        return this._srtCvt;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset sortConverter(value: Function) {\n        if (value != this._srtCvt) {\n            this._srtCvt = asFunction(value, true);\n        }\n    }\n/**\n * Returns true if the caller queries for a supported interface.\n * \n * @param {?} interfaceName Name of the interface to look for.\n * @return {?}\n */\nimplementsInterface(interfaceName: string): boolean {\n        switch (interfaceName) {\n            case 'ICollectionView':\n            case 'IEditableCollectionView':\n            case 'IPagedCollectionView':\n            case 'INotifyCollectionChanged':\n                return true;\n        }\n        return false;\n    }\n/**\n * Gets or sets a value that determines whether the control should\n * track changes to the data.\n * \n * If \\@see:trackChanges is set to true, the \\@see:CollectionView keeps\n * track of changes to the data and exposes them through the\n * \\@see:itemsAdded, \\@see:itemsRemoved, and \\@see:itemsEdited collections.\n * \n * Tracking changes is useful in situations where you need to to update\n * the server after the user has confirmed that the modifications are\n * valid.\n * \n * After committing or cancelling changes, use the \\@see:clearChanges method\n * to clear the \\@see:itemsAdded, \\@see:itemsRemoved, and \\@see:itemsEdited\n * collections.\n * \n * The \\@see:CollectionView only tracks changes made when the proper\n * \\@see:CollectionView methods are used (\\@see:editItem/\\@see:commitEdit,\n * \\@see:addNew/@see:commitNew, and \\@see:remove).\n * Changes made directly to the data are not tracked.\n * @return {?}\n */\nget trackChanges(): boolean {\n        return this._trackChanges;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackChanges(value: boolean) {\n        this._trackChanges = asBoolean(value);\n    }\n/**\n * Gets an \\@see:ObservableArray containing the records that were added to\n * the collection since \\@see:changeTracking was enabled.\n * @return {?}\n */\nget itemsAdded(): ObservableArray {\n        return this._chgAdded;\n    }\n/**\n * Gets an \\@see:ObservableArray containing the records that were removed from\n * the collection since \\@see:changeTracking was enabled.\n * @return {?}\n */\nget itemsRemoved(): ObservableArray {\n        return this._chgRemoved;\n    }\n/**\n * Gets an \\@see:ObservableArray containing the records that were edited in\n * the collection since \\@see:changeTracking was enabled.\n * @return {?}\n */\nget itemsEdited(): ObservableArray {\n        return this._chgEdited;\n    }\n/**\n * Clears all changes by removing all items in the \\@see:itemsAdded,\n * \\@see:itemsRemoved, and \\@see:itemsEdited collections.\n * \n * Call this method after committing changes to the server or\n * after refreshing the data from the server.\n * @return {?}\n */\nclearChanges() {\n        this._chgAdded.clear();\n        this._chgRemoved.clear();\n        this._chgEdited.clear();\n    }\n/**\n * Occurs when the collection changes.\n */\ncollectionChanged = new EventEmitter();\n/**\n * Raises the \\@see:collectionChanged event.\n * \n * @param {?=} e Contains a description of the change.\n * @return {?}\n */\nonCollectionChanged(e = NotifyCollectionChangedEventArgs.reset) {\n        this.collectionChanged.emit(e);\n    }\n/**\n * @param {?=} action\n * @param {?=} item\n * @param {?=} index\n * @return {?}\n */\nprivate _raiseCollectionChanged(action = NotifyCollectionChangedAction.Reset, item?: any, index?: number) {\n        //console.log('** collection changed: ' + NotifyCollectionChangedAction[action] + ' **');\n        const /** @type {?} */ e = new NotifyCollectionChangedEventArgs(action, item, [],[]);\n        this.onCollectionChanged(e);\n    }\n/**\n * Gets a value that indicates whether this view supports filtering via the\n * \\@see:filter property.\n * @return {?}\n */\nget canFilter(): boolean {\n        return this._canFilter;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canFilter(value: boolean) {\n        this._canFilter = asBoolean(value);\n    }\n/**\n * Gets a value that indicates whether this view supports grouping via the\n * \\@see:groupDescriptions property.\n * @return {?}\n */\nget canGroup(): boolean {\n        return this._canGroup;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canGroup(value: boolean) {\n        this._canGroup = asBoolean(value);\n    }\n/**\n * Gets a value that indicates whether this view supports sorting via the\n * \\@see:sortDescriptions property.\n * @return {?}\n */\nget canSort(): boolean {\n        return this._canSort;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canSort(value: boolean) {\n        this._canSort = asBoolean(value);\n    }\n/**\n * Gets or sets the current item in the view.\n * @return {?}\n */\nget currentItem(): any {\n        return this._pgView && this._idx > -1 && this._idx < this._pgView.length\n            ? this._pgView[this._idx]\n            : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentItem(value: any) {\n        this.moveCurrentTo(value);\n    }\n/**\n * Gets the ordinal position of the current item in the view.\n * @return {?}\n */\nget currentPosition(): number {\n        return this._idx;\n    }\n/**\n * Gets or sets a callback used to determine if an item is suitable for\n * inclusion in the view.\n * \n * The callback function should return true if the item passed in as a\n * parameter should be included in the view.\n * \n * NOTE: If the filter function needs a scope (i.e. a meaningful 'this'\n * value) remember to set the filter using the 'bind' function to  specify\n * the 'this' object. For example:\n * <pre>\n *   collectionView.filter = this._filter.bind(this);\n * </pre>\n * @return {?}\n */\nget filter(): IPredicate {\n        return this._filter;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset filter(value: IPredicate) {\n        if (this._filter != value) {\n            this._filter = /** @type {?} */(( <IPredicate>asFunction(value)));\n            if (this.canFilter) {\n                this.refresh();\n            }\n        }\n    }\n/**\n * Gets a collection of \\@see:GroupDescription objects that describe how the\n * items in the collection are grouped in the view.\n * @return {?}\n */\nget groupDescriptions(): ObservableArray {\n        return this._grpDesc;\n    }\n/**\n * Gets an array of \\@see:CollectionViewGroup objects that represents the\n * top-level groups.\n * @return {?}\n */\nget groups(): CollectionViewGroup[] {\n        this._groups     = this.canGroup ? this._createGroups(this._view) : null;\n        return this._groups;\n    }\n/**\n * Gets a value that indicates whether this view contains no items.\n * @return {?}\n */\nget isEmpty(): boolean {\n        return this._pgView.length == 0;\n    }\n/**\n * Gets a collection of \\@see:SortDescription objects that describe how the items\n * in the collection are sorted in the view.\n * @return {?}\n */\nget sortDescriptions(): ObservableArray {\n        return this._srtDsc;\n    }\n/**\n * Gets or sets the underlying (unfiltered and unsorted) collection.\n * @return {?}\n */\nget sourceCollection(): any {\n        return this._src;\n    }\n/**\n * @param {?} sourceCollection\n * @return {?}\n */\nset sourceCollection(sourceCollection: any) {\n        if (sourceCollection != this._src) {\n\n            // keep track of current index\n            const /** @type {?} */ index = this.currentPosition;\n\n            // commit pending changes\n            this.commitEdit();\n            this.commitNew();\n\n            // disconnect old source\n            //todo ###remove me###\n            //if (this._ncc != null) {\n            //    this._ncc.collectionChanged.removeHandler(this._sourceChanged);\n            //}\n\n            // connect new source\n            this._src = asArray(sourceCollection, false);\n            this._ncc = /** @type {?} */(( <INotifyCollectionChanged>tryCast(this._src, 'INotifyCollectionChanged')));\n            if (this._ncc) {\n                this._ncc.collectionChanged.subscribe(this._sourceChanged.bind(this));\n            }\n\n            // clear any changes\n            this.clearChanges();\n\n            // refresh view\n            this.refresh();\n\t\t\tconsole.log(\"collection_view_move_current_first\");\n            this.moveCurrentToFirst();\n\n            // if we have no items, notify listeners that the current index changed\n            if (this.currentPosition < 0 && index > -1) {\n                this.onCurrentChanged();\n            }\n        }\n    }\n/**\n * @param {?} s\n * @param {?} e\n * @return {?}\n */\nprivate _sourceChanged(s: INotifyCollectionChanged, e: NotifyCollectionChangedEventArgs) {\n        if (this._updating <= 0) {\n            this.refresh(); // TODO: optimize\n        }\n    }\n/**\n * Returns a value indicating whether a given item belongs to this view.\n * \n * @param {?} item Item to seek.\n * @return {?}\n */\ncontains(item: any): boolean {\n        return this._pgView.indexOf(item) > -1;\n    }\n/**\n * Sets the specified item to be the current item in the view.\n * \n * @param {?} item Item that will become current.\n * @return {?}\n */\nmoveCurrentTo(item: any): boolean {\n        return this.moveCurrentToPosition(this._pgView.indexOf(item));\n    }\n/**\n * Sets the first item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToFirst(): boolean {\n        return this.moveCurrentToPosition(0);\n    }\n/**\n * Sets the last item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToLast(): boolean {\n        return this.moveCurrentToPosition(this._pgView.length - 1);\n    }\n/**\n * Sets the item after the current item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToNext(): boolean {\n        return this.moveCurrentToPosition(this._idx + 1);\n    }\n/**\n * Sets the item at the specified index in the view as the current item.\n * \n * @param {?} index Index of the item that will become current.\n * @return {?}\n */\nmoveCurrentToPosition(index: number): boolean {\n        if (index >= -1 && index < this._pgView.length) {\n            const /** @type {?} */ e = new CancelEventArgs();\n            if (this._idx != index && this.onCurrentChanging(e)) {\n\n                // when moving away from current edit/new item, commit\n                if (this._edtItem && this._pgView[index] != this._edtItem) {\n                    this.commitEdit();\n                }\n                if (this._newItem && this._pgView[index] != this._newItem) {\n                    this.commitNew();\n                }\n\n                // update currency\n                this._idx = index;\n                this.onCurrentChanged();\n            }\n        }\n        return this._idx == index;\n    }\n/**\n * Sets the item before the current item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToPrevious(): boolean {\n        return this.moveCurrentToPosition(this._idx - 1);\n    }\n/**\n * Re-creates the view using the current sort, filter, and group parameters.\n * @return {?}\n */\nrefresh() {\n\n        // not while updating, adding, or editing\n        if (this._updating > 0 || this._newItem || this._edtItem) {\n            return;\n        }\n\n        // perform the refresh\n        this._performRefresh();\n\n        // notify listeners\n        this.onCollectionChanged();\n    }\n/**\n * @return {?}\n */\n_performRefresh() {\n\n        // benchmark\n        //var start = new Date();\n\n        // save current item\n        const /** @type {?} */ current = this.currentItem;\n\n        // create filtered view\n        if (!this._src) {\n            this._view = [];\n        } else if (!this._filter || !this.canFilter) {\n            this._view = (this._srtDsc.length > 0 && this.canSort)\n                ? this._src.slice(0) // clone source array\n                : this._src; // don't waste time cloning\n        } else {\n            this._view = this._performFilter(this._src);\n        }\n\n        // apply sort\n        if (this._srtDsc.length > 0 && this.canSort) {\n            this._performSort(this._view);\n        }\n\n        // apply grouping\n        this._groups     = this.canGroup ? this._createGroups(this._view) : null;\n        this._fullGroups = this._groups;\n        if (this._groups) {\n            this._view = this._mergeGroupItems(this._groups);\n        }\n\n        // apply paging to view\n        this._pgIdx  = clamp(this._pgIdx, 0, this.pageCount - 1);\n        this._pgView = this._getPageView();\n\n        // update groups to take paging into account\n        if (this._groups && this.pageCount > 1) {\n            this._groups = this._createGroups(this._pgView);\n            this._mergeGroupItems(this._groups);\n        }\n\n        // restore current item\n        let /** @type {?} */ index = this._pgView.indexOf(current);\n        if (index < 0) {\n            index = Math.min(this._idx, this._pgView.length - 1);\n        }\n        this._idx = index;\n\n        // save group digest to optimize updates (TFS 109119)\n        this._digest = this._getGroupsDigest(this.groups);\n        // raise currentChanged if needed\n        if (this.currentItem !== current) {\n            this.onCurrentChanged();\n        }\n\n        //var now = new Date();\n        //console.log('refreshed in ' + (now.getTime() - start.getTime()) / 1000 + ' seconds');\n    }\n/**\n * @param {?} items\n * @return {?}\n */\n_performSort(items: any[]) {\n        this._view.sort(this._compareItems());\n    }\n/**\n * @return {?}\n */\n_compareItems() {\n        const /** @type {?} */ srtDsc = this._srtDsc, /** @type {?} */\n              srtCvt = this._srtCvt;\n          var /** @type {?} */    init   = true;\n        return function (a, b) {\n            for (let /** @type {?} */ i = 0; i < srtDsc.length; i++) {\n\n                // get values\n                const /** @type {?} */ sd = /** @type {?} */(( <SortDescription>srtDsc[i]));\n                let /** @type {?} */ v1 = sd._bnd.getValue(a), /** @type {?} */\n                      v2 = sd._bnd.getValue(b);\n\n                // check for NaN (isNaN returns true for NaN but also for non-numbers)\n                if (v1 !== v1) v1 = null;\n                if (v2 !== v2) v2 = null;\n\n                // ignore case when sorting unless the values are strings that only differ in case\n                // (to keep the sort consistent, TFS 131135)\n                if (typeof (v1) === 'string' && typeof (v2) === 'string') {\n                    const /** @type {?} */ lc1 = v1.toLowerCase(), /** @type {?} */\n                          lc2 = v2.toLowerCase();\n                    if (lc1 != lc2) {\n                        v1 = lc1;\n                        v2 = lc2;\n                    }\n                }\n\n                // convert values\n                if (srtCvt) {\n                    v1   = srtCvt(sd, a, v1, init);\n                    v2   = srtCvt(sd, b, v2, false);\n                    init = false;\n                }\n\n                // nulls always at the bottom (like excel)\n                if (v1 != null && v2 == null) return -1;\n                if (v1 == null && v2 != null) return +1;\n\n                // compare the values (at last!)\n                let /** @type {?} */ cmp = (v1 < v2) ? -1 : (v1 > v2) ? +1 : 0;\n                if (cmp != 0) {\n                    return sd.ascending ? +cmp : -cmp;\n                }\n            }\n            return 0;\n        }\n    }\n/**\n * @param {?} items\n * @return {?}\n */\n_performFilter(items: any[]): any[] {\n        return this.canFilter && this._filter\n            ? items.filter(this._filter, this)\n            : items;\n    }\n/**\n * Occurs after the current item changes.\n */\ncurrentChanged = new EventEmitter();\n/**\n * Raises the \\@see:currentChanged event.\n * @param {?=} e\n * @return {?}\n */\nonCurrentChanged(e = EventArgs.empty) {\n        this.currentChanged.emit(e);\n    }\n/**\n * Occurs before the current item changes.\n */\ncurrentChanging = new EventEmitter();\n/**\n * Raises the \\@see:currentChanging event.\n * \n * @param {?} e \\@see:CancelEventArgs that contains the event data.\n * @return {?}\n */\nonCurrentChanging(e: CancelEventArgs): boolean {\n        this.currentChanging.emit(e);\n        return !e.cancel;\n    }\n/**\n * Gets items in the view.\n * @return {?}\n */\nget items(): any[] {\n        return this._pgView;\n    }\n/**\n * Suspend refreshes until the next call to \\@see:endUpdate.\n * @return {?}\n */\nbeginUpdate() {\n        this._updating++;\n    }\n/**\n * Resume refreshes suspended by a call to \\@see:beginUpdate.\n * @return {?}\n */\nendUpdate() {\n        this._updating--;\n        if (this._updating <= 0) {\n            this.refresh();\n        }\n    }\n/**\n * Gets a value that indicates whether notifications are currently suspended\n * (see \\@see:beginUpdate and \\@see:endUpdate).\n * @return {?}\n */\nget isUpdating() {\n        return this._updating > 0;\n    }\n/**\n * Executes a function within a \\@see:beginUpdate/\\@see:endUpdate block.\n * \n * The collection will not be refreshed until the function finishes.\n * This method ensures \\@see:endUpdate is called even if the function throws.\n * \n * @param {?} fn Function to be executed without updates.\n * @return {?}\n */\ndeferUpdate(fn: Function) {\n        try {\n            this.beginUpdate();\n            fn();\n        } finally {\n            this.endUpdate();\n        }\n    }\n/**\n * Gets a value that indicates whether a new item can be added to the collection.\n * @return {?}\n */\nget canAddNew(): boolean {\n        return this._canAddNew;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canAddNew(value: boolean) {\n        this._canAddNew = asBoolean(value);\n    }\n/**\n * Gets a value that indicates whether the collection view can discard pending changes\n * and restore the original values of an edited object.\n * @return {?}\n */\nget canCancelEdit(): boolean {\n        return this._canCancelEdit;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canCancelEdit(value: boolean) {\n        this._canCancelEdit = asBoolean(value);\n    }\n/**\n * Gets a value that indicates whether items can be removed from the collection.\n * @return {?}\n */\nget canRemove(): boolean {\n        return this._canRemove;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canRemove(value: boolean) {\n        this._canRemove = asBoolean(value);\n    }\n/**\n * Gets the item that is being added during the current add transaction.\n * @return {?}\n */\nget currentAddItem(): any {\n        return this._newItem;\n    }\n/**\n * Gets the item that is being edited during the current edit transaction.\n * @return {?}\n */\nget currentEditItem(): any {\n        return this._edtItem;\n    }\n/**\n * Gets a value that indicates whether an add transaction is in progress.\n * @return {?}\n */\nget isAddingNew(): boolean {\n        return this._newItem != null;\n    }\n/**\n * Gets a value that indicates whether an edit transaction is in progress.\n * @return {?}\n */\nget isEditingItem(): boolean {\n        return this._edtItem != null;\n    }\n/**\n * Creates a new item and adds it to the collection.\n * \n * This method takes no parameters. It creates a new item, adds it to the\n * collection, and prevents refresh operations until the new item is\n * committed using the \\@see:commitNew method or canceled using the\n * \\@see:cancelNew method.\n * \n * The code below shows how the \\@see:addNew method is typically used:\n * \n * <pre>\n * // create the new item, add it to the collection\n * var newItem = view.addNew();\n * // initialize the new item\n * newItem.id = getFreshId();\n * newItem.name = 'New Customer';\n * // commit the new item so the view can be refreshed\n * view.commitNew();\n * </pre>\n * \n * You can also add new items by pushing them into the \\@see:sourceCollection\n * and then calling the \\@see:refresh method. The main advantage of \\@see:addNew\n * is in user-interactive scenarios (like adding new items in a data grid),\n * because it gives users the ability to cancel the add operation. It also\n * prevents the new item from being sorted or filtered out of view until the\n * add operation is committed.\n * \n * @return {?} The item that was added to the collection.\n */\naddNew(): any {\n\n        // sanity\n        if (arguments.length > 0) {\n            assert(false, 'addNew does not take any parameters, it creates the new items.');\n        }\n\n        // commit pending changes\n        this.commitEdit();\n        this.commitNew();\n\n        // honor canAddNew\n        if (!this.canAddNew) {\n            assert(false, 'cannot add items (canAddNew == false).');\n            return null;\n        }\n\n        // create new item\n        let /** @type {?} */ item = null;\n        if (this.newItemCreator) {\n            item = this.newItemCreator();\n        } else if (this.sourceCollection && this.sourceCollection.length) {\n            item = this.sourceCollection[0].constructor();\n        } else {\n            item = {};\n        }\n\n        if (item != null) {\n\n            // remember the new item\n            this._newItem = item;\n\n            // add the new item to the collection\n            this._updating++;\n            this._src.push(item); // **\n            this._updating--;\n\n            // add the new item to the bottom of the current view\n            if (this._pgView != this._src) {\n                this._pgView.push(item);\n            }\n\n            // add the new item to the last group and to the data items\n            if (this.groups && this.groups.length) {\n                let /** @type {?} */ g = this.groups[this.groups.length - 1];\n                g.items.push(item);\n                while (g.groups && g.groups.length) {\n                    g = g.groups[g.groups.length - 1];\n                    g.items.push(item);\n                }\n            }\n\n            // notify listeners\n            this._raiseCollectionChanged(NotifyCollectionChangedAction.Add, item, this._pgView.length - 1);\n\n            // select the new item\n            this.moveCurrentTo(item);\n        }\n\n        // done\n        return this._newItem;\n    }\n/**\n * Ends the current edit transaction and, if possible,\n * restores the original value to the item.\n * @return {?}\n */\ncancelEdit() {\n        const /** @type {?} */ item = this._edtItem;\n        if (item != null) {\n            this._edtItem = null;\n\n            // honor canCancelEdit\n            if (!this.canCancelEdit) {\n                assert(false, 'cannot cancel edits (canCancelEdit == false).');\n                return;\n            }\n\n            // check that we can do this (TFS 110168)\n            const /** @type {?} */ index = this._src.indexOf(item);\n            if (index < 0 || !this._edtClone) {\n                return;\n            }\n\n            // restore original item value\n            this._extend(this._src[index], this._edtClone);\n            this._edtClone = null;\n\n            // notify listeners\n            this._raiseCollectionChanged(NotifyCollectionChangedAction.Change, item, index);\n        }\n    }\n/**\n * Ends the current add transaction and discards the pending new item.\n * @return {?}\n */\ncancelNew() {\n        const /** @type {?} */ item = this._newItem;\n        if (item != null) {\n            this.remove(item);\n        }\n    }\n/**\n * Ends the current edit transaction and saves the pending changes.\n * @return {?}\n */\ncommitEdit() {\n\t\tconsole.log(\"collection_view_commit_edit_start\");\n        const /** @type {?} */ item = this._edtItem;\n        if (item != null) {\n\n            // check if anything really changed\n            let /** @type {?} */ sameContent = this._sameContent(item, this._edtClone);\n\n            // clean up state\n            this._edtItem  = null;\n            this._edtClone = null;\n\n            // refresh to update the edited item\n            const /** @type {?} */ index = this._pgView.indexOf(item);\n            const /** @type {?} */ digest = this._digest;\n            this._performRefresh();\n\n            // track changes (before notifying)\n            if (this._trackChanges == true && !sameContent) {\n                this._trackItemChanged(item);\n            }\n\n            // notify (single item change or full refresh)\n            if (this._pgView.indexOf(item) == index && digest == this._digest) {\n                this._raiseCollectionChanged(NotifyCollectionChangedAction.Change, item, index);\n            } else {\n                this._raiseCollectionChanged(); // full refresh\n            }\n        }\n\t\tconsole.log(\"collection_view_commit_edit_finish\");\n    }\n/**\n * Track changes applied to an item (not necessarily the current edit item).\n * \n * @param {?} item Item that has been changed.\n * @return {?}\n */\n_trackItemChanged(item: any) {\n        if (this._trackChanges) {\n            let /** @type {?} */ idx = this._chgEdited.indexOf(item);\n            if (idx < 0 && this._chgAdded.indexOf(item) < 0) { // add item to changed list\n                this._chgEdited.push(item);\n            } else if (idx > -1) { // item already on changed list, notify of change\n                var /** @type {?} */ e = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Change, item, [],[]);\n                this._chgEdited.onCollectionChanged(e);\n            } else { // item on added list, notify of change\n                idx = this._chgAdded.indexOf(item);\n                if (idx > -1) {\n                    var /** @type {?} */ e = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Change, item, [],[]);\n                    this._chgAdded.onCollectionChanged(e);\n                }\n            }\n        }\n    }\n/**\n * Ends the current add transaction and saves the pending new item.\n * @return {?}\n */\ncommitNew() {\n        const /** @type {?} */ item = this._newItem;\n        if (item != null) {\n\n            // clean up state\n            this._newItem = null;\n\n            // refresh to update the new item\n            const /** @type {?} */ index = this._pgView.indexOf(item);\n            const /** @type {?} */ digest = this._digest;\n            this._performRefresh();\n\n            // track changes (before notifying)\n            if (this._trackChanges == true) {\n                const /** @type {?} */ idx = this._chgEdited.indexOf(item);\n                if (idx > -1) { // remove from changed if it's there\n                    this._chgEdited.removeAt(idx);\n                }\n                if (this._chgAdded.indexOf(item) < 0) { // add to added if not there\n                    this._chgAdded.push(item);\n                }\n            }\n\n            // notify (full refresh if the item moved)\n            if (this._pgView.indexOf(item) == index && digest == this._digest) {\n                this._raiseCollectionChanged(NotifyCollectionChangedAction.Change, item, index);\n            } else {\n                this._raiseCollectionChanged(); // full refresh\n            }\n        }\n    }\n/**\n * Begins an edit transaction of the specified item.\n * \n * @param {?} item Item to be edited.\n * @return {?}\n */\neditItem(item: any) {\n\n        // commit pending changes if not already editing/adding this item\n        if (item != this._edtItem && this.moveCurrentTo(item)) {\n            this.commitEdit();\n            this._edtItem  = item;\n            this._edtClone = {};\n            this._extend(this._edtClone, this._edtItem);\n        }\n    }\n/**\n * Removes the specified item from the collection.\n * \n * @param {?} item Item to be removed from the collection.\n * @return {?}\n */\nremove(item: any) {\n\t\tconsole.log(\"collection_view_remove_start\");\n\t\tconsole.log(\"collection_view_src:\"+this._src.length);\n\t\tconsole.log(\"collection_view_pgView:\"+this._pgView.length);\n\t\tconsole.log(\"collection_view_view:\"+this._view.length);\n        // handle cases where the user is adding or editing items\n        let /** @type {?} */ pendingNew = (item == this._newItem);\n        if (pendingNew) {\n            this._newItem = null;\n        }\n        if (item == this._edtItem) {\n            this.cancelEdit();\n        }\n\n        // honor canRemove\n        if (!this.canRemove) {\n            assert(false, 'cannot remove items (canRemove == false).');\n            return;\n        }\n\n        // find item\n        const /** @type {?} */ index = this._src.indexOf(item);\n        if (index > -1) {\n\n            // get current item to notify later\n            const /** @type {?} */ current = this.currentItem;\n\n            // remove item from source collection\n            this._updating++;\n            this._src.splice(index, 1); // **\n            this._updating--;\n\n            // refresh to update the edited item\n            //var index = this._pgView.indexOf(item);\n            const /** @type {?} */ digest = this._digest;\n            this._performRefresh();\n\n            // track changes (before notifying)\n            if (this._trackChanges == true) {\n\n                // removing something that was added\n                const /** @type {?} */ idxAdded = this._chgAdded.indexOf(item);\n                if (idxAdded > -1) {\n                    this._chgAdded.removeAt(idxAdded);\n                }\n\n                // removing something that was edited\n                const /** @type {?} */ idxEdited = this._chgEdited.indexOf(item);\n                if (idxEdited > -1) {\n                    this._chgEdited.removeAt(idxEdited);\n                }\n\n                // add to removed list unless it was pending and not added in this session\n                const /** @type {?} */ idxRemoved = this._chgRemoved.indexOf(item);\n                if (idxRemoved < 0 && !pendingNew && idxAdded < 0) {\n                    this._chgRemoved.push(item);\n                }\n            }\n\n            // notify (item removed or full refresh) (TFS 85001)\n            const /** @type {?} */ paged = this.pageSize > 0 && this._pgIdx > -1;\n            if (paged || digest != this._getGroupsDigest(this.groups)) {\n\t\t\t\tconsole.log(\"collection_view_before_raiseCollectionChanged_1\");\n                this._raiseCollectionChanged();\n            } else {\n\t\t\t\tconsole.log(\"collection_view_before_raiseCollectionChanged_2\");\n                this._raiseCollectionChanged(NotifyCollectionChangedAction.Remove, item, index);\n            }\n\n            // raise currentChanged if needed\n            if (this.currentItem !== current) {\n\t\t\t\tconsole.log(\"collection_view_before_on_current_changed_3\");\n                this.onCurrentChanged();\n            }\n        }\n\t\tconsole.log(\"collection_view_pgView:\"+this._pgView.length);\n\t\tconsole.log(\"collection_view_view:\"+this._view.length);\n\t\tconsole.log(\"collection_view_src:\"+this._src.length);\n\t\tconsole.log(\"collection_view_remove_finish\");\n    }\n/**\n * Removes the item at the specified index from the collection.\n * \n * @param {?} index Index of the item to be removed from the collection.\n * The index is relative to the view, not to the source collection.\n * @return {?}\n */\nremoveAt(index: number) {\t\t\n        index = asInt(index);        \n\t\tthis.remove(this._pgView[index]);\t\t\n    }\n/**\n * @param {?} dst\n * @param {?} src\n * @return {?}\n */\n_extend(dst: any, src: any) {\n        for (let /** @type {?} */ key in src) {\n            dst[key] = src[key];\n        }\n    }\n/**\n * @param {?} dst\n * @param {?} src\n * @return {?}\n */\n_sameContent(dst: any, src: any) {\n        for (var /** @type {?} */ key in src) {\n            if (!this._sameValue(dst[key], src[key])) {\n                return false;\n            }\n        }\n        for (var /** @type {?} */ key in dst) {\n            if (!this._sameValue(dst[key], src[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n/**\n * @param {?} v1\n * @param {?} v2\n * @return {?}\n */\n_sameValue(v1: any, v2: any) {\n        return v1 == v2 || DateTime.equals(v1, v2);\n    }\n/**\n * Gets a value that indicates whether the \\@see:pageIndex value can change.\n * @return {?}\n */\nget canChangePage(): boolean {\n        return this._canChangePage;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canChangePage(value: boolean) {\n        this._canChangePage = asBoolean(value);\n    }\n/**\n * Gets a value that indicates whether the page index is changing.\n * @return {?}\n */\nget isPageChanging(): boolean {\n        return false;\n    }\n/**\n * Gets the total number of items in the view taking paging into account.\n * @return {?}\n */\nget itemCount(): number {\n        return this._pgView.length;\n    }\n/**\n * Gets the zero-based index of the current page.\n * @return {?}\n */\nget pageIndex(): number {\n        return this._pgIdx;\n    }\n/**\n * Gets or sets the number of items to display on a page.\n * @return {?}\n */\nget pageSize(): number {\n        return this._pgSz;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset pageSize(value: number) {\n        if (value != this._pgSz) {\n            this._pgSz = asInt(value);\n            this.refresh();\n        }\n    }\n/**\n * Gets the total number of items in the view before paging is applied.\n * @return {?}\n */\nget totalItemCount(): number {\n        return this._view.length;\n    }\n/**\n * Gets the total number of pages.\n * @return {?}\n */\nget pageCount(): number {\n        return this.pageSize ? Math.ceil(this.totalItemCount / this.pageSize) : 1;\n    }\n/**\n * Sets the first page as the current page.\n * \n * @return {?} True if the page index was changed successfully.\n */\nmoveToFirstPage(): boolean {\n        return this.moveToPage(0);\n    }\n/**\n * Sets the last page as the current page.\n * \n * @return {?} True if the page index was changed successfully.\n */\nmoveToLastPage(): boolean {\n        return this.moveToPage(this.pageCount - 1);\n    }\n/**\n * Moves to the page after the current page.\n * \n * @return {?} True if the page index was changed successfully.\n */\nmoveToNextPage(): boolean {\n        return this.moveToPage(this.pageIndex + 1);\n    }\n/**\n * Moves to the page at the specified index.\n * \n * @param {?} index Index of the page to move to.\n * @return {?} True if the page index was changed successfully.\n */\nmoveToPage(index: number): boolean {\n        const /** @type {?} */ newIndex = clamp(index, 0, this.pageCount - 1);\n        if (newIndex != this._pgIdx) {\n\n            // honor canChangePage\n            if (!this.canChangePage) {\n                assert(false, 'cannot change pages (canChangePage == false).');\n            }\n\n            // raise pageChanging\n            const /** @type {?} */ e = new PageChangingEventArgs(newIndex);\n            if (this.onPageChanging(e)) {\n\n                // change the page\n                this._pgIdx  = newIndex;\n                this._pgView = this._getPageView();\n                this._idx    = 0;\n\n                // raise pageChanged and collectionChanged, or refresh if grouping\n                if (!this.groupDescriptions || this.groupDescriptions.length == 0) {\n                    this.onPageChanged();\n                    this.onCollectionChanged();\n                } else {\n                    this.refresh();\n                }\n            }\n        }\n        return this._pgIdx == index;\n    }\n/**\n * Moves to the page before the current page.\n * \n * @return {?} True if the page index was changed successfully.\n */\nmoveToPreviousPage(): boolean {\n        return this.moveToPage(this.pageIndex - 1);\n    }\n/**\n * Occurs after the page index changes.\n */\npageChanged = new Event();\n/**\n * Raises the \\@see:pageChanged event.\n * @param {?=} e\n * @return {?}\n */\nonPageChanged(e = EventArgs.empty) {\n        this.pageChanged.raise(this, e);\n    }\n/**\n * Occurs before the page index changes.\n */\npageChanging = new Event();\n/**\n * Raises the \\@see:pageChanging event.\n * \n * @param {?} e \\@see:PageChangingEventArgs that contains the event data.\n * @return {?}\n */\nonPageChanging(e: PageChangingEventArgs): boolean {\n        this.pageChanging.raise(this, e);\n        return !e.cancel;\n    }\n/**\n * @param {?} g\n * @return {?}\n */\n_getFullGroup(g: CollectionViewGroup): CollectionViewGroup {\n\n        // look for the group by level and name\n        // this gets the full (unpaged) and updated group (TFS 109119)\n        const /** @type {?} */ fg = this._getGroupByPath(this._fullGroups, g.level, g._path);\n        if (fg != null) {\n            g = fg;\n        }\n\n        // return the group\n        return g;\n    }\n/**\n * @param {?} groups\n * @param {?} level\n * @param {?} path\n * @return {?}\n */\n_getGroupByPath(groups: CollectionViewGroup[], level: number, path: string) {\n        for (let /** @type {?} */ i = 0; i < groups.length; i++) {\n            let /** @type {?} */ g = groups[i];\n            if (g.level == level && g._path == path) {\n                return g;\n            }\n            if (g.level < level && g._path.indexOf(path) == 0) {\n                g = this._getGroupByPath(g.items, level, path);\n                if (g != null) {\n                    return g;\n                }\n            }\n        }\n        return null;\n    }\n/**\n * @return {?}\n */\n_getPageView() {\n\n        // not paging? return the whole view\n        if (this.pageSize <= 0 || this._pgIdx < 0) {\n            return this._view;\n        }\n\n        // slice the current page out of the view\n        const /** @type {?} */ start = this._pgSz * this._pgIdx, /** @type {?} */\n              end   = Math.min(start + this._pgSz, this._view.length);\n        return this._view.slice(start, end);\n    }\n/**\n * @param {?} items\n * @return {?}\n */\n_createGroups(items: any[]): CollectionViewGroup[] {\n\n        // not grouping? return null\n        if (!this._grpDesc || !this._grpDesc.length) {\n            return null;\n        }\n\n        // build group tree\n        const /** @type {?} */ root: CollectionViewGroup[] = [], /** @type {?} */\n              maps                        = {};\n        let /** @type {?} */ map                           = null;\n        for (let /** @type {?} */ i = 0; i < items.length; i++) {\n\n            // get the item\n            const /** @type {?} */ item   = items[i];\n            let /** @type {?} */ groups   = root;\n            const /** @type {?} */ levels = this._grpDesc.length;\n\n            // add this item to the tree\n            let /** @type {?} */ path = '';\n            for (let /** @type {?} */ level = 0; level < levels; level++) {\n\n                // get the group name for this level\n                const /** @type {?} */ gd   = this._grpDesc[level], /** @type {?} */\n                      name = gd.groupNameFromItem(item, level), /** @type {?} */\n                      last = level == levels - 1;\n\n                // get the group map for this level (optimization)\n                map = maps[path];\n                if (!map && isPrimitive(name)) {\n                    map        = {};\n                    maps[path] = map;\n                }\n\n                // get or create the group\n                const /** @type {?} */ group = this._getGroup(gd, groups, map, name, level, last);\n\n                // keep group path (all names in the hierarchy)\n                path += '/' + name;\n                group._path = path;\n\n                // add data items to last level groups\n                if (last) {\n                    group.items.push(item);\n                }\n\n                // move on to the next group\n                groups = group.groups;\n            }\n        }\n\n        // done\n        return root;\n    }\n/**\n * @param {?} groups\n * @return {?}\n */\nprivate _getGroupsDigest(groups): string {\n        let /** @type {?} */ digest = '';\n        for (let /** @type {?} */ i = 0; groups != null && i < groups.length; i++) {\n            const /** @type {?} */ g = groups[i];\n            digest += '{' + g.name + ':' + (g.items ? g.items.length : '*');\n            if (g.groups.length > 0) {\n                digest += ',';\n                digest += this._getGroupsDigest(g.groups);\n            }\n            digest += '}';\n        }\n        return digest;\n    }\n/**\n * @param {?} groups\n * @return {?}\n */\nprivate _mergeGroupItems(groups: CollectionViewGroup[]): any[] {\n        const /** @type {?} */ items = [];\n        for (let /** @type {?} */ i = 0; i < groups.length; i++) {\n            const /** @type {?} */ g = groups[i];\n            if (!g._isBottomLevel) {\n                const /** @type {?} */ groupItems = this._mergeGroupItems(g.groups);\n                g._items.push.apply(g._items, groupItems);\n            }\n            items.push.apply(items, g._items);\n        }\n        return items;\n    }\n/**\n * @param {?} gd\n * @param {?} groups\n * @param {?} map\n * @param {?} name\n * @param {?} level\n * @param {?} isBottomLevel\n * @return {?}\n */\nprivate _getGroup(gd: GroupDescription, groups: CollectionViewGroup[], map: any, name: string, level: number, isBottomLevel: boolean): CollectionViewGroup {\n        let /** @type {?} */ g: CollectionViewGroup;\n\n        // find existing group\n        if (map && isPrimitive(name)) {\n            g = map[name];\n            if (g) {\n                return g;\n            }\n        } else {\n            for (let /** @type {?} */ i = 0; i < groups.length; i++) {\n                if (gd.namesMatch(groups[i].name, name)) {\n                    return groups[i];\n                }\n            }\n        }\n\n        // not found, create now\n        const /** @type {?} */ group = new CollectionViewGroup(gd, name, level, isBottomLevel);\n        groups.push(group);\n\n        // add group to map\n        if (map) {\n            map[name] = group;\n        }\n\n        // done\n        return group;\n    }\n/**\n * @return {?}\n */\npublic completeAllStream() {\n        this.currentChanged.complete();\n        this.collectionChanged.complete();\n    }\n/**\n * @return {?}\n */\n[$$observable] () {\n        return this;\n    }\n/**\n * @param {?} subscriber\n * @return {?}\n */\npublic _subscribe(subscriber: Subscriber<any>) {\n        subscriber.next(this.items);\n        subscriber.complete();\n    }\n}\n\nfunction CollectionView_tsickle_Closure_declarations() {\n/** @type {?} */\nCollectionView.prototype._src;\n/** @type {?} */\nCollectionView.prototype._ncc;\n/** @type {?} */\nCollectionView.prototype._view;\n/** @type {?} */\nCollectionView.prototype._pgView;\n/** @type {?} */\nCollectionView.prototype._groups;\n/** @type {?} */\nCollectionView.prototype._fullGroups;\n/** @type {?} */\nCollectionView.prototype._digest;\n/** @type {?} */\nCollectionView.prototype._idx;\n/** @type {?} */\nCollectionView.prototype._filter;\n/** @type {?} */\nCollectionView.prototype._srtDsc;\n/** @type {?} */\nCollectionView.prototype._grpDesc;\n/** @type {?} */\nCollectionView.prototype._newItem;\n/** @type {?} */\nCollectionView.prototype._edtItem;\n/** @type {?} */\nCollectionView.prototype._edtClone;\n/** @type {?} */\nCollectionView.prototype._pgSz;\n/** @type {?} */\nCollectionView.prototype._pgIdx;\n/** @type {?} */\nCollectionView.prototype._updating;\n/** @type {?} */\nCollectionView.prototype._itemCreator;\n/** @type {?} */\nCollectionView.prototype._canFilter;\n/** @type {?} */\nCollectionView.prototype._canGroup;\n/** @type {?} */\nCollectionView.prototype._canSort;\n/** @type {?} */\nCollectionView.prototype._canAddNew;\n/** @type {?} */\nCollectionView.prototype._canCancelEdit;\n/** @type {?} */\nCollectionView.prototype._canRemove;\n/** @type {?} */\nCollectionView.prototype._canChangePage;\n/** @type {?} */\nCollectionView.prototype._trackChanges;\n/** @type {?} */\nCollectionView.prototype._chgAdded;\n/** @type {?} */\nCollectionView.prototype._chgRemoved;\n/** @type {?} */\nCollectionView.prototype._chgEdited;\n/** @type {?} */\nCollectionView.prototype._srtCvt;\n/**\n * Occurs when the collection changes.\n * @type {?}\n */\nCollectionView.prototype.collectionChanged;\n/**\n * Occurs after the current item changes.\n * @type {?}\n */\nCollectionView.prototype.currentChanged;\n/**\n * Occurs before the current item changes.\n * @type {?}\n */\nCollectionView.prototype.currentChanging;\n/**\n * Occurs after the page index changes.\n * @type {?}\n */\nCollectionView.prototype.pageChanged;\n/**\n * Occurs before the page index changes.\n * @type {?}\n */\nCollectionView.prototype.pageChanging;\n}\n\n","import {GroupDescription} from './GroupDescription';\nimport {CollectionView} from './CollectionView';\nimport {getAggregate,tryCast} from '../core';\nimport {ICollectionView} from './interface/ICollectionView';\nimport {Aggregate} from '../enum/Aggregate';\n/**\n * Represents a group created by a \\@see:CollectionView object based on\n * its \\@see:groupDescriptions property.\n */\nexport class CollectionViewGroup {\n    _gd: GroupDescription;\n    _name: string;\n    _path: string;\n    _level: number;\n    _isBottomLevel: boolean;\n    _groups: CollectionViewGroup[];\n    _items: any[];\n/**\n * Initializes a new instance of a \\@see:CollectionViewGroup.\n * \n * @param {?} groupDescription \\@see:GroupDescription that owns the new group.\n * @param {?} name Name of the new group.\n * @param {?} level Level of the new group.\n * @param {?} isBottomLevel Whether this group has any subgroups.\n */\nconstructor(groupDescription: GroupDescription, name: string, level: number, isBottomLevel: boolean) {\n        this._gd = groupDescription;\n        this._name = name;\n        this._level = level;\n        this._isBottomLevel = isBottomLevel;\n        this._groups = [];\n        this._items = [];\n    }\n/**\n * @return {?}\n */\nget name(): string {\n        return this._name;\n    }\n/**\n * @return {?}\n */\nget level(): number {\n        return this._level;\n    }\n/**\n * @return {?}\n */\nget isBottomLevel(): boolean {\n        return this._isBottomLevel;\n    }\n/**\n * @return {?}\n */\nget items(): any[] {\n        return this._items;\n    }\n/**\n * @return {?}\n */\nget groups(): CollectionViewGroup[] {\n        return this._groups;\n    }\n/**\n * @return {?}\n */\nget groupDescription(): GroupDescription {\n        return this._gd;\n    }\n/**\n * Calculates an aggregate value for the items in this group.\n * \n * @param {?} aggType Type of aggregate to calculate.\n * @param {?} binding Property to aggregate on.\n * @param {?=} view CollectionView that owns this group.\n * @return {?} The aggregate value.\n */\ngetAggregate(aggType: Aggregate, binding: string, view?: ICollectionView) {\n        const /** @type {?} */ cv    = /** @type {?} */(( <CollectionView>tryCast(view, CollectionView))), /** @type {?} */\n              group = cv ? cv._getFullGroup(this) : this;\n        return getAggregate(aggType, group.items, binding);\n    }\n}\n\nfunction CollectionViewGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nCollectionViewGroup.prototype._gd;\n/** @type {?} */\nCollectionViewGroup.prototype._name;\n/** @type {?} */\nCollectionViewGroup.prototype._path;\n/** @type {?} */\nCollectionViewGroup.prototype._level;\n/** @type {?} */\nCollectionViewGroup.prototype._isBottomLevel;\n/** @type {?} */\nCollectionViewGroup.prototype._groups;\n/** @type {?} */\nCollectionViewGroup.prototype._items;\n}\n\n","import {Binding} from '../core/index';\n/**\n * Describes a sorting criterion.\n */\nexport class SortDescription {\n    _bnd: Binding;\n    _asc: boolean;\n/**\n * Initializes a new instance of a \\@see:SortDescription.\n * \n * @param {?} property Name of the property to sort on.\n * @param {?} ascending Whether to sort in ascending order.\n */\nconstructor(property: string, ascending: boolean) {\n        this._bnd = new Binding(property);\n        this._asc = ascending;\n    }\n/**\n * Gets the name of the property used to sort.\n * @return {?}\n */\nget property(): string {\n        return this._bnd.path;\n    }\n/**\n * Gets a value that determines whether to sort the values in ascending order.\n * @return {?}\n */\nget ascending(): boolean {\n        return this._asc;\n    }\n}\n\nfunction SortDescription_tsickle_Closure_declarations() {\n/** @type {?} */\nSortDescription.prototype._bnd;\n/** @type {?} */\nSortDescription.prototype._asc;\n}\n\n","import {CancelEventArgs} from '../../eventArgs/CancelEventArgs';\n/**\n * Provides data for the \\@see:IPagedCollectionView.pageChanging event\n */\nexport class PageChangingEventArgs extends CancelEventArgs\n{\n/**\n * Gets the index of the page that is about to become current.\n */\nnewPageIndex: number;\n/**\n * Initializes a new instance of a \\@see:PageChangingEventArgs.\n * \n * @param {?} newIndex Index of the page that is about to become current.\n */\nconstructor(newIndex: number) {\n        super();\n        this.newPageIndex = newIndex;\n    }\n}\n\nfunction PageChangingEventArgs_tsickle_Closure_declarations() {\n/**\n * Gets the index of the page that is about to become current.\n * @type {?}\n */\nPageChangingEventArgs.prototype.newPageIndex;\n}\n\n","\n/**\n * Represents a base class for types defining grouping conditions.\n * \n * The concrete class which is commonly used for this purpose is\n * \\@see:PropertyGroupDescription.\n */\nexport class GroupDescription {\n/**\n * Returns the group name for the given item.\n * \n * @param {?} item The item to get group name for.\n * @param {?} level The zero-based group level index.\n * @return {?} The name of the group the item belongs to.\n */\npublic groupNameFromItem(item: any, level: number): any {\n        return '';\n    }\n/**\n * Returns a value that indicates whether the group name and the item name\n * match (which implies that the item belongs to the group).\n * \n * @param {?} groupName The name of the group.\n * @param {?} itemName The name of the item.\n * @return {?} True if the names match; otherwise, false.\n */\npublic namesMatch(groupName: any, itemName: any): boolean {\n        return groupName === itemName;\n    }\n}","import {ArrayBase} from './ArrayBase';\nimport {INotifyCollectionChanged} from '../collections/interface/INotifyCollectionChanged';\nimport {NotifyCollectionChangedAction} from '../enum/collections/NotifyCollectionChangedAction';\nimport {asArray} from '../core/index';\nimport {EventEmitter} from '@angular/core';\nimport {NotifyCollectionChangedEventArgs} from './eventArgs/NotifyCollectionChangedEventArgs';\nexport class ObservableArray extends ArrayBase implements INotifyCollectionChanged {\n/**\n * @param {?=} data\n */\nconstructor(data?: any[]) {\n        super();\n        if (data) {\n            data = asArray(data);\n            this.splice(0, 0, ...data);\n        }\n    }\n/**\n * Appends an item to the array.\n * \n * @param {?} item Item to add to the array.\n * @return {?} The new length of the array.\n */\npush(item: any): number {\n        const /** @type {?} */ rv = super.push(item);\n        this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, rv - 1, [], [item]));\n        return rv;\n    }\n/**\n * @return {?}\n */\npop(): any {\n        const /** @type {?} */ item = super.pop();\n        this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, this.length, [item]));\n        return item;\n    }\n/**\n * Removes and/or adds items to the array.\n * \n * @param {?} index Position where items will be added or removed.\n * @param {?} count Number of items to remove from the array.\n * @param {...?} items Item to add to the array.\n * @return {?} An array containing the removed elements.\n */\nsplice(index: number, count: number, ...items: any[]): any[] {\n        let /** @type {?} */ removed;\n        if (count && items.length > 0) {\n            removed = super.splice(index, count, items);\n            if(count == items.length) {\n                this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Change, index, removed, items));\n            }\n            this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Splice, index, removed, items));\n            return removed;\n        } else if (items.length > 0) {\n            removed = super.splice(index, count, items);\n            this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, index, [], items));\n            return removed;\n        }else {\n            removed = super.splice(index, count);\n            this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, index, removed, []));\n            return removed;\n        }\n    }\n/**\n * Creates a shallow copy of a portion of an array.\n * \n * @param {?=} begin Position where the copy starts.\n * @param {?=} end Position where the copy ends.\n * @return {?} A shallow copy of a portion of an array.\n */\nslice(begin?: number, end?: number): any[] {\n        return super.slice(begin, end);\n    }\n/**\n * Searches for an item in the array.\n * \n * @param {?} searchElement Element to locate in the array.\n * @param {?=} fromIndex The index where the search should start.\n * @return {?} The index of the item in the array, or -1 if the item was not found.\n */\nindexOf(searchElement: any, fromIndex?: number): number {\n        return super.indexOf(searchElement, fromIndex);\n    }\n/**\n * Sorts the elements of the array in place.\n * \n * @param {?=} compareFn Specifies a function that defines the sort order.\n * If specified, the function should take two arguments and should return\n * -1, +1, or 0 to indicate the first argument is smaller, greater than,\n * or equal to the second argument.\n * If omitted, the elements are sorted in ascending, ASCII character order.\n * @return {?} A copy of the sorted array.\n */\nsort(compareFn?: Function): any[] {\n        const /** @type {?} */ rv = super.sort(compareFn);\n        this.onCollectionChanged();\n        return rv;\n    }\n/**\n * @return {?}\n */\nreverse() {\n        const /** @type {?} */ rv = super.reverse();\n        this.onCollectionChanged();\n        return rv;\n    }\n/**\n * Inserts an item at a specific position in the array.\n * \n * @param {?} index Position where the item will be added.\n * @param {?} item Item to add to the array.\n * @return {?}\n */\ninsert(index: number, item: any) {\n        this.splice(index, 0, item);\n    }\n/**\n * Removes an item from the array.\n * \n * @param {?} item Item to remove.\n * @return {?} True if the item was removed, false if it wasn't found in the array.\n */\nremove(item: any): boolean {\n        const /** @type {?} */ index = this.indexOf(item);\n        if (index > -1) {\n            this.removeAt(index);\n            return true;\n        }\n        return false;\n    }\n/**\n * Removes an item at a specific position in the array.\n * \n * @param {?} index Position of the item to remove.\n * @return {?}\n */\nremoveAt(index: number) {\n        this.splice(index, 1);\n    }\n/**\n * Assigns an item at a specific position in the array.\n * \n * @param {?} index Position where the item will be assigned.\n * @param {?} item Item to assign to the array.\n * @return {?}\n */\nsetAt(index: number, item: any) {\n        this.splice(index, 1, item);\n    }\n/**\n * Removes all items from the array.\n * @return {?}\n */\nclear() {\n        if (this.length !== 0) {\n            this.length = 0; // fastest way to clear an array\n            this.onCollectionChanged();\n        }\n    }\n/**\n * Occurs when the collection changes.\n * fixed\n */\ncollectionChanged = new EventEmitter(true);\n/**\n * Raises the {\\@link collectionChanged} event.\n * \n * @param {?=} e Contains a description of the change.\n * @return {?}\n */\nonCollectionChanged(e = NotifyCollectionChangedEventArgs.reset) {\n        this.collectionChanged.emit(e);\n    }\n}\n\nfunction ObservableArray_tsickle_Closure_declarations() {\n/**\n * Occurs when the collection changes.\n * fixed\n * @type {?}\n */\nObservableArray.prototype.collectionChanged;\n}\n\n","import { EventArgs } from '../../eventArgs/EventArgs';\nimport { NotifyCollectionChangedAction } from '../../enum/collections/NotifyCollectionChangedAction';\n/**\n * Provides data for the \\@see:collectionChanged event.\n */\nexport class NotifyCollectionChangedEventArgs extends EventArgs {\n/**\n * Provides a reset notification.\n */\nstatic reset = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Reset);\n/**\n * Initializes a new instance of an {\\@link NotifyCollectionChangedEventArgs}.\n * \n * @param {?} action Type of action that caused the event to fire.\n * @param {?=} index Index of the item.\n * @param {?=} removed Item that was removed.\n * @param {?=} added Item that was added.\n */\nconstructor(public action: NotifyCollectionChangedAction,\npublic index = -1,\npublic removed: any[] = [],\npublic added: any[] = []) {\n        super();\n    }\n}\n\nfunction NotifyCollectionChangedEventArgs_tsickle_Closure_declarations() {\n/**\n * Provides a reset notification.\n * @type {?}\n */\nNotifyCollectionChangedEventArgs.reset;\n/** @type {?} */\nNotifyCollectionChangedEventArgs.prototype.action;\n/** @type {?} */\nNotifyCollectionChangedEventArgs.prototype.index;\n/** @type {?} */\nNotifyCollectionChangedEventArgs.prototype.removed;\n/** @type {?} */\nNotifyCollectionChangedEventArgs.prototype.added;\n}\n\n","\nexport type NotifyCollectionChangedAction = number;\nexport let NotifyCollectionChangedAction: any = {};\nNotifyCollectionChangedAction.Add = 0;\nNotifyCollectionChangedAction.Remove = 1;\nNotifyCollectionChangedAction.Change = 2;\nNotifyCollectionChangedAction.Reset = 3;\nNotifyCollectionChangedAction.Splice = 4;\nNotifyCollectionChangedAction[NotifyCollectionChangedAction.Add] = \"Add\";\nNotifyCollectionChangedAction[NotifyCollectionChangedAction.Remove] = \"Remove\";\nNotifyCollectionChangedAction[NotifyCollectionChangedAction.Change] = \"Change\";\nNotifyCollectionChangedAction[NotifyCollectionChangedAction.Reset] = \"Reset\";\nNotifyCollectionChangedAction[NotifyCollectionChangedAction.Splice] = \"Splice\";\n\n","\n/**\n * Base class for Array classes with notifications.\n */\nexport class ArrayBase {\n/**\n * Initializes a new instance of an \\@see:ArrayBase.\n */\nconstructor() {\n        this.length = 0;\n        Array.apply(this, arguments);\n    }\n/**\n * @return {?}\n */\npop(): any {\n        return null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npush(value: any): number {\n        return 0;\n    }\n/**\n * @param {?} index\n * @param {?} count\n * @param {?=} value\n * @return {?}\n */\nsplice(index: number, count: number, value?: any): any[] {\n        return null;\n    }\n/**\n * @param {?} begin\n * @param {?=} end\n * @return {?}\n */\nslice(begin: number, end?: number): any[] {\n        return null;\n    }\n/**\n * @param {?} searchElement\n * @param {?=} fromIndex\n * @return {?}\n */\nindexOf(searchElement: any, fromIndex?: number) {\n        return -1;\n    }\n/**\n * @param {?=} compareFn\n * @return {?}\n */\nsort(compareFn?: Function): any[]{\n        return null;\n    }\n/**\n * @return {?}\n */\nreverse() {\n        return null\n    }\n    length: number;\n}\n\nfunction ArrayBase_tsickle_Closure_declarations() {\n/** @type {?} */\nArrayBase.prototype.length;\n}\n\n\n// inheriting from Array\n// NOTE: set this in declaration rather than in constructor so the\n// the TypeScript inheritance mechanism works correctly with instanceof.\nArrayBase.prototype = Array.prototype;\n","import {EventArgs} from './EventArgs';\n/**\n * Provides arguments for cancellable events.\n */\nexport class CancelEventArgs extends EventArgs {\n/**\n * Gets or sets a value that indicates whether the event should be canceled.\n */\ncancel = false;\n}\n\nfunction CancelEventArgs_tsickle_Closure_declarations() {\n/**\n * Gets or sets a value that indicates whether the event should be canceled.\n * @type {?}\n */\nCancelEventArgs.prototype.cancel;\n}\n\n","\nimport {asFunction} from '../core/index';\nimport {EventHandler} from './EventHandler';\nimport {IEventHandler} from './IEventHandler';\nimport {EventArgs} from '../eventArgs/EventArgs';\n/**\n * Represents an event.\n * \n * Wijmo events are similar to .NET events. Any class may define events by\n * declaring them as fields. Any class may subscribe to events using the\n * event's \\@see:addHandler method and unsubscribe using the \\@see:removeHandler\n * method.\n * \n * Wijmo event handlers take two parameters: <i>sender</i> and <i>args</i>.\n * The first is the object that raised the event, and the second is an object\n * that contains the event parameters.\n * \n * Classes that define events follow the .NET pattern where for every event\n * there is an <i>on[EVENTNAME]</i> method that raises the event. This pattern\n * allows derived classes to override the <i>on[EVENTNAME]</i> method and\n * handle the event before and/or after the base class raises the event.\n * Derived classes may even suppress the event by not calling the base class\n * implementation.\n * \n * For example, the TypeScript code below overrides the <b>onValueChanged</b>\n * event for a control to perform some processing before and after the\n * <b>valueChanged</b> event fires:\n * <pre>\n *   // override base class\n *   onValueChanged(e: EventArgs) {\n *   // execute some code before the event fires\n *   console.log('about to fire valueChanged');\n *   // optionally, call base class to fire the event\n *   super.onValueChanged(e);\n *   // execute some code after the event fired\n *   console.log('valueChanged event just fired');\n * }\n * </pre>\n * @deprecated\n */\nexport class Event {\nprivate _handlers: EventHandler[] = [];\n/**\n * @deprecated\n */\nconstructor(){\n\n    }\n/**\n * Adds a handler to this event.\n * \n * @deprecated\n * @param {?} handler Function invoked when the event is raised.\n * @param {?=} self Object that defines the event handler\n * (accessible as 'this' from the handler code).\n * @return {?}\n */\naddHandler(handler: IEventHandler, self?: any) {\n        asFunction(handler);\n        this._handlers.push(new EventHandler(handler, self));\n    }\n/**\n * Removes a handler from this event.\n * \n * @deprecated\n * @param {?} handler Function invoked when the event is raised.\n * @param {?=} self Object that defines the event handler (accessible as 'this' from the handler code).\n * @return {?}\n */\nremoveHandler(handler: IEventHandler, self?: any) {\n        asFunction(handler);\n        for (let /** @type {?} */ i = 0; i < this._handlers.length; i++) {\n            const /** @type {?} */ l = this._handlers[i];\n            if (l.handler == handler || handler == null) {\n                if (l.self == self || self == null) {\n                    this._handlers.splice(i, 1);\n                    if (handler && self) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n/**\n * Removes all handlers associated with this event.\n * @deprecated\n * @return {?}\n */\nremoveAllHandlers() {\n        this._handlers.length = 0;\n    }\n/**\n * Raises this event, causing all associated handlers to be invoked.\n * \n * @deprecated use EventEmitter.emit() instead\n * @param {?} sender Source object.\n * @param {?=} args Event parameters.\n * @return {?}\n */\nraise(sender: any, args = EventArgs.empty) {\n        for (let /** @type {?} */ i = 0; i < this._handlers.length; i++) {\n            const /** @type {?} */ l = this._handlers[i];\n            l.handler.call(l.self, sender, args);\n        }\n    }\n/**\n * Gets a value that indicates whether this event has any handlers.\n * @deprecated\n * @return {?}\n */\nget hasHandlers(): boolean {\n        return this._handlers.length > 0;\n    }\n}\n\nfunction Event_tsickle_Closure_declarations() {\n/** @type {?} */\nEvent.prototype._handlers;\n}\n\n","\n/**\n * Base class for event arguments.\n */\nexport class EventArgs {\n/**\n * Provides a value to use with events that do not have event data.\n */\nstatic empty = new EventArgs();\n}\n\nfunction EventArgs_tsickle_Closure_declarations() {\n/**\n * Provides a value to use with events that do not have event data.\n * @type {?}\n */\nEventArgs.empty;\n}\n","/*\n * Represents an event handler (private class)\n */\n\nimport {IEventHandler} from './IEventHandler';\nexport class EventHandler {\n    handler: IEventHandler;\n    self: any;\n/**\n * @param {?} handler\n * @param {?} self\n */\nconstructor(handler: IEventHandler, self: any) {\n        this.handler = handler;\n        this.self = self;\n    }\n}\n\nfunction EventHandler_tsickle_Closure_declarations() {\n/** @type {?} */\nEventHandler.prototype.handler;\n/** @type {?} */\nEventHandler.prototype.self;\n}\n","\nexport type Aggregate = number;\nexport let Aggregate: any = {};\nAggregate.None = 0;\nAggregate.Sum = 1;\nAggregate.Cnt = 2;\nAggregate.Avg = 3;\nAggregate.Max = 4;\nAggregate.Min = 5;\nAggregate.Rng = 6;\nAggregate.Std = 7;\nAggregate.Var = 8;\nAggregate.StdPop = 9;\nAggregate.VarPop = 10;\nAggregate[Aggregate.None] = \"None\";\nAggregate[Aggregate.Sum] = \"Sum\";\nAggregate[Aggregate.Cnt] = \"Cnt\";\nAggregate[Aggregate.Avg] = \"Avg\";\nAggregate[Aggregate.Max] = \"Max\";\nAggregate[Aggregate.Min] = \"Min\";\nAggregate[Aggregate.Rng] = \"Rng\";\nAggregate[Aggregate.Std] = \"Std\";\nAggregate[Aggregate.Var] = \"Var\";\nAggregate[Aggregate.StdPop] = \"StdPop\";\nAggregate[Aggregate.VarPop] = \"VarPop\";\n\n","import {assert} from './assert';\nimport {isBoolean} from '../lang/is-boolean';\n/**\n * Asserts that a value is a Boolean.\n * \n * @param {?} value Value supposed to be Boolean.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The Boolean passed in.\n */\nexport function asBoolean(value: boolean, nullOK = false): boolean {\n    assert((nullOK && value == null) || isBoolean(value), 'Boolean expected.');\n    return value;\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isBoolean(value: any): boolean {\n    return typeof (value) == 'boolean';\n}\n","import {isArray} from '../lang/is-array';\nimport {assert} from '../asserts/assert';\n/**\n * Asserts that a value is an array.\n * \n * @param {?} value Value supposed to be an array.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The array passed in.\n */\nexport function asArray(value: any, nullOK = true): any[] {\n    assert((nullOK && value == null) || isArray(value), 'Array expected.');\n    return value;\n}\n","import {asFunction} from '../asserts/asFunction';\nimport {asNumber} from '../asserts/asNumber';\n/**\n * Calls a function on a timer with a parameter varying between zero and one.\n * \n * Use this function to create animations by modifying document properties\n * or styles on a timer.\n * \n * For example, the code below changes the opacity of an element from zero\n * to one in one second:\n * <pre>var element = document.getElementById('someElement');\n * animate(function(pct) {\n *   element.style.opacity = pct;\n * }, 1000);</pre>\n * \n * The function returns an interval ID that you can use to stop the\n * animation. This is typically done when you are starting a new animation\n * and wish to suspend other on-going animations on the same element.\n * For example, the code below keeps track of the interval ID and clears\n * if before starting a new animation:\n * <pre>var element = document.getElementById('someElement');\n * if (this._animInterval) {\n *   clearInterval(this._animInterval);\n * }\n * var self = this;\n * self._animInterval = animate(function(pct) {\n *   element.style.opacity = pct;\n *   if (pct == 1) {\n *     self._animInterval = null;\n *   }\n * }, 1000);</pre>\n * \n * @param {?} apply Callback function that modifies the document.\n * The function takes a single parameter that represents a percentage.\n * @param {?=} duration The duration of the animation, in milliseconds.\n * @param {?=} step The interval between animation frames, in milliseconds.\n * @return {?} An interval id that you can use to suspend the animation.\n */\nexport function animate(apply: Function, duration = 400, step = 35): number {\n    asFunction(apply);\n    asNumber(duration, false, true);\n    asNumber(step, false, true);\n    var /** @type {?} */ t     = 0;\n    const /** @type {?} */ timer = window.setInterval(function () {\n                                  let /** @type {?} */ pct = t / duration; // linear easing\n                                  pct     = Math.sin(pct * Math.PI / 2); // easeOutSin easing\n                                  pct *= pct; // swing easing\n                                  apply(pct);\n                                  t += step;\n                                  if (t >= duration) {\n                                      if (pct < 1) apply(1); // ensure apply(1) is called to finish\n                                      clearInterval(timer);\n                                  }\n                              }, step\n    );\n    return timer;\n}\n","import {assert} from './assert';\nimport {isNumber} from '../lang/is-number';\n/**\n * Asserts that a value is a number.\n * \n * @param {?} value Value supposed to be numeric.\n * @param {?=} nullOK Whether null values are acceptable.\n * @param {?=} positive Whether to accept only positive numeric values.\n * @return {?} The number passed in.\n */\nexport function asNumber(value: number, nullOK: boolean = false, positive: boolean = false): number {\n    assert((nullOK && value == null) || isNumber(value), 'Number expected.');\n    if (positive && value && value < 0) {\n        debugger;\n        throw new Error('Positive number expected.');\n    }\n    return value;\n}\n","import {assert} from './assert';\nimport {isFunction} from '../lang/is-function';\n/**\n * Asserts that a value is a function.\n * \n * @param {?} value Value supposed to be a function.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The function passed in.\n */\nexport function asFunction(value: any, nullOK = true): Function {\n    assert((nullOK && value == null) || isFunction(value), 'Function expected.');\n    return value;\n}\n","import {Point} from '../common/ui/point';\nimport {isNumber} from './lang/is-number';\n/**\n * Converts mouse or touch event arguments into a \\@see:Point in page coordinates.\n * @param {?} e\n * @return {?}\n */\nexport function mouseToPage(e: any): Point {\n\n    // accept Point objects\n    if (e instanceof Point) {\n        return e;\n    }\n\n    // accept touch events\n    if (e.touches && e.touches.length > 0) {\n        e = e.touches[0];\n    }\n\n    // accept mouse events\n    // NOTE: we should be able to use pageX/Y properties, but those may return\n    // wrong values (e.g. Android with zoomed screens); so we get the client\n    // coordinates and apply the page offset ourselves instead...\n    if (isNumber(e.clientX) && isNumber(e.clientY)) {\n        return new Point(e.clientX + pageXOffset, e.clientY + pageYOffset);\n    }\n\n    // wrong parameter type...\n    throw 'Mouse or touch event expected.';\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNumber(value: any): boolean {\n    return typeof (value) == 'number';\n}\n","import { asNumber } from '../../util/util';\n/**\n * Class that represents a point (with x and y coordinates).\n */\nexport class Point {\n/**\n * Gets or sets the x coordinate of this \\@see:Point.\n */\nx: number;\n/**\n * Gets or sets the y coordinate of this \\@see:Point.\n */\ny: number;\n/**\n * Initializes a new instance of a \\@see:Point object.\n * \n * @param {?=} x X coordinate of the new Point.\n * @param {?=} y Y coordinate of the new Point.\n */\nconstructor(x: number = 0, y: number = 0) {\n        this.x = asNumber(x, false, false);\n        this.y = asNumber(y, false, false);\n    }\n/**\n * Returns true if a \\@see:Point has the same coordinates as this \\@see:Point.\n * \n * @param {?} pt \\@see:Point to compare to this \\@see:Point.\n * @return {?}\n */\nequals(pt: Point): boolean {\n        return (pt instanceof Point) && this.x == pt.x && this.y == pt.y;\n    }\n/**\n * Creates a copy of this \\@see:Point.\n * @return {?}\n */\nclone(): Point {\n        return new Point(this.x, this.y);\n    }\n/**\n * @return {?}\n */\ntoString(): string {\n        return `[${this.x}, ${this.y}]`;\n    }\n}\n\nfunction Point_tsickle_Closure_declarations() {\n/**\n * Gets or sets the x coordinate of this \\@see:Point.\n * @type {?}\n */\nPoint.prototype.x;\n/**\n * Gets or sets the y coordinate of this \\@see:Point.\n * @type {?}\n */\nPoint.prototype.y;\n}\n\n","import {isObject} from './lang/is-object';\nimport {isFunction} from './lang/is-function';\nimport {assert} from './asserts/assert';\n/**\n * Copies properties from an object to another.\n * \n * This method is typically used to initialize controls and other Wijmo objects\n * by setting their properties and assigning event handlers.\n * \n * The destination object must define all the properties defined in the source,\n * or an error will be thrown.\n * \n * @param {?} dst The destination object.\n * @param {?} src The source object.\n * @return {?}\n */\nexport function copy(dst: any, src: any) {\n    for (let /** @type {?} */ key in src) {\n        assert(key in dst, 'Unknown key \"' + key + '\".');\n        const /** @type {?} */ value = src[key];\n        if (!dst._copy || !dst._copy(key, value)) { // allow overrides\n            if (dst[key] instanceof Event && isFunction(value)) {\n                dst[key].addHandler(value); // add event handler\n            } else if (isObject(value) && dst[key]) {\n                copy(dst[key], value); // copy sub-objects\n            } else {\n                dst[key] = value; // assign values\n            }\n        }\n    }\n}\n","\n/**\n * Throws an exception if a condition is false.\n * \n * @param {?} condition Condition expected to be true.\n * @param {?} msg Message of the exception if the condition is not true.\n * @return {?}\n */\nexport function assert(condition: boolean, msg: string) {\n    if (!condition) {\n        throw new Error('** Assertion failed in Wijmo: ' + msg);\n    }\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isFunction(value: any): boolean {\n    return typeof (value) == 'function';\n}\n","import {isArray} from './is-array';\nimport {isDate} from './is-date';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isObject(value: any): boolean {\n    return value != null && typeof value == 'object' && !isDate(value) && !isArray(value);\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isDate(value: any): boolean {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isArray(value: any): boolean {\n    return value instanceof Array;\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\n//import {ALERT_DIRECTIVES} from \"./alert/index\";\n//import {CHECKBOX_DIRECTIVES} from \"./checkboxes/index\";\n//import {CODE_HIGHLIGHT_DIRECTIVES} from \"./code/index\";\n//import {DATAGRID_DIRECTIVES} from \"./datagrid/index\";\n//import {DROPDOWN_DIRECTIVES} from \"./dropdown/index\";\n//import {LAYOUT_DIRECTIVES} from \"./layout/index\";\n//import {MODAL_DIRECTIVES} from \"./modal/index\";\n//import {NAVIGATION_DIRECTIVES} from \"./nav/index\";\n//import {STACK_VIEW_DIRECTIVES} from \"./stack-view/index\";\n//import {TABS_DIRECTIVES} from \"./tabs/index\";\n//import {TREE_VIEW_DIRECTIVES} from \"./tree-view/index\";\n//import {WIZARD_DIRECTIVES} from \"./wizard/index\";\n//import {ICON_DIRECTIVES} from \"./iconography/index\";\n\n\nimport {ClrResponsiveNavigationService} from './nav/clrResponsiveNavigationService';\nexport class ClarityModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ClarityModule,\n            providers: [ ClrResponsiveNavigationService ]\n        };\n    }\n/**\n * @return {?}\n */\nstatic forChild(): ModuleWithProviders {\n        return {\n            ngModule: ClarityModule,\n            providers: []\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [\n        //ALERT_DIRECTIVES,\n        //CHECKBOX_DIRECTIVES,\n        //CODE_HIGHLIGHT_DIRECTIVES,\n       // DATAGRID_DIRECTIVES,\n       // DROPDOWN_DIRECTIVES,\n       // LAYOUT_DIRECTIVES,\n       // MODAL_DIRECTIVES,\n       // NAVIGATION_DIRECTIVES,\n       // STACK_VIEW_DIRECTIVES,\n       // TABS_DIRECTIVES,\n       // TREE_VIEW_DIRECTIVES,\n       // WIZARD_DIRECTIVES,\n       // ICON_DIRECTIVES\n    ],\n    exports: [\n        //ALERT_DIRECTIVES,\n        //CHECKBOX_DIRECTIVES,\n        //CODE_HIGHLIGHT_DIRECTIVES,\n        //DATAGRID_DIRECTIVES,\n       // DROPDOWN_DIRECTIVES,\n       // LAYOUT_DIRECTIVES,\n       // MODAL_DIRECTIVES,\n       // NAVIGATION_DIRECTIVES,\n       // STACK_VIEW_DIRECTIVES,\n       // TABS_DIRECTIVES,\n       // TREE_VIEW_DIRECTIVES,\n       // WIZARD_DIRECTIVES,\n       // ICON_DIRECTIVES\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClarityModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClarityModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClarityModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\n\nimport { ClrResponsiveNavCodes } from './clrResponsiveNavCodes';\nimport { ClrResponsiveNavControlMessage } from './clrResponsiveNavControlMessage';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nexport class ClrResponsiveNavigationService {\npublic responsiveNavList: number[] = [];\nprivate registerNavSubject: Subject<number[]>\n        = new Subject<number[]>();\nprivate controlNavSubject: Subject<ClrResponsiveNavControlMessage>\n        = new Subject<ClrResponsiveNavControlMessage>();\n/**\n * @return {?}\n */\nget registeredNavs(): Observable<number[]> {\n        return this.registerNavSubject.asObservable();\n    }\n/**\n * @return {?}\n */\nget navControl(): Observable<ClrResponsiveNavControlMessage> {\n        return this.controlNavSubject.asObservable();\n    }\nconstructor() {\n        this.closeAllNavs(); //We start with all navs closed\n    }\n/**\n * @param {?} navLevel\n * @return {?}\n */\nregisterNav(navLevel: number): void {\n        if (!navLevel || this.isNavRegistered(navLevel)) {\n            return;\n        }\n        this.responsiveNavList.push(navLevel);\n        this.registerNavSubject.next(this.responsiveNavList);\n    }\n/**\n * @param {?} navLevel\n * @return {?}\n */\nisNavRegistered(navLevel: number): boolean {\n        if (this.responsiveNavList.indexOf(navLevel) > -1) {\n            console.error(\"Multiple clr-nav-level \" + navLevel\n                + \" attributes found. Please make sure that only one exists\");\n            return true;\n        }\n        return false;\n    }\n/**\n * @param {?} navLevel\n * @return {?}\n */\nunregisterNav(navLevel: number) {\n        let /** @type {?} */ index = this.responsiveNavList.indexOf(navLevel);\n        if (index > -1) {\n            this.responsiveNavList.splice(index, 1);\n            this.registerNavSubject.next(this.responsiveNavList);\n        }\n    }\n/**\n * @param {?} controlCode\n * @param {?} navLevel\n * @return {?}\n */\nsendControlMessage(controlCode: string, navLevel: number) {\n        let /** @type {?} */ message: ClrResponsiveNavControlMessage\n            = new ClrResponsiveNavControlMessage(controlCode, navLevel);\n        this.controlNavSubject.next(message);\n    }\n/**\n * @return {?}\n */\ncloseAllNavs() {\n        let /** @type {?} */ message: ClrResponsiveNavControlMessage\n            = new ClrResponsiveNavControlMessage(\n                ClrResponsiveNavCodes.NAV_CLOSE_ALL, -999\n            );\n        this.controlNavSubject.next(message);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrResponsiveNavigationService_tsickle_Closure_declarations() {\n/** @type {?} */\nClrResponsiveNavigationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrResponsiveNavigationService.ctorParameters;\n/** @type {?} */\nClrResponsiveNavigationService.prototype.responsiveNavList;\n/** @type {?} */\nClrResponsiveNavigationService.prototype.registerNavSubject;\n/** @type {?} */\nClrResponsiveNavigationService.prototype.controlNavSubject;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ClrResponsiveNavControlMessage {\n/**\n * @param {?} _controlCode\n * @param {?} _navLevel\n */\nconstructor(private _controlCode: string,\nprivate _navLevel: number) {}\n/**\n * @return {?}\n */\nget controlCode(): string {\n        return this._controlCode;\n    }\n/**\n * @return {?}\n */\nget navLevel(): number {\n        return this._navLevel;\n    }\n}\n\nfunction ClrResponsiveNavControlMessage_tsickle_Closure_declarations() {\n/** @type {?} */\nClrResponsiveNavControlMessage.prototype._controlCode;\n/** @type {?} */\nClrResponsiveNavControlMessage.prototype._navLevel;\n}\n\n","\nexport class ClrResponsiveNavCodes {\n/**\n * @return {?}\n */\npublic static get NAV_LEVEL_1(): number { return 1; }\n/**\n * @return {?}\n */\npublic static get NAV_LEVEL_2(): number { return 2; }\n/**\n * @return {?}\n */\npublic static get NAV_CLOSE_ALL(): string { return \"NAV_CLOSE_ALL\"; }\n/**\n * @return {?}\n */\npublic static get NAV_OPEN(): string { return \"NAV_OPEN\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLOSE(): string { return \"NAV_CLOSE\"; }\n/**\n * @return {?}\n */\npublic static get NAV_TOGGLE(): string { return \"NAV_TOGGLE\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_HAMBURGER_MENU(): string { return \"open-hamburger-menu\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_OVERFLOW_MENU(): string { return \"open-overflow-menu\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_TRIGGER_1(): string { return \"header-hamburger-trigger\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_TRIGGER_2(): string { return \"header-overflow-trigger\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_LEVEL_1(): string { return \"clr-nav-level-1\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_LEVEL_2(): string { return \"clr-nav-level-2\"; }\n}\n"],"names":["Event","Subscription","tryCast","Binding","Subject"],"mappings":"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"}
