{"version":3,"file":"ui-components-light.umd.min.js","sources":["~/ui-components-light/src/clarity-light/nav/clrResponsiveNavCodes.ts","~/ui-components-light/src/clarity-light/nav/clrResponsiveNavControlMessage.ts","~/ui-components-light/src/clarity-light/nav/clrResponsiveNavigationService.ts","~/ui-components-light/src/clarity-light/clarity.module.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/lang/is-array.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/lang/is-date.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/lang/is-object.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/lang/is-function.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/asserts/assert.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/lang/is-number.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/asserts/asFunction.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/asserts/asNumber.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/asserts/asArray.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/lang/is-boolean.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/asserts/asBoolean.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/common/Binding.ts","~/ui-components-light/src/clarity-light/wigfrid/enum/Aggregate.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/common/global.ts","~/ui-components-light/src/clarity-light/wigfrid/event/EventHandler.ts","~/ui-components-light/src/clarity-light/wigfrid/eventArgs/EventArgs.ts","~/ui-components-light/src/clarity-light/wigfrid/event/Event.ts","~/ui-components-light/src/clarity-light/wigfrid/eventArgs/CancelEventArgs.ts","~/ui-components-light/src/clarity-light/wigfrid/collections/ArrayBase.ts","~/ui-components-light/src/clarity-light/wigfrid/enum/collections/NotifyCollectionChangedAction.ts","~/ui-components-light/src/clarity-light/wigfrid/collections/eventArgs/NotifyCollectionChangedEventArgs.ts","~/ui-components-light/src/clarity-light/wigfrid/collections/ObservableArray.ts","~/ui-components-light/src/clarity-light/wigfrid/collections/GroupDescription.ts","~/ui-components-light/src/clarity-light/wigfrid/collections/eventArgs/PageChangingEventArgs.ts","~/ui-components-light/src/clarity-light/wigfrid/collections/SortDescription.ts","~/ui-components-light/src/clarity-light/wigfrid/collections/CollectionViewGroup.ts","~/ui-components-light/src/clarity-light/wigfrid/collections/CollectionView.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/asserts/asInt.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/lang/is-int.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/lang/is-string.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/asserts/asString.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/asserts/asType.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/dom/has-class.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/dom/add-class.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/dom/contains.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/dom/toggle-class.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/dom/remove-class.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/dom/get-element.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/lang/is-primitive.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/math/clamp.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/string-manipulation/escape-html.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/globalization/Localization.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/common/datetime/datetime.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/common/ui/size.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/globalization/Globalize.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/math/to-fixed.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/asserts/asDate.ts","~/ui-components-light/src/clarity-light/wigfrid/components/Control.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/dom/create-element.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/dom/enable.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/copy.ts","~/ui-components-light/src/clarity-light/wigfrid/enum/Key.ts","~/ui-components-light/src/clarity-light/wigfrid/components/DropDown/DropDown.ts","~/ui-components-light/src/clarity-light/wigfrid/components/FormatItemEventArgs.ts","~/ui-components-light/src/clarity-light/wigfrid/components/ListBox/ListBox.ts","~/ui-components-light/src/clarity-light/wigfrid/core/src/util/asserts/asCollectionView.ts","~/ui-components-light/src/clarity-light/wigfrid/components/ComboBox/ComboBox.ts"],"sourcesContent":["\nexport class ClrResponsiveNavCodes {\n/**\n * @return {?}\n */\npublic static get NAV_LEVEL_1(): number { return 1; }\n/**\n * @return {?}\n */\npublic static get NAV_LEVEL_2(): number { return 2; }\n/**\n * @return {?}\n */\npublic static get NAV_CLOSE_ALL(): string { return \"NAV_CLOSE_ALL\"; }\n/**\n * @return {?}\n */\npublic static get NAV_OPEN(): string { return \"NAV_OPEN\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLOSE(): string { return \"NAV_CLOSE\"; }\n/**\n * @return {?}\n */\npublic static get NAV_TOGGLE(): string { return \"NAV_TOGGLE\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_HAMBURGER_MENU(): string { return \"open-hamburger-menu\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_OVERFLOW_MENU(): string { return \"open-overflow-menu\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_TRIGGER_1(): string { return \"header-hamburger-trigger\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_TRIGGER_2(): string { return \"header-overflow-trigger\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_LEVEL_1(): string { return \"clr-nav-level-1\"; }\n/**\n * @return {?}\n */\npublic static get NAV_CLASS_LEVEL_2(): string { return \"clr-nav-level-2\"; }\n}\n","\nexport class ClrResponsiveNavControlMessage {\n/**\n * @param {?} _controlCode\n * @param {?} _navLevel\n */\nconstructor(private _controlCode: string,\nprivate _navLevel: number) {}\n/**\n * @return {?}\n */\nget controlCode(): string {\n        return this._controlCode;\n    }\n/**\n * @return {?}\n */\nget navLevel(): number {\n        return this._navLevel;\n    }\n}\n\nfunction ClrResponsiveNavControlMessage_tsickle_Closure_declarations() {\n/** @type {?} */\nClrResponsiveNavControlMessage.prototype._controlCode;\n/** @type {?} */\nClrResponsiveNavControlMessage.prototype._navLevel;\n}\n\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {Injectable} from '@angular/core';\n\nimport { ClrResponsiveNavCodes } from './clrResponsiveNavCodes';\nimport { ClrResponsiveNavControlMessage } from './clrResponsiveNavControlMessage';\nimport { Subject } from 'rxjs/Subject';\nimport { Observable } from 'rxjs/Observable';\nexport class ClrResponsiveNavigationService {\npublic responsiveNavList: number[] = [];\nprivate registerNavSubject: Subject<number[]>\n        = new Subject<number[]>();\nprivate controlNavSubject: Subject<ClrResponsiveNavControlMessage>\n        = new Subject<ClrResponsiveNavControlMessage>();\n/**\n * @return {?}\n */\nget registeredNavs(): Observable<number[]> {\n        return this.registerNavSubject.asObservable();\n    }\n/**\n * @return {?}\n */\nget navControl(): Observable<ClrResponsiveNavControlMessage> {\n        return this.controlNavSubject.asObservable();\n    }\nconstructor() {\n        this.closeAllNavs(); //We start with all navs closed\n    }\n/**\n * @param {?} navLevel\n * @return {?}\n */\nregisterNav(navLevel: number): void {\n        if (!navLevel || this.isNavRegistered(navLevel)) {\n            return;\n        }\n        this.responsiveNavList.push(navLevel);\n        this.registerNavSubject.next(this.responsiveNavList);\n    }\n/**\n * @param {?} navLevel\n * @return {?}\n */\nisNavRegistered(navLevel: number): boolean {\n        if (this.responsiveNavList.indexOf(navLevel) > -1) {\n            console.error(\"Multiple clr-nav-level \" + navLevel\n                + \" attributes found. Please make sure that only one exists\");\n            return true;\n        }\n        return false;\n    }\n/**\n * @param {?} navLevel\n * @return {?}\n */\nunregisterNav(navLevel: number) {\n        let /** @type {?} */ index = this.responsiveNavList.indexOf(navLevel);\n        if (index > -1) {\n            this.responsiveNavList.splice(index, 1);\n            this.registerNavSubject.next(this.responsiveNavList);\n        }\n    }\n/**\n * @param {?} controlCode\n * @param {?} navLevel\n * @return {?}\n */\nsendControlMessage(controlCode: string, navLevel: number) {\n        let /** @type {?} */ message: ClrResponsiveNavControlMessage\n            = new ClrResponsiveNavControlMessage(controlCode, navLevel);\n        this.controlNavSubject.next(message);\n    }\n/**\n * @return {?}\n */\ncloseAllNavs() {\n        let /** @type {?} */ message: ClrResponsiveNavControlMessage\n            = new ClrResponsiveNavControlMessage(\n                ClrResponsiveNavCodes.NAV_CLOSE_ALL, -999\n            );\n        this.controlNavSubject.next(message);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClrResponsiveNavigationService_tsickle_Closure_declarations() {\n/** @type {?} */\nClrResponsiveNavigationService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClrResponsiveNavigationService.ctorParameters;\n/** @type {?} */\nClrResponsiveNavigationService.prototype.responsiveNavList;\n/** @type {?} */\nClrResponsiveNavigationService.prototype.registerNavSubject;\n/** @type {?} */\nClrResponsiveNavigationService.prototype.controlNavSubject;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","/*\n * Copyright (c) 2016 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\n\n//import {ALERT_DIRECTIVES} from \"./alert/index\";\n//import {CHECKBOX_DIRECTIVES} from \"./checkboxes/index\";\n//import {CODE_HIGHLIGHT_DIRECTIVES} from \"./code/index\";\n//import {DATAGRID_DIRECTIVES} from \"./datagrid/index\";\n//import {DROPDOWN_DIRECTIVES} from \"./dropdown/index\";\n//import {LAYOUT_DIRECTIVES} from \"./layout/index\";\n//import {MODAL_DIRECTIVES} from \"./modal/index\";\n//import {NAVIGATION_DIRECTIVES} from \"./nav/index\";\n//import {STACK_VIEW_DIRECTIVES} from \"./stack-view/index\";\n//import {TABS_DIRECTIVES} from \"./tabs/index\";\n//import {TREE_VIEW_DIRECTIVES} from \"./tree-view/index\";\n//import {WIZARD_DIRECTIVES} from \"./wizard/index\";\n//import {ICON_DIRECTIVES} from \"./iconography/index\";\n\n\nimport {ClrResponsiveNavigationService} from './nav/clrResponsiveNavigationService';\nexport class ClarityModule {\n/**\n * @return {?}\n */\nstatic forRoot(): ModuleWithProviders {\n        return {\n            ngModule: ClarityModule,\n            providers: [ ClrResponsiveNavigationService ]\n        };\n    }\n/**\n * @return {?}\n */\nstatic forChild(): ModuleWithProviders {\n        return {\n            ngModule: ClarityModule,\n            providers: []\n        };\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    declarations: [\n        //ALERT_DIRECTIVES,\n        //CHECKBOX_DIRECTIVES,\n        //CODE_HIGHLIGHT_DIRECTIVES,\n       // DATAGRID_DIRECTIVES,\n       // DROPDOWN_DIRECTIVES,\n       // LAYOUT_DIRECTIVES,\n       // MODAL_DIRECTIVES,\n       // NAVIGATION_DIRECTIVES,\n       // STACK_VIEW_DIRECTIVES,\n       // TABS_DIRECTIVES,\n       // TREE_VIEW_DIRECTIVES,\n       // WIZARD_DIRECTIVES,\n       // ICON_DIRECTIVES\n    ],\n    exports: [\n        //ALERT_DIRECTIVES,\n        //CHECKBOX_DIRECTIVES,\n        //CODE_HIGHLIGHT_DIRECTIVES,\n        //DATAGRID_DIRECTIVES,\n       // DROPDOWN_DIRECTIVES,\n       // LAYOUT_DIRECTIVES,\n       // MODAL_DIRECTIVES,\n       // NAVIGATION_DIRECTIVES,\n       // STACK_VIEW_DIRECTIVES,\n       // TABS_DIRECTIVES,\n       // TREE_VIEW_DIRECTIVES,\n       // WIZARD_DIRECTIVES,\n       // ICON_DIRECTIVES\n    ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ClarityModule_tsickle_Closure_declarations() {\n/** @type {?} */\nClarityModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nClarityModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isArray(value: any): boolean {\n    return value instanceof Array;\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isDate(value: any): boolean {\n    return value instanceof Date && !isNaN(value.valueOf());\n}\n","import {isArray} from './is-array';\nimport {isDate} from './is-date';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isObject(value: any): boolean {\n    return value != null && typeof value == 'object' && !isDate(value) && !isArray(value);\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isFunction(value: any): boolean {\n    return typeof (value) == 'function';\n}\n","\n/**\n * Throws an exception if a condition is false.\n * \n * @param {?} condition Condition expected to be true.\n * @param {?} msg Message of the exception if the condition is not true.\n * @return {?}\n */\nexport function assert(condition: boolean, msg: string) {\n    if (!condition) {\n        throw new Error('** Assertion failed in Wijmo: ' + msg);\n    }\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isNumber(value: any): boolean {\n    return typeof (value) == 'number';\n}\n","import {assert} from './assert';\nimport {isFunction} from '../lang/is-function';\n/**\n * Asserts that a value is a function.\n * \n * @param {?} value Value supposed to be a function.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The function passed in.\n */\nexport function asFunction(value: any, nullOK = true): Function {\n    assert((nullOK && value == null) || isFunction(value), 'Function expected.');\n    return value;\n}\n","import {assert} from './assert';\nimport {isNumber} from '../lang/is-number';\n/**\n * Asserts that a value is a number.\n * \n * @param {?} value Value supposed to be numeric.\n * @param {?=} nullOK Whether null values are acceptable.\n * @param {?=} positive Whether to accept only positive numeric values.\n * @return {?} The number passed in.\n */\nexport function asNumber(value: number, nullOK: boolean = false, positive: boolean = false): number {\n    assert((nullOK && value == null) || isNumber(value), 'Number expected.');\n    if (positive && value && value < 0) {\n        debugger;\n        throw new Error('Positive number expected.');\n    }\n    return value;\n}\n","import {isArray} from '../lang/is-array';\nimport {assert} from '../asserts/assert';\n/**\n * Asserts that a value is an array.\n * \n * @param {?} value Value supposed to be an array.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The array passed in.\n */\nexport function asArray(value: any, nullOK = true): any[] {\n    assert((nullOK && value == null) || isArray(value), 'Array expected.');\n    return value;\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isBoolean(value: any): boolean {\n    return typeof (value) == 'boolean';\n}\n","import {assert} from './assert';\nimport {isBoolean} from '../lang/is-boolean';\n/**\n * Asserts that a value is a Boolean.\n * \n * @param {?} value Value supposed to be Boolean.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The Boolean passed in.\n */\nexport function asBoolean(value: boolean, nullOK = false): boolean {\n    assert((nullOK && value == null) || isBoolean(value), 'Boolean expected.');\n    return value;\n}\n","\n/**\n * Provides binding to complex properties (e.g. 'customer.address.city')\n */\nexport class Binding {\n    _path: string;\n    _parts: any[];\n    _key: string;\n/**\n * Initializes a new instance of a \\@see:Binding object.\n * \n * @param {?} path Name of the property to bind to.\n */\nconstructor(path: string) {\n        this.path = path;\n    }\n/**\n * Gets or sets the path for the binding.\n * \n * In the simplest case, the path is the name of the property of the source\n * object to use for the binding (e.g. 'street').\n * \n * Subproperties of a property can be specified by a syntax similar to that\n * used in JavaScript (e.g. 'address.street').\n * @return {?}\n */\nget path(): string {\n        return this._path;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset path(value: string) {\n        this._path = value;\n        this._parts = value.split('.'); // e.g. 'customer.balance'\n        for (let /** @type {?} */ i = 0; i < this._parts.length; i++) {\n            const /** @type {?} */ part = this._parts[i], /** @type {?} */\n                  ib   = part.indexOf('['); // e.g. 'customer.balance[0]'\n            if (ib > -1) {\n                this._parts[i] = part.substr(0, ib);\n                this._parts.splice(++i, 0, parseInt(part.substr(ib + 1)));\n            }\n        }\n        this._key = this._parts.length == 1 ? this._parts[0] : null;\n    }\n/**\n * Gets the binding value for a given object.\n * \n * If the object does not contain the property specified by the\n * binding \\@see:path, the method returns null.\n * \n * @param {?} object The object that contains the data to be retrieved.\n * @return {?}\n */\ngetValue(object: any): any {\n        if (object) {\n\n            // optimize common case\n            if (this._key) {\n                return object[this._key];\n            }\n\n            // handle case where property name has a decimal point (TFS 139176)\n            if (this._path in object) {\n                return object[this._path];\n            }\n\n            // traverse path for complex properties\n            for (let /** @type {?} */ i = 0; i < this._parts.length && object; i++) {\n                object = object[this._parts[i]];\n            }\n        }\n        return object;\n    }\n/**\n * Sets the binding value on a given object.\n * \n * If the object does not contain the property specified by the\n * binding \\@see:path, the value is not set.\n * \n * @param {?} object The object that contains the data to be set.\n * @param {?} value Data value to set.\n * @return {?}\n */\nsetValue(object: any, value: any) {\n        if (object) {\n\n            // handle simple cases (and cases where the property name has a decimal point)\n            if (this._path in object) {\n                object[this._path] = value;\n                return;\n            }\n\n            // traverse parts for complex properties\n            for (let /** @type {?} */ i = 0; i < this._parts.length - 1; i++) {\n                object = object[this._parts[i]];\n                if (object == null) {\n                    return;\n                }\n            }\n\n            // make the assignment\n            object[this._parts[this._parts.length - 1]] = value;\n        }\n    }\n}\n\nfunction Binding_tsickle_Closure_declarations() {\n/** @type {?} */\nBinding.prototype._path;\n/** @type {?} */\nBinding.prototype._parts;\n/** @type {?} */\nBinding.prototype._key;\n}\n\n","\nexport type Aggregate = number;\nexport let Aggregate: any = {};\nAggregate.None = 0;\nAggregate.Sum = 1;\nAggregate.Cnt = 2;\nAggregate.Avg = 3;\nAggregate.Max = 4;\nAggregate.Min = 5;\nAggregate.Rng = 6;\nAggregate.Std = 7;\nAggregate.Var = 8;\nAggregate.StdPop = 9;\nAggregate.VarPop = 10;\nAggregate[Aggregate.None] = \"None\";\nAggregate[Aggregate.Sum] = \"Sum\";\nAggregate[Aggregate.Cnt] = \"Cnt\";\nAggregate[Aggregate.Avg] = \"Avg\";\nAggregate[Aggregate.Max] = \"Max\";\nAggregate[Aggregate.Min] = \"Min\";\nAggregate[Aggregate.Rng] = \"Rng\";\nAggregate[Aggregate.Std] = \"Std\";\nAggregate[Aggregate.Var] = \"Var\";\nAggregate[Aggregate.StdPop] = \"StdPop\";\nAggregate[Aggregate.VarPop] = \"VarPop\";\n\n","import {Binding} from './Binding';\nimport {Rectangle} from './ui/Rectangle';\nimport {isFunction, isString, asType, contains, asNumber, isBoolean, isNumber} from '../util/util';\nimport {Aggregate} from '../../../enum/Aggregate';\nimport {ICollectionView} from '../../../collections/interface/ICollectionView';\n\n\n\n\n/**\n * Allows callers to verify whether an object implements an interface.\n */\nexport interface IQueryInterface {\n    /**\n     * Returns true if the object implements a given interface.\n     *\n     * @param interfaceName Name of the interface to look for.\n     */\n    implementsInterface(interfaceName: string): boolean;\n}\n/**\n * Casts a value to a type if possible.\n * \n * @param {?} value Value to cast.\n * @param {?} type Type or interface name to cast to.\n * @return {?} The value passed in if the cast was successful, null otherwise.\n */\nexport function tryCast(value: any, type: any): any {\n\n    // null doesn't implement anything\n    if (value == null) {\n        return null;\n    }\n\n    // test for interface implementation (IQueryInterface)\n    if (isString(type)) {\n        return isFunction(value.implementsInterface) && value.implementsInterface(type) ? value : null;\n    }\n\n    // regular type test\n    return value instanceof type ? value : null;\n}\n/**\n * Checks whether an \\@see:ICollectionView is defined and not empty.\n * \n * @param {?} value \\@see:ICollectionView to check.\n * @return {?}\n */\nexport function hasItems(value: ICollectionView) {\n    return value && value.items && value.items.length;\n}\n/**\n * Sets the start and end positions of a selection in a text field.\n * \n * This method is similar to the native \\@see:setSelectionRange method\n * in HTMLInputElement objects, except it checks for conditions that\n * may cause exceptions (element not in the DOM, disabled, or hidden).\n * \n * @param {?} e\n * @param {?} start Offset into the text field for the start of the selection.\n * @param {?=} end Offset into the text field for the end of the selection.\n * @return {?}\n */\nexport function setSelectionRange(e: HTMLInputElement, start: number, end = start) {\n    e = asType(e, HTMLInputElement);\n    if (contains(document.body, e) && !e.disabled && e.style.display != 'none') {\n        try {\n            e.setSelectionRange(asNumber(start), asNumber(end));\n            e.focus(); // needed in Chrome (TFS 124102)\n        } catch ( /** @type {?} */x) { }\n    }\n}\n/**\n * Gets the bounding rectangle of an element in page coordinates.\n * \n * This is similar to the <b>getBoundingClientRect</b> function,\n * except that uses window coordinates, which change when the\n * document scrolls.\n * @param {?} e\n * @return {?}\n */\nexport function getElementRect(e: Element): Rectangle {\n    const /** @type {?} */ rc = e.getBoundingClientRect();\n    return new Rectangle(rc.left + window.pageXOffset, rc.top + window.pageYOffset, rc.width, rc.height);\n}\n/**\n * Calculates an aggregate value from the values in an array.\n * \n * @param {?} aggType Type of aggregate to calculate.\n * @param {?} items Array with the items to aggregate.\n * @param {?=} binding Name of the property to aggregate on (in case the items are not simple values).\n * @return {?}\n */\nexport function getAggregate(aggType: Aggregate, items: any[], binding?: string) {\n    let /** @type {?} */ cnt   = 0, /** @type {?} */\n        cntn  = 0, /** @type {?} */\n        sum   = 0, /** @type {?} */\n        sum2  = 0, /** @type {?} */\n        min   = null, /** @type {?} */\n        max = null;\n    const /** @type {?} */ bnd = binding ? new Binding(binding) : null;\n\n    // calculate aggregate\n    for (let /** @type {?} */ i = 0; i < items.length; i++) {\n\n        // get item/value\n        let /** @type {?} */ val = items[i];\n        if (bnd) {\n            val = bnd.getValue(val);\n            //assert(!isUndefined(val), 'item does not define property \"' + binding + '\".');\n        }\n\n        // aggregate\n        if (val != null) {\n            cnt++;\n            if (min == null || val < min) {\n                min = val;\n            }\n            if (max == null || val > max) {\n                max = val;\n            }\n            if (isNumber(val) && !isNaN(val)) {\n                cntn++;\n                sum += val;\n                sum2 += val * val;\n            } else if (isBoolean(val)) {\n                cntn++;\n                if (val == true) {\n                    sum++;\n                    sum2++;\n                }\n            }\n        }\n    }\n\n    // return result\n    const /** @type {?} */ avg = cntn == 0 ? 0 : sum / cntn;\n    switch (aggType)\n    {\n        case Aggregate.Avg:\n            return avg;\n        case Aggregate.Cnt:\n            return cnt;\n        case Aggregate.Max:\n            return max;\n        case Aggregate.Min:\n            return min;\n        case Aggregate.Rng:\n            return max - min;\n        case Aggregate.Sum:\n            return sum;\n        case Aggregate.VarPop:\n            return cntn <= 1 ? 0 : sum2 / cntn - avg * avg;\n        case Aggregate.StdPop:\n            return cntn <= 1 ? 0 : Math.sqrt(sum2 / cntn - avg * avg);\n        case Aggregate.Var:\n            return cntn <= 1 ? 0 : (sum2 / cntn - avg * avg) * cntn / (cntn - 1);\n        case Aggregate.Std:\n            return cntn <= 1 ? 0 : Math.sqrt((sum2 / cntn - avg * avg) * cntn / (cntn - 1));\n    }\n\n    // should never get here...\n    throw 'Invalid aggregate type.';\n}\n","/*\n * Represents an event handler (private class)\n */\n\nimport {IEventHandler} from './IEventHandler';\nexport class EventHandler {\n    handler: IEventHandler;\n    self: any;\n/**\n * @param {?} handler\n * @param {?} self\n */\nconstructor(handler: IEventHandler, self: any) {\n        this.handler = handler;\n        this.self = self;\n    }\n}\n\nfunction EventHandler_tsickle_Closure_declarations() {\n/** @type {?} */\nEventHandler.prototype.handler;\n/** @type {?} */\nEventHandler.prototype.self;\n}\n","\n/**\n * Base class for event arguments.\n */\nexport class EventArgs {\n/**\n * Provides a value to use with events that do not have event data.\n */\nstatic empty = new EventArgs();\n}\n\nfunction EventArgs_tsickle_Closure_declarations() {\n/**\n * Provides a value to use with events that do not have event data.\n * @type {?}\n */\nEventArgs.empty;\n}\n","\nimport {asFunction} from '../core/index';\nimport {EventHandler} from './EventHandler';\nimport {IEventHandler} from './IEventHandler';\nimport {EventArgs} from '../eventArgs/EventArgs';\n/**\n * Represents an event.\n * \n * Wijmo events are similar to .NET events. Any class may define events by\n * declaring them as fields. Any class may subscribe to events using the\n * event's \\@see:addHandler method and unsubscribe using the \\@see:removeHandler\n * method.\n * \n * Wijmo event handlers take two parameters: <i>sender</i> and <i>args</i>.\n * The first is the object that raised the event, and the second is an object\n * that contains the event parameters.\n * \n * Classes that define events follow the .NET pattern where for every event\n * there is an <i>on[EVENTNAME]</i> method that raises the event. This pattern\n * allows derived classes to override the <i>on[EVENTNAME]</i> method and\n * handle the event before and/or after the base class raises the event.\n * Derived classes may even suppress the event by not calling the base class\n * implementation.\n * \n * For example, the TypeScript code below overrides the <b>onValueChanged</b>\n * event for a control to perform some processing before and after the\n * <b>valueChanged</b> event fires:\n * <pre>\n *   // override base class\n *   onValueChanged(e: EventArgs) {\n *   // execute some code before the event fires\n *   console.log('about to fire valueChanged');\n *   // optionally, call base class to fire the event\n *   super.onValueChanged(e);\n *   // execute some code after the event fired\n *   console.log('valueChanged event just fired');\n * }\n * </pre>\n * @deprecated\n */\nexport class Event {\nprivate _handlers: EventHandler[] = [];\n/**\n * @deprecated\n */\nconstructor(){\n\n    }\n/**\n * Adds a handler to this event.\n * \n * @deprecated\n * @param {?} handler Function invoked when the event is raised.\n * @param {?=} self Object that defines the event handler\n * (accessible as 'this' from the handler code).\n * @return {?}\n */\naddHandler(handler: IEventHandler, self?: any) {\n        asFunction(handler);\n        this._handlers.push(new EventHandler(handler, self));\n    }\n/**\n * Removes a handler from this event.\n * \n * @deprecated\n * @param {?} handler Function invoked when the event is raised.\n * @param {?=} self Object that defines the event handler (accessible as 'this' from the handler code).\n * @return {?}\n */\nremoveHandler(handler: IEventHandler, self?: any) {\n        asFunction(handler);\n        for (let /** @type {?} */ i = 0; i < this._handlers.length; i++) {\n            const /** @type {?} */ l = this._handlers[i];\n            if (l.handler == handler || handler == null) {\n                if (l.self == self || self == null) {\n                    this._handlers.splice(i, 1);\n                    if (handler && self) {\n                        break;\n                    }\n                }\n            }\n        }\n    }\n/**\n * Removes all handlers associated with this event.\n * @deprecated\n * @return {?}\n */\nremoveAllHandlers() {\n        this._handlers.length = 0;\n    }\n/**\n * Raises this event, causing all associated handlers to be invoked.\n * \n * @deprecated use EventEmitter.emit() instead\n * @param {?} sender Source object.\n * @param {?=} args Event parameters.\n * @return {?}\n */\nraise(sender: any, args = EventArgs.empty) {\n        for (let /** @type {?} */ i = 0; i < this._handlers.length; i++) {\n            const /** @type {?} */ l = this._handlers[i];\n            l.handler.call(l.self, sender, args);\n        }\n    }\n/**\n * Gets a value that indicates whether this event has any handlers.\n * @deprecated\n * @return {?}\n */\nget hasHandlers(): boolean {\n        return this._handlers.length > 0;\n    }\n}\n\nfunction Event_tsickle_Closure_declarations() {\n/** @type {?} */\nEvent.prototype._handlers;\n}\n\n","import {EventArgs} from './EventArgs';\n/**\n * Provides arguments for cancellable events.\n */\nexport class CancelEventArgs extends EventArgs {\n/**\n * Gets or sets a value that indicates whether the event should be canceled.\n */\ncancel = false;\n}\n\nfunction CancelEventArgs_tsickle_Closure_declarations() {\n/**\n * Gets or sets a value that indicates whether the event should be canceled.\n * @type {?}\n */\nCancelEventArgs.prototype.cancel;\n}\n\n","\n/**\n * Base class for Array classes with notifications.\n */\nexport class ArrayBase {\n/**\n * Initializes a new instance of an \\@see:ArrayBase.\n */\nconstructor() {\n        this.length = 0;\n        Array.apply(this, arguments);\n    }\n/**\n * @return {?}\n */\npop(): any {\n        return null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\npush(value: any): number {\n        return 0;\n    }\n/**\n * @param {?} index\n * @param {?} count\n * @param {?=} value\n * @return {?}\n */\nsplice(index: number, count: number, value?: any): any[] {\n        return null;\n    }\n/**\n * @param {?} begin\n * @param {?=} end\n * @return {?}\n */\nslice(begin: number, end?: number): any[] {\n        return null;\n    }\n/**\n * @param {?} searchElement\n * @param {?=} fromIndex\n * @return {?}\n */\nindexOf(searchElement: any, fromIndex?: number) {\n        return -1;\n    }\n/**\n * @param {?=} compareFn\n * @return {?}\n */\nsort(compareFn?: Function): any[]{\n        return null;\n    }\n/**\n * @return {?}\n */\nreverse() {\n        return null\n    }\n    length: number;\n}\n\nfunction ArrayBase_tsickle_Closure_declarations() {\n/** @type {?} */\nArrayBase.prototype.length;\n}\n\n\n// inheriting from Array\n// NOTE: set this in declaration rather than in constructor so the\n// the TypeScript inheritance mechanism works correctly with instanceof.\nArrayBase.prototype = Array.prototype;\n","\nexport type NotifyCollectionChangedAction = number;\nexport let NotifyCollectionChangedAction: any = {};\nNotifyCollectionChangedAction.Add = 0;\nNotifyCollectionChangedAction.Remove = 1;\nNotifyCollectionChangedAction.Change = 2;\nNotifyCollectionChangedAction.Reset = 3;\nNotifyCollectionChangedAction.Splice = 4;\nNotifyCollectionChangedAction[NotifyCollectionChangedAction.Add] = \"Add\";\nNotifyCollectionChangedAction[NotifyCollectionChangedAction.Remove] = \"Remove\";\nNotifyCollectionChangedAction[NotifyCollectionChangedAction.Change] = \"Change\";\nNotifyCollectionChangedAction[NotifyCollectionChangedAction.Reset] = \"Reset\";\nNotifyCollectionChangedAction[NotifyCollectionChangedAction.Splice] = \"Splice\";\n\n","import { EventArgs } from '../../eventArgs/EventArgs';\nimport { NotifyCollectionChangedAction } from '../../enum/collections/NotifyCollectionChangedAction';\n/**\n * Provides data for the \\@see:collectionChanged event.\n */\nexport class NotifyCollectionChangedEventArgs extends EventArgs {\n/**\n * Provides a reset notification.\n */\nstatic reset = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Reset);\n/**\n * Initializes a new instance of an {\\@link NotifyCollectionChangedEventArgs}.\n * \n * @param {?} action Type of action that caused the event to fire.\n * @param {?=} index Index of the item.\n * @param {?=} removed Item that was removed.\n * @param {?=} added Item that was added.\n */\nconstructor(public action: NotifyCollectionChangedAction,\npublic index = -1,\npublic removed: any[] = [],\npublic added: any[] = []) {\n        super();\n    }\n}\n\nfunction NotifyCollectionChangedEventArgs_tsickle_Closure_declarations() {\n/**\n * Provides a reset notification.\n * @type {?}\n */\nNotifyCollectionChangedEventArgs.reset;\n/** @type {?} */\nNotifyCollectionChangedEventArgs.prototype.action;\n/** @type {?} */\nNotifyCollectionChangedEventArgs.prototype.index;\n/** @type {?} */\nNotifyCollectionChangedEventArgs.prototype.removed;\n/** @type {?} */\nNotifyCollectionChangedEventArgs.prototype.added;\n}\n\n","import {ArrayBase} from './ArrayBase';\nimport {INotifyCollectionChanged} from '../collections/interface/INotifyCollectionChanged';\nimport {NotifyCollectionChangedAction} from '../enum/collections/NotifyCollectionChangedAction';\nimport {asArray} from '../core/index';\nimport {EventEmitter} from '@angular/core';\nimport {NotifyCollectionChangedEventArgs} from './eventArgs/NotifyCollectionChangedEventArgs';\nexport class ObservableArray extends ArrayBase implements INotifyCollectionChanged {\n/**\n * @param {?=} data\n */\nconstructor(data?: any[]) {\n        super();\n        if (data) {\n            data = asArray(data);\n            this.splice(0, 0, ...data);\n        }\n    }\n/**\n * Appends an item to the array.\n * \n * @param {?} item Item to add to the array.\n * @return {?} The new length of the array.\n */\npush(item: any): number {\n        const /** @type {?} */ rv = super.push(item);\n        this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, rv - 1, [], [item]));\n        return rv;\n    }\n/**\n * @return {?}\n */\npop(): any {\n        const /** @type {?} */ item = super.pop();\n        this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, this.length, [item]));\n        return item;\n    }\n/**\n * Removes and/or adds items to the array.\n * \n * @param {?} index Position where items will be added or removed.\n * @param {?} count Number of items to remove from the array.\n * @param {...?} items Item to add to the array.\n * @return {?} An array containing the removed elements.\n */\nsplice(index: number, count: number, ...items: any[]): any[] {\n        let /** @type {?} */ removed;\n        if (count && items.length > 0) {\n            removed = super.splice(index, count, items);\n            if(count == items.length) {\n                this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Change, index, removed, items));\n            }\n            this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Splice, index, removed, items));\n            return removed;\n        } else if (items.length > 0) {\n            removed = super.splice(index, count, items);\n            this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Add, index, [], items));\n            return removed;\n        }else {\n            removed = super.splice(index, count);\n            this.onCollectionChanged(new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Remove, index, removed, []));\n            return removed;\n        }\n    }\n/**\n * Creates a shallow copy of a portion of an array.\n * \n * @param {?=} begin Position where the copy starts.\n * @param {?=} end Position where the copy ends.\n * @return {?} A shallow copy of a portion of an array.\n */\nslice(begin?: number, end?: number): any[] {\n        return super.slice(begin, end);\n    }\n/**\n * Searches for an item in the array.\n * \n * @param {?} searchElement Element to locate in the array.\n * @param {?=} fromIndex The index where the search should start.\n * @return {?} The index of the item in the array, or -1 if the item was not found.\n */\nindexOf(searchElement: any, fromIndex?: number): number {\n        return super.indexOf(searchElement, fromIndex);\n    }\n/**\n * Sorts the elements of the array in place.\n * \n * @param {?=} compareFn Specifies a function that defines the sort order.\n * If specified, the function should take two arguments and should return\n * -1, +1, or 0 to indicate the first argument is smaller, greater than,\n * or equal to the second argument.\n * If omitted, the elements are sorted in ascending, ASCII character order.\n * @return {?} A copy of the sorted array.\n */\nsort(compareFn?: Function): any[] {\n        const /** @type {?} */ rv = super.sort(compareFn);\n        this.onCollectionChanged();\n        return rv;\n    }\n/**\n * @return {?}\n */\nreverse() {\n        const /** @type {?} */ rv = super.reverse();\n        this.onCollectionChanged();\n        return rv;\n    }\n/**\n * Inserts an item at a specific position in the array.\n * \n * @param {?} index Position where the item will be added.\n * @param {?} item Item to add to the array.\n * @return {?}\n */\ninsert(index: number, item: any) {\n        this.splice(index, 0, item);\n    }\n/**\n * Removes an item from the array.\n * \n * @param {?} item Item to remove.\n * @return {?} True if the item was removed, false if it wasn't found in the array.\n */\nremove(item: any): boolean {\n        const /** @type {?} */ index = this.indexOf(item);\n        if (index > -1) {\n            this.removeAt(index);\n            return true;\n        }\n        return false;\n    }\n/**\n * Removes an item at a specific position in the array.\n * \n * @param {?} index Position of the item to remove.\n * @return {?}\n */\nremoveAt(index: number) {\n        this.splice(index, 1);\n    }\n/**\n * Assigns an item at a specific position in the array.\n * \n * @param {?} index Position where the item will be assigned.\n * @param {?} item Item to assign to the array.\n * @return {?}\n */\nsetAt(index: number, item: any) {\n        this.splice(index, 1, item);\n    }\n/**\n * Removes all items from the array.\n * @return {?}\n */\nclear() {\n        if (this.length !== 0) {\n            this.length = 0; // fastest way to clear an array\n            this.onCollectionChanged();\n        }\n    }\n/**\n * Occurs when the collection changes.\n * fixed\n */\ncollectionChanged = new EventEmitter(true);\n/**\n * Raises the {\\@link collectionChanged} event.\n * \n * @param {?=} e Contains a description of the change.\n * @return {?}\n */\nonCollectionChanged(e = NotifyCollectionChangedEventArgs.reset) {\n        this.collectionChanged.emit(e);\n    }\n}\n\nfunction ObservableArray_tsickle_Closure_declarations() {\n/**\n * Occurs when the collection changes.\n * fixed\n * @type {?}\n */\nObservableArray.prototype.collectionChanged;\n}\n\n","\n/**\n * Represents a base class for types defining grouping conditions.\n * \n * The concrete class which is commonly used for this purpose is\n * \\@see:PropertyGroupDescription.\n */\nexport class GroupDescription {\n/**\n * Returns the group name for the given item.\n * \n * @param {?} item The item to get group name for.\n * @param {?} level The zero-based group level index.\n * @return {?} The name of the group the item belongs to.\n */\npublic groupNameFromItem(item: any, level: number): any {\n        return '';\n    }\n/**\n * Returns a value that indicates whether the group name and the item name\n * match (which implies that the item belongs to the group).\n * \n * @param {?} groupName The name of the group.\n * @param {?} itemName The name of the item.\n * @return {?} True if the names match; otherwise, false.\n */\npublic namesMatch(groupName: any, itemName: any): boolean {\n        return groupName === itemName;\n    }\n}","import {CancelEventArgs} from '../../eventArgs/CancelEventArgs';\n/**\n * Provides data for the \\@see:IPagedCollectionView.pageChanging event\n */\nexport class PageChangingEventArgs extends CancelEventArgs\n{\n/**\n * Gets the index of the page that is about to become current.\n */\nnewPageIndex: number;\n/**\n * Initializes a new instance of a \\@see:PageChangingEventArgs.\n * \n * @param {?} newIndex Index of the page that is about to become current.\n */\nconstructor(newIndex: number) {\n        super();\n        this.newPageIndex = newIndex;\n    }\n}\n\nfunction PageChangingEventArgs_tsickle_Closure_declarations() {\n/**\n * Gets the index of the page that is about to become current.\n * @type {?}\n */\nPageChangingEventArgs.prototype.newPageIndex;\n}\n\n","import {Binding} from '../core/index';\n/**\n * Describes a sorting criterion.\n */\nexport class SortDescription {\n    _bnd: Binding;\n    _asc: boolean;\n/**\n * Initializes a new instance of a \\@see:SortDescription.\n * \n * @param {?} property Name of the property to sort on.\n * @param {?} ascending Whether to sort in ascending order.\n */\nconstructor(property: string, ascending: boolean) {\n        this._bnd = new Binding(property);\n        this._asc = ascending;\n    }\n/**\n * Gets the name of the property used to sort.\n * @return {?}\n */\nget property(): string {\n        return this._bnd.path;\n    }\n/**\n * Gets a value that determines whether to sort the values in ascending order.\n * @return {?}\n */\nget ascending(): boolean {\n        return this._asc;\n    }\n}\n\nfunction SortDescription_tsickle_Closure_declarations() {\n/** @type {?} */\nSortDescription.prototype._bnd;\n/** @type {?} */\nSortDescription.prototype._asc;\n}\n\n","import {GroupDescription} from './GroupDescription';\nimport {CollectionView} from './CollectionView';\nimport {getAggregate,tryCast} from '../core';\nimport {ICollectionView} from './interface/ICollectionView';\nimport {Aggregate} from '../enum/Aggregate';\n/**\n * Represents a group created by a \\@see:CollectionView object based on\n * its \\@see:groupDescriptions property.\n */\nexport class CollectionViewGroup {\n    _gd: GroupDescription;\n    _name: string;\n    _path: string;\n    _level: number;\n    _isBottomLevel: boolean;\n    _groups: CollectionViewGroup[];\n    _items: any[];\n/**\n * Initializes a new instance of a \\@see:CollectionViewGroup.\n * \n * @param {?} groupDescription \\@see:GroupDescription that owns the new group.\n * @param {?} name Name of the new group.\n * @param {?} level Level of the new group.\n * @param {?} isBottomLevel Whether this group has any subgroups.\n */\nconstructor(groupDescription: GroupDescription, name: string, level: number, isBottomLevel: boolean) {\n        this._gd = groupDescription;\n        this._name = name;\n        this._level = level;\n        this._isBottomLevel = isBottomLevel;\n        this._groups = [];\n        this._items = [];\n    }\n/**\n * @return {?}\n */\nget name(): string {\n        return this._name;\n    }\n/**\n * @return {?}\n */\nget level(): number {\n        return this._level;\n    }\n/**\n * @return {?}\n */\nget isBottomLevel(): boolean {\n        return this._isBottomLevel;\n    }\n/**\n * @return {?}\n */\nget items(): any[] {\n        return this._items;\n    }\n/**\n * @return {?}\n */\nget groups(): CollectionViewGroup[] {\n        return this._groups;\n    }\n/**\n * @return {?}\n */\nget groupDescription(): GroupDescription {\n        return this._gd;\n    }\n/**\n * Calculates an aggregate value for the items in this group.\n * \n * @param {?} aggType Type of aggregate to calculate.\n * @param {?} binding Property to aggregate on.\n * @param {?=} view CollectionView that owns this group.\n * @return {?} The aggregate value.\n */\ngetAggregate(aggType: Aggregate, binding: string, view?: ICollectionView) {\n        const /** @type {?} */ cv    = /** @type {?} */(( <CollectionView>tryCast(view, CollectionView))), /** @type {?} */\n              group = cv ? cv._getFullGroup(this) : this;\n        return getAggregate(aggType, group.items, binding);\n    }\n}\n\nfunction CollectionViewGroup_tsickle_Closure_declarations() {\n/** @type {?} */\nCollectionViewGroup.prototype._gd;\n/** @type {?} */\nCollectionViewGroup.prototype._name;\n/** @type {?} */\nCollectionViewGroup.prototype._path;\n/** @type {?} */\nCollectionViewGroup.prototype._level;\n/** @type {?} */\nCollectionViewGroup.prototype._isBottomLevel;\n/** @type {?} */\nCollectionViewGroup.prototype._groups;\n/** @type {?} */\nCollectionViewGroup.prototype._items;\n}\n\n","import {DateTime} from '../core/index';\nimport {Event} from '../event/Event';\nimport {EventArgs} from '../eventArgs/EventArgs';\nimport {CancelEventArgs} from '../eventArgs/CancelEventArgs';\nimport {assert, asFunction, asBoolean, clamp, isPrimitive, tryCast, asArray, asInt} from '../core/index';\nimport {ObservableArray} from './ObservableArray';\nimport {IEditableCollectionView} from '../collections/interface/IEditableCollectionView';\nimport {IPagedCollectionView} from '../collections/interface/IPagedCollectionView';\nimport {INotifyCollectionChanged} from '../collections/interface/INotifyCollectionChanged';\nimport {IPredicate} from '../collections/interface/IPredicate';\nimport {ICollectionView} from '../collections/interface/ICollectionView';\nimport {GroupDescription} from './GroupDescription';\nimport {NotifyCollectionChangedEventArgs} from './eventArgs/NotifyCollectionChangedEventArgs';\nimport {PageChangingEventArgs} from './eventArgs/PageChangingEventArgs';\nimport {SortDescription} from './SortDescription';\nimport {NotifyCollectionChangedAction} from '../enum/collections/NotifyCollectionChangedAction';\nimport {CollectionViewGroup} from './CollectionViewGroup';\nimport {EventEmitter} from '@angular/core';\nimport {$$observable} from 'rxjs/symbol/observable';\nimport {Observable, Subscriber} from 'rxjs/Rx';\n/**\n * Class that implements the \\@see:ICollectionView interface to expose data in\n * regular JavaScript arrays.\n * \n * The \\@see:CollectionView class implements the following interfaces:\n * <ul>\n *   <li>\\@see:ICollectionView: provides current record management,\n *       custom sorting, filtering, and grouping.</li>\n *   <li>\\@see:IEditableCollectionView: provides methods for editing,\n *       adding, and removing items.</li>\n *   <li>\\@see:IPagedCollectionView: provides paging.</li>\n * </ul>\n * \n * To use the \\@see:CollectionView class, start by declaring it and passing a\n * regular array as a data source. Then configure the view using the\n * \\@see:filter, \\@see:sortDescriptions, \\@see:groupDescriptions, and\n * \\@see:pageSize properties. Finally, access the view using the \\@see:items\n * property. For example:\n * \n * <pre>\n *   // create a new CollectionView\n *   var cv = new wijmo.collections.CollectionView(myArray);\n *   // sort items by amount in descending order\n *   var sd = new wijmo.collections.SortDescription('amount', false);\n *   cv.sortDescriptions.push(sd);\n *   // show only items with amounts greater than 100\n *   cv.filter = function(item) { return item.amount > 100 };\n *   // show the sorted, filtered result on the console\n *   for (var i = 0; i &lt; cv.items.length; i++) {\n *     var item = cv.items[i];\n *     console.log(i + ': ' + item.name + ' ' + item.amount);\n *   }\n * </pre>\n * @deprecated\n */\nexport class CollectionView /*extends Observable*/ implements IEditableCollectionView, IPagedCollectionView {\n    _src: any[];\n    _ncc: INotifyCollectionChanged;\n    _view: any[];\n    _pgView: any[];\n    _groups: CollectionViewGroup[];\n    _fullGroups: CollectionViewGroup[];\n    _digest: string;\n    _idx           = -1;\n    _filter: IPredicate;\n    _srtDsc        = new ObservableArray();\n    _grpDesc       = new ObservableArray();\n    _newItem       = null;\n    _edtItem       = null;\n    _edtClone: any;\n    _pgSz          = 0;\n    _pgIdx         = 0;\n    _updating      = 0;\n    _itemCreator: Function;\n    _canFilter     = true;\n    _canGroup      = true;\n    _canSort       = true;\n    _canAddNew     = true;\n    _canCancelEdit = true;\n    _canRemove     = true;\n    _canChangePage = true;\n    _trackChanges  = false;\n    _chgAdded      = new ObservableArray();\n    _chgRemoved    = new ObservableArray();\n    _chgEdited     = new ObservableArray();\n    _srtCvt: Function;\n/**\n * Initializes a new instance of a \\@see:CollectionView.\n * \n * \\@see:CollectionView.\n * @param {?=} sourceCollection Array that serves as a source for this\n */\nconstructor(sourceCollection?: any) {\n\n        // check that sortDescriptions contains SortDescriptions\n        this._srtDsc.collectionChanged.subscribe(() => {\n            const arr = this._srtDsc;\n            for (let i = 0; i < arr.length; i++) {\n                assert(arr[i] instanceof SortDescription, 'sortDescriptions array must contain SortDescription objects.');\n            }\n            if (this.canSort) {\n                this.refresh();\n            }\n        });\n\n        // check that groupDescriptions contains GroupDescriptions\n        this._grpDesc.collectionChanged.subscribe(() => {\n            const arr = this._grpDesc;\n            for (let i = 0; i < arr.length; i++) {\n                assert(arr[i] instanceof GroupDescription, 'groupDescriptions array must contain GroupDescription objects.');\n            }\n            if (this.canGroup) {\n                this.refresh();\n            }\n        });\n\n        // initialize the source collection\n        this.sourceCollection = sourceCollection ? sourceCollection : new ObservableArray();\n    }\n/**\n * Gets or sets a function that creates new items for the collection.\n * \n * If the creator function is not supplied, the \\@see:CollectionView\n * will try to create an uninitilized item of the appropriate type.\n * \n * If the creator function is supplied, it should be a function that\n * takes no parameters and returns an initialized object of the proper\n * type for the collection.\n * @return {?}\n */\nget newItemCreator(): Function {\n        return this._itemCreator;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset newItemCreator(value: Function) {\n        this._itemCreator = asFunction(value);\n    }\n/**\n * Gets or sets a function used to convert values when sorting.\n * \n * If provided, the function should take as parameters a\n * \\@see:SortDescription, a data item, and a value to convert,\n * and should return the converted value.\n * \n * This property provides a way to customize sorting. For example,\n * the \\@see:FlexGrid control uses it to sort mapped columns by\n * display value instead of by raw value.\n * \n * For example, the code below causes a \\@see:CollectionView to\n * sort the 'country' property, which contains country code integers,\n * using the corresponding country names:\n * \n * <pre>var countries = 'US,Germany,UK,Japan,Italy,Greece'.split(',');\n * collectionView.sortConverter = function (sd, item, value) {\n *   if (sd.property == 'countryMapped') {\n *     value = countries[value]; // convert country id into name\n *   }\n *   return value;\n * }</pre>\n * @return {?}\n */\nget sortConverter(): Function {\n        return this._srtCvt;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset sortConverter(value: Function) {\n        if (value != this._srtCvt) {\n            this._srtCvt = asFunction(value, true);\n        }\n    }\n/**\n * Returns true if the caller queries for a supported interface.\n * \n * @param {?} interfaceName Name of the interface to look for.\n * @return {?}\n */\nimplementsInterface(interfaceName: string): boolean {\n        switch (interfaceName) {\n            case 'ICollectionView':\n            case 'IEditableCollectionView':\n            case 'IPagedCollectionView':\n            case 'INotifyCollectionChanged':\n                return true;\n        }\n        return false;\n    }\n/**\n * Gets or sets a value that determines whether the control should\n * track changes to the data.\n * \n * If \\@see:trackChanges is set to true, the \\@see:CollectionView keeps\n * track of changes to the data and exposes them through the\n * \\@see:itemsAdded, \\@see:itemsRemoved, and \\@see:itemsEdited collections.\n * \n * Tracking changes is useful in situations where you need to to update\n * the server after the user has confirmed that the modifications are\n * valid.\n * \n * After committing or cancelling changes, use the \\@see:clearChanges method\n * to clear the \\@see:itemsAdded, \\@see:itemsRemoved, and \\@see:itemsEdited\n * collections.\n * \n * The \\@see:CollectionView only tracks changes made when the proper\n * \\@see:CollectionView methods are used (\\@see:editItem/\\@see:commitEdit,\n * \\@see:addNew/@see:commitNew, and \\@see:remove).\n * Changes made directly to the data are not tracked.\n * @return {?}\n */\nget trackChanges(): boolean {\n        return this._trackChanges;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset trackChanges(value: boolean) {\n        this._trackChanges = asBoolean(value);\n    }\n/**\n * Gets an \\@see:ObservableArray containing the records that were added to\n * the collection since \\@see:changeTracking was enabled.\n * @return {?}\n */\nget itemsAdded(): ObservableArray {\n        return this._chgAdded;\n    }\n/**\n * Gets an \\@see:ObservableArray containing the records that were removed from\n * the collection since \\@see:changeTracking was enabled.\n * @return {?}\n */\nget itemsRemoved(): ObservableArray {\n        return this._chgRemoved;\n    }\n/**\n * Gets an \\@see:ObservableArray containing the records that were edited in\n * the collection since \\@see:changeTracking was enabled.\n * @return {?}\n */\nget itemsEdited(): ObservableArray {\n        return this._chgEdited;\n    }\n/**\n * Clears all changes by removing all items in the \\@see:itemsAdded,\n * \\@see:itemsRemoved, and \\@see:itemsEdited collections.\n * \n * Call this method after committing changes to the server or\n * after refreshing the data from the server.\n * @return {?}\n */\nclearChanges() {\n        this._chgAdded.clear();\n        this._chgRemoved.clear();\n        this._chgEdited.clear();\n    }\n/**\n * Occurs when the collection changes.\n */\ncollectionChanged = new EventEmitter();\n/**\n * Raises the \\@see:collectionChanged event.\n * \n * @param {?=} e Contains a description of the change.\n * @return {?}\n */\nonCollectionChanged(e = NotifyCollectionChangedEventArgs.reset) {\n        this.collectionChanged.emit(e);\n    }\n/**\n * @param {?=} action\n * @param {?=} item\n * @param {?=} index\n * @return {?}\n */\nprivate _raiseCollectionChanged(action = NotifyCollectionChangedAction.Reset, item?: any, index?: number) {\n        //console.log('** collection changed: ' + NotifyCollectionChangedAction[action] + ' **');\n        const /** @type {?} */ e = new NotifyCollectionChangedEventArgs(action, item, [],[]);\n        this.onCollectionChanged(e);\n    }\n/**\n * Gets a value that indicates whether this view supports filtering via the\n * \\@see:filter property.\n * @return {?}\n */\nget canFilter(): boolean {\n        return this._canFilter;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canFilter(value: boolean) {\n        this._canFilter = asBoolean(value);\n    }\n/**\n * Gets a value that indicates whether this view supports grouping via the\n * \\@see:groupDescriptions property.\n * @return {?}\n */\nget canGroup(): boolean {\n        return this._canGroup;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canGroup(value: boolean) {\n        this._canGroup = asBoolean(value);\n    }\n/**\n * Gets a value that indicates whether this view supports sorting via the\n * \\@see:sortDescriptions property.\n * @return {?}\n */\nget canSort(): boolean {\n        return this._canSort;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canSort(value: boolean) {\n        this._canSort = asBoolean(value);\n    }\n/**\n * Gets or sets the current item in the view.\n * @return {?}\n */\nget currentItem(): any {\n        return this._pgView && this._idx > -1 && this._idx < this._pgView.length\n            ? this._pgView[this._idx]\n            : null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset currentItem(value: any) {\n        this.moveCurrentTo(value);\n    }\n/**\n * Gets the ordinal position of the current item in the view.\n * @return {?}\n */\nget currentPosition(): number {\n        return this._idx;\n    }\n/**\n * Gets or sets a callback used to determine if an item is suitable for\n * inclusion in the view.\n * \n * The callback function should return true if the item passed in as a\n * parameter should be included in the view.\n * \n * NOTE: If the filter function needs a scope (i.e. a meaningful 'this'\n * value) remember to set the filter using the 'bind' function to  specify\n * the 'this' object. For example:\n * <pre>\n *   collectionView.filter = this._filter.bind(this);\n * </pre>\n * @return {?}\n */\nget filter(): IPredicate {\n        return this._filter;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset filter(value: IPredicate) {\n        if (this._filter != value) {\n            this._filter = /** @type {?} */(( <IPredicate>asFunction(value)));\n            if (this.canFilter) {\n                this.refresh();\n            }\n        }\n    }\n/**\n * Gets a collection of \\@see:GroupDescription objects that describe how the\n * items in the collection are grouped in the view.\n * @return {?}\n */\nget groupDescriptions(): ObservableArray {\n        return this._grpDesc;\n    }\n/**\n * Gets an array of \\@see:CollectionViewGroup objects that represents the\n * top-level groups.\n * @return {?}\n */\nget groups(): CollectionViewGroup[] {\n        this._groups     = this.canGroup ? this._createGroups(this._view) : null;\n        return this._groups;\n    }\n/**\n * Gets a value that indicates whether this view contains no items.\n * @return {?}\n */\nget isEmpty(): boolean {\n        return this._pgView.length == 0;\n    }\n/**\n * Gets a collection of \\@see:SortDescription objects that describe how the items\n * in the collection are sorted in the view.\n * @return {?}\n */\nget sortDescriptions(): ObservableArray {\n        return this._srtDsc;\n    }\n/**\n * Gets or sets the underlying (unfiltered and unsorted) collection.\n * @return {?}\n */\nget sourceCollection(): any {\n        return this._src;\n    }\n/**\n * @param {?} sourceCollection\n * @return {?}\n */\nset sourceCollection(sourceCollection: any) {\n        if (sourceCollection != this._src) {\n\n            // keep track of current index\n            const /** @type {?} */ index = this.currentPosition;\n\n            // commit pending changes\n            this.commitEdit();\n            this.commitNew();\n\n            // disconnect old source\n            //todo ###remove me###\n            //if (this._ncc != null) {\n            //    this._ncc.collectionChanged.removeHandler(this._sourceChanged);\n            //}\n\n            // connect new source\n            this._src = asArray(sourceCollection, false);\n            this._ncc = /** @type {?} */(( <INotifyCollectionChanged>tryCast(this._src, 'INotifyCollectionChanged')));\n            if (this._ncc) {\n                this._ncc.collectionChanged.subscribe(this._sourceChanged.bind(this));\n            }\n\n            // clear any changes\n            this.clearChanges();\n\n            // refresh view\n            this.refresh();\n\t\t\tconsole.log(\"collection_view_move_current_first\");\n            this.moveCurrentToFirst();\n\n            // if we have no items, notify listeners that the current index changed\n            if (this.currentPosition < 0 && index > -1) {\n                this.onCurrentChanged();\n            }\n        }\n    }\n/**\n * @param {?} s\n * @param {?} e\n * @return {?}\n */\nprivate _sourceChanged(s: INotifyCollectionChanged, e: NotifyCollectionChangedEventArgs) {\n        if (this._updating <= 0) {\n            this.refresh(); // TODO: optimize\n        }\n    }\n/**\n * Returns a value indicating whether a given item belongs to this view.\n * \n * @param {?} item Item to seek.\n * @return {?}\n */\ncontains(item: any): boolean {\n        return this._pgView.indexOf(item) > -1;\n    }\n/**\n * Sets the specified item to be the current item in the view.\n * \n * @param {?} item Item that will become current.\n * @return {?}\n */\nmoveCurrentTo(item: any): boolean {\n        return this.moveCurrentToPosition(this._pgView.indexOf(item));\n    }\n/**\n * Sets the first item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToFirst(): boolean {\n        return this.moveCurrentToPosition(0);\n    }\n/**\n * Sets the last item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToLast(): boolean {\n        return this.moveCurrentToPosition(this._pgView.length - 1);\n    }\n/**\n * Sets the item after the current item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToNext(): boolean {\n        return this.moveCurrentToPosition(this._idx + 1);\n    }\n/**\n * Sets the item at the specified index in the view as the current item.\n * \n * @param {?} index Index of the item that will become current.\n * @return {?}\n */\nmoveCurrentToPosition(index: number): boolean {\n        if (index >= -1 && index < this._pgView.length) {\n            const /** @type {?} */ e = new CancelEventArgs();\n            if (this._idx != index && this.onCurrentChanging(e)) {\n\n                // when moving away from current edit/new item, commit\n                if (this._edtItem && this._pgView[index] != this._edtItem) {\n                    this.commitEdit();\n                }\n                if (this._newItem && this._pgView[index] != this._newItem) {\n                    this.commitNew();\n                }\n\n                // update currency\n                this._idx = index;\n                this.onCurrentChanged();\n            }\n        }\n        return this._idx == index;\n    }\n/**\n * Sets the item before the current item in the view as the current item.\n * @return {?}\n */\nmoveCurrentToPrevious(): boolean {\n        return this.moveCurrentToPosition(this._idx - 1);\n    }\n/**\n * Re-creates the view using the current sort, filter, and group parameters.\n * @return {?}\n */\nrefresh() {\n\n        // not while updating, adding, or editing\n        if (this._updating > 0 || this._newItem || this._edtItem) {\n            return;\n        }\n\n        // perform the refresh\n        this._performRefresh();\n\n        // notify listeners\n        this.onCollectionChanged();\n    }\n/**\n * @return {?}\n */\n_performRefresh() {\n\n        // benchmark\n        //var start = new Date();\n\n        // save current item\n        const /** @type {?} */ current = this.currentItem;\n\n        // create filtered view\n        if (!this._src) {\n            this._view = [];\n        } else if (!this._filter || !this.canFilter) {\n            this._view = (this._srtDsc.length > 0 && this.canSort)\n                ? this._src.slice(0) // clone source array\n                : this._src; // don't waste time cloning\n        } else {\n            this._view = this._performFilter(this._src);\n        }\n\n        // apply sort\n        if (this._srtDsc.length > 0 && this.canSort) {\n            this._performSort(this._view);\n        }\n\n        // apply grouping\n        this._groups     = this.canGroup ? this._createGroups(this._view) : null;\n        this._fullGroups = this._groups;\n        if (this._groups) {\n            this._view = this._mergeGroupItems(this._groups);\n        }\n\n        // apply paging to view\n        this._pgIdx  = clamp(this._pgIdx, 0, this.pageCount - 1);\n        this._pgView = this._getPageView();\n\n        // update groups to take paging into account\n        if (this._groups && this.pageCount > 1) {\n            this._groups = this._createGroups(this._pgView);\n            this._mergeGroupItems(this._groups);\n        }\n\n        // restore current item\n        let /** @type {?} */ index = this._pgView.indexOf(current);\n        if (index < 0) {\n            index = Math.min(this._idx, this._pgView.length - 1);\n        }\n        this._idx = index;\n\n        // save group digest to optimize updates (TFS 109119)\n        this._digest = this._getGroupsDigest(this.groups);\n        // raise currentChanged if needed\n        if (this.currentItem !== current) {\n            this.onCurrentChanged();\n        }\n\n        //var now = new Date();\n        //console.log('refreshed in ' + (now.getTime() - start.getTime()) / 1000 + ' seconds');\n    }\n/**\n * @param {?} items\n * @return {?}\n */\n_performSort(items: any[]) {\n        this._view.sort(this._compareItems());\n    }\n/**\n * @return {?}\n */\n_compareItems() {\n        const /** @type {?} */ srtDsc = this._srtDsc, /** @type {?} */\n              srtCvt = this._srtCvt;\n          var /** @type {?} */    init   = true;\n        return function (a, b) {\n            for (let /** @type {?} */ i = 0; i < srtDsc.length; i++) {\n\n                // get values\n                const /** @type {?} */ sd = /** @type {?} */(( <SortDescription>srtDsc[i]));\n                let /** @type {?} */ v1 = sd._bnd.getValue(a), /** @type {?} */\n                      v2 = sd._bnd.getValue(b);\n\n                // check for NaN (isNaN returns true for NaN but also for non-numbers)\n                if (v1 !== v1) v1 = null;\n                if (v2 !== v2) v2 = null;\n\n                // ignore case when sorting unless the values are strings that only differ in case\n                // (to keep the sort consistent, TFS 131135)\n                if (typeof (v1) === 'string' && typeof (v2) === 'string') {\n                    const /** @type {?} */ lc1 = v1.toLowerCase(), /** @type {?} */\n                          lc2 = v2.toLowerCase();\n                    if (lc1 != lc2) {\n                        v1 = lc1;\n                        v2 = lc2;\n                    }\n                }\n\n                // convert values\n                if (srtCvt) {\n                    v1   = srtCvt(sd, a, v1, init);\n                    v2   = srtCvt(sd, b, v2, false);\n                    init = false;\n                }\n\n                // nulls always at the bottom (like excel)\n                if (v1 != null && v2 == null) return -1;\n                if (v1 == null && v2 != null) return +1;\n\n                // compare the values (at last!)\n                let /** @type {?} */ cmp = (v1 < v2) ? -1 : (v1 > v2) ? +1 : 0;\n                if (cmp != 0) {\n                    return sd.ascending ? +cmp : -cmp;\n                }\n            }\n            return 0;\n        }\n    }\n/**\n * @param {?} items\n * @return {?}\n */\n_performFilter(items: any[]): any[] {\n        return this.canFilter && this._filter\n            ? items.filter(this._filter, this)\n            : items;\n    }\n/**\n * Occurs after the current item changes.\n */\ncurrentChanged = new EventEmitter();\n/**\n * Raises the \\@see:currentChanged event.\n * @param {?=} e\n * @return {?}\n */\nonCurrentChanged(e = EventArgs.empty) {\n        this.currentChanged.emit(e);\n    }\n/**\n * Occurs before the current item changes.\n */\ncurrentChanging = new EventEmitter();\n/**\n * Raises the \\@see:currentChanging event.\n * \n * @param {?} e \\@see:CancelEventArgs that contains the event data.\n * @return {?}\n */\nonCurrentChanging(e: CancelEventArgs): boolean {\n        this.currentChanging.emit(e);\n        return !e.cancel;\n    }\n/**\n * Gets items in the view.\n * @return {?}\n */\nget items(): any[] {\n        return this._pgView;\n    }\n/**\n * Suspend refreshes until the next call to \\@see:endUpdate.\n * @return {?}\n */\nbeginUpdate() {\n        this._updating++;\n    }\n/**\n * Resume refreshes suspended by a call to \\@see:beginUpdate.\n * @return {?}\n */\nendUpdate() {\n        this._updating--;\n        if (this._updating <= 0) {\n            this.refresh();\n        }\n    }\n/**\n * Gets a value that indicates whether notifications are currently suspended\n * (see \\@see:beginUpdate and \\@see:endUpdate).\n * @return {?}\n */\nget isUpdating() {\n        return this._updating > 0;\n    }\n/**\n * Executes a function within a \\@see:beginUpdate/\\@see:endUpdate block.\n * \n * The collection will not be refreshed until the function finishes.\n * This method ensures \\@see:endUpdate is called even if the function throws.\n * \n * @param {?} fn Function to be executed without updates.\n * @return {?}\n */\ndeferUpdate(fn: Function) {\n        try {\n            this.beginUpdate();\n            fn();\n        } finally {\n            this.endUpdate();\n        }\n    }\n/**\n * Gets a value that indicates whether a new item can be added to the collection.\n * @return {?}\n */\nget canAddNew(): boolean {\n        return this._canAddNew;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canAddNew(value: boolean) {\n        this._canAddNew = asBoolean(value);\n    }\n/**\n * Gets a value that indicates whether the collection view can discard pending changes\n * and restore the original values of an edited object.\n * @return {?}\n */\nget canCancelEdit(): boolean {\n        return this._canCancelEdit;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canCancelEdit(value: boolean) {\n        this._canCancelEdit = asBoolean(value);\n    }\n/**\n * Gets a value that indicates whether items can be removed from the collection.\n * @return {?}\n */\nget canRemove(): boolean {\n        return this._canRemove;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canRemove(value: boolean) {\n        this._canRemove = asBoolean(value);\n    }\n/**\n * Gets the item that is being added during the current add transaction.\n * @return {?}\n */\nget currentAddItem(): any {\n        return this._newItem;\n    }\n/**\n * Gets the item that is being edited during the current edit transaction.\n * @return {?}\n */\nget currentEditItem(): any {\n        return this._edtItem;\n    }\n/**\n * Gets a value that indicates whether an add transaction is in progress.\n * @return {?}\n */\nget isAddingNew(): boolean {\n        return this._newItem != null;\n    }\n/**\n * Gets a value that indicates whether an edit transaction is in progress.\n * @return {?}\n */\nget isEditingItem(): boolean {\n        return this._edtItem != null;\n    }\n/**\n * Creates a new item and adds it to the collection.\n * \n * This method takes no parameters. It creates a new item, adds it to the\n * collection, and prevents refresh operations until the new item is\n * committed using the \\@see:commitNew method or canceled using the\n * \\@see:cancelNew method.\n * \n * The code below shows how the \\@see:addNew method is typically used:\n * \n * <pre>\n * // create the new item, add it to the collection\n * var newItem = view.addNew();\n * // initialize the new item\n * newItem.id = getFreshId();\n * newItem.name = 'New Customer';\n * // commit the new item so the view can be refreshed\n * view.commitNew();\n * </pre>\n * \n * You can also add new items by pushing them into the \\@see:sourceCollection\n * and then calling the \\@see:refresh method. The main advantage of \\@see:addNew\n * is in user-interactive scenarios (like adding new items in a data grid),\n * because it gives users the ability to cancel the add operation. It also\n * prevents the new item from being sorted or filtered out of view until the\n * add operation is committed.\n * \n * @return {?} The item that was added to the collection.\n */\naddNew(): any {\n\n        // sanity\n        if (arguments.length > 0) {\n            assert(false, 'addNew does not take any parameters, it creates the new items.');\n        }\n\n        // commit pending changes\n        this.commitEdit();\n        this.commitNew();\n\n        // honor canAddNew\n        if (!this.canAddNew) {\n            assert(false, 'cannot add items (canAddNew == false).');\n            return null;\n        }\n\n        // create new item\n        let /** @type {?} */ item = null;\n        if (this.newItemCreator) {\n            item = this.newItemCreator();\n        } else if (this.sourceCollection && this.sourceCollection.length) {\n            item = this.sourceCollection[0].constructor();\n        } else {\n            item = {};\n        }\n\n        if (item != null) {\n\n            // remember the new item\n            this._newItem = item;\n\n            // add the new item to the collection\n            this._updating++;\n            this._src.push(item); // **\n            this._updating--;\n\n            // add the new item to the bottom of the current view\n            if (this._pgView != this._src) {\n                this._pgView.push(item);\n            }\n\n            // add the new item to the last group and to the data items\n            if (this.groups && this.groups.length) {\n                let /** @type {?} */ g = this.groups[this.groups.length - 1];\n                g.items.push(item);\n                while (g.groups && g.groups.length) {\n                    g = g.groups[g.groups.length - 1];\n                    g.items.push(item);\n                }\n            }\n\n            // notify listeners\n            this._raiseCollectionChanged(NotifyCollectionChangedAction.Add, item, this._pgView.length - 1);\n\n            // select the new item\n            this.moveCurrentTo(item);\n        }\n\n        // done\n        return this._newItem;\n    }\n/**\n * Ends the current edit transaction and, if possible,\n * restores the original value to the item.\n * @return {?}\n */\ncancelEdit() {\n        const /** @type {?} */ item = this._edtItem;\n        if (item != null) {\n            this._edtItem = null;\n\n            // honor canCancelEdit\n            if (!this.canCancelEdit) {\n                assert(false, 'cannot cancel edits (canCancelEdit == false).');\n                return;\n            }\n\n            // check that we can do this (TFS 110168)\n            const /** @type {?} */ index = this._src.indexOf(item);\n            if (index < 0 || !this._edtClone) {\n                return;\n            }\n\n            // restore original item value\n            this._extend(this._src[index], this._edtClone);\n            this._edtClone = null;\n\n            // notify listeners\n            this._raiseCollectionChanged(NotifyCollectionChangedAction.Change, item, index);\n        }\n    }\n/**\n * Ends the current add transaction and discards the pending new item.\n * @return {?}\n */\ncancelNew() {\n        const /** @type {?} */ item = this._newItem;\n        if (item != null) {\n            this.remove(item);\n        }\n    }\n/**\n * Ends the current edit transaction and saves the pending changes.\n * @return {?}\n */\ncommitEdit() {\n\t\tconsole.log(\"collection_view_commit_edit_start\");\n        const /** @type {?} */ item = this._edtItem;\n        if (item != null) {\n\n            // check if anything really changed\n            let /** @type {?} */ sameContent = this._sameContent(item, this._edtClone);\n\n            // clean up state\n            this._edtItem  = null;\n            this._edtClone = null;\n\n            // refresh to update the edited item\n            const /** @type {?} */ index = this._pgView.indexOf(item);\n            const /** @type {?} */ digest = this._digest;\n            this._performRefresh();\n\n            // track changes (before notifying)\n            if (this._trackChanges == true && !sameContent) {\n                this._trackItemChanged(item);\n            }\n\n            // notify (single item change or full refresh)\n            if (this._pgView.indexOf(item) == index && digest == this._digest) {\n                this._raiseCollectionChanged(NotifyCollectionChangedAction.Change, item, index);\n            } else {\n                this._raiseCollectionChanged(); // full refresh\n            }\n        }\n\t\tconsole.log(\"collection_view_commit_edit_finish\");\n    }\n/**\n * Track changes applied to an item (not necessarily the current edit item).\n * \n * @param {?} item Item that has been changed.\n * @return {?}\n */\n_trackItemChanged(item: any) {\n        if (this._trackChanges) {\n            let /** @type {?} */ idx = this._chgEdited.indexOf(item);\n            if (idx < 0 && this._chgAdded.indexOf(item) < 0) { // add item to changed list\n                this._chgEdited.push(item);\n            } else if (idx > -1) { // item already on changed list, notify of change\n                var /** @type {?} */ e = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Change, item, [],[]);\n                this._chgEdited.onCollectionChanged(e);\n            } else { // item on added list, notify of change\n                idx = this._chgAdded.indexOf(item);\n                if (idx > -1) {\n                    var /** @type {?} */ e = new NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction.Change, item, [],[]);\n                    this._chgAdded.onCollectionChanged(e);\n                }\n            }\n        }\n    }\n/**\n * Ends the current add transaction and saves the pending new item.\n * @return {?}\n */\ncommitNew() {\n        const /** @type {?} */ item = this._newItem;\n        if (item != null) {\n\n            // clean up state\n            this._newItem = null;\n\n            // refresh to update the new item\n            const /** @type {?} */ index = this._pgView.indexOf(item);\n            const /** @type {?} */ digest = this._digest;\n            this._performRefresh();\n\n            // track changes (before notifying)\n            if (this._trackChanges == true) {\n                const /** @type {?} */ idx = this._chgEdited.indexOf(item);\n                if (idx > -1) { // remove from changed if it's there\n                    this._chgEdited.removeAt(idx);\n                }\n                if (this._chgAdded.indexOf(item) < 0) { // add to added if not there\n                    this._chgAdded.push(item);\n                }\n            }\n\n            // notify (full refresh if the item moved)\n            if (this._pgView.indexOf(item) == index && digest == this._digest) {\n                this._raiseCollectionChanged(NotifyCollectionChangedAction.Change, item, index);\n            } else {\n                this._raiseCollectionChanged(); // full refresh\n            }\n        }\n    }\n/**\n * Begins an edit transaction of the specified item.\n * \n * @param {?} item Item to be edited.\n * @return {?}\n */\neditItem(item: any) {\n\n        // commit pending changes if not already editing/adding this item\n        if (item != this._edtItem && this.moveCurrentTo(item)) {\n            this.commitEdit();\n            this._edtItem  = item;\n            this._edtClone = {};\n            this._extend(this._edtClone, this._edtItem);\n        }\n    }\n/**\n * Removes the specified item from the collection.\n * \n * @param {?} item Item to be removed from the collection.\n * @return {?}\n */\nremove(item: any) {\n\t\tconsole.log(\"collection_view_remove_start\");\n\t\tconsole.log(\"collection_view_src:\"+this._src.length);\n\t\tconsole.log(\"collection_view_pgView:\"+this._pgView.length);\n\t\tconsole.log(\"collection_view_view:\"+this._view.length);\n        // handle cases where the user is adding or editing items\n        let /** @type {?} */ pendingNew = (item == this._newItem);\n        if (pendingNew) {\n            this._newItem = null;\n        }\n        if (item == this._edtItem) {\n            this.cancelEdit();\n        }\n\n        // honor canRemove\n        if (!this.canRemove) {\n            assert(false, 'cannot remove items (canRemove == false).');\n            return;\n        }\n\n        // find item\n        const /** @type {?} */ index = this._src.indexOf(item);\n        if (index > -1) {\n\n            // get current item to notify later\n            const /** @type {?} */ current = this.currentItem;\n\n            // remove item from source collection\n            this._updating++;\n            this._src.splice(index, 1); // **\n            this._updating--;\n\n            // refresh to update the edited item\n            //var index = this._pgView.indexOf(item);\n            const /** @type {?} */ digest = this._digest;\n            this._performRefresh();\n\n            // track changes (before notifying)\n            if (this._trackChanges == true) {\n\n                // removing something that was added\n                const /** @type {?} */ idxAdded = this._chgAdded.indexOf(item);\n                if (idxAdded > -1) {\n                    this._chgAdded.removeAt(idxAdded);\n                }\n\n                // removing something that was edited\n                const /** @type {?} */ idxEdited = this._chgEdited.indexOf(item);\n                if (idxEdited > -1) {\n                    this._chgEdited.removeAt(idxEdited);\n                }\n\n                // add to removed list unless it was pending and not added in this session\n                const /** @type {?} */ idxRemoved = this._chgRemoved.indexOf(item);\n                if (idxRemoved < 0 && !pendingNew && idxAdded < 0) {\n                    this._chgRemoved.push(item);\n                }\n            }\n\n            // notify (item removed or full refresh) (TFS 85001)\n            const /** @type {?} */ paged = this.pageSize > 0 && this._pgIdx > -1;\n            if (paged || digest != this._getGroupsDigest(this.groups)) {\n\t\t\t\tconsole.log(\"collection_view_before_raiseCollectionChanged_1\");\n                this._raiseCollectionChanged();\n            } else {\n\t\t\t\tconsole.log(\"collection_view_before_raiseCollectionChanged_2\");\n                this._raiseCollectionChanged(NotifyCollectionChangedAction.Remove, item, index);\n            }\n\n            // raise currentChanged if needed\n            if (this.currentItem !== current) {\n\t\t\t\tconsole.log(\"collection_view_before_on_current_changed_3\");\n                this.onCurrentChanged();\n            }\n        }\n\t\tconsole.log(\"collection_view_pgView:\"+this._pgView.length);\n\t\tconsole.log(\"collection_view_view:\"+this._view.length);\n\t\tconsole.log(\"collection_view_src:\"+this._src.length);\n\t\tconsole.log(\"collection_view_remove_finish\");\n    }\n/**\n * Removes the item at the specified index from the collection.\n * \n * @param {?} index Index of the item to be removed from the collection.\n * The index is relative to the view, not to the source collection.\n * @return {?}\n */\nremoveAt(index: number) {\t\t\n        index = asInt(index);        \n\t\tthis.remove(this._pgView[index]);\t\t\n    }\n/**\n * @param {?} dst\n * @param {?} src\n * @return {?}\n */\n_extend(dst: any, src: any) {\n        for (let /** @type {?} */ key in src) {\n            dst[key] = src[key];\n        }\n    }\n/**\n * @param {?} dst\n * @param {?} src\n * @return {?}\n */\n_sameContent(dst: any, src: any) {\n        for (var /** @type {?} */ key in src) {\n            if (!this._sameValue(dst[key], src[key])) {\n                return false;\n            }\n        }\n        for (var /** @type {?} */ key in dst) {\n            if (!this._sameValue(dst[key], src[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n/**\n * @param {?} v1\n * @param {?} v2\n * @return {?}\n */\n_sameValue(v1: any, v2: any) {\n        return v1 == v2 || DateTime.equals(v1, v2);\n    }\n/**\n * Gets a value that indicates whether the \\@see:pageIndex value can change.\n * @return {?}\n */\nget canChangePage(): boolean {\n        return this._canChangePage;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset canChangePage(value: boolean) {\n        this._canChangePage = asBoolean(value);\n    }\n/**\n * Gets a value that indicates whether the page index is changing.\n * @return {?}\n */\nget isPageChanging(): boolean {\n        return false;\n    }\n/**\n * Gets the total number of items in the view taking paging into account.\n * @return {?}\n */\nget itemCount(): number {\n        return this._pgView.length;\n    }\n/**\n * Gets the zero-based index of the current page.\n * @return {?}\n */\nget pageIndex(): number {\n        return this._pgIdx;\n    }\n/**\n * Gets or sets the number of items to display on a page.\n * @return {?}\n */\nget pageSize(): number {\n        return this._pgSz;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset pageSize(value: number) {\n        if (value != this._pgSz) {\n            this._pgSz = asInt(value);\n            this.refresh();\n        }\n    }\n/**\n * Gets the total number of items in the view before paging is applied.\n * @return {?}\n */\nget totalItemCount(): number {\n        return this._view.length;\n    }\n/**\n * Gets the total number of pages.\n * @return {?}\n */\nget pageCount(): number {\n        return this.pageSize ? Math.ceil(this.totalItemCount / this.pageSize) : 1;\n    }\n/**\n * Sets the first page as the current page.\n * \n * @return {?} True if the page index was changed successfully.\n */\nmoveToFirstPage(): boolean {\n        return this.moveToPage(0);\n    }\n/**\n * Sets the last page as the current page.\n * \n * @return {?} True if the page index was changed successfully.\n */\nmoveToLastPage(): boolean {\n        return this.moveToPage(this.pageCount - 1);\n    }\n/**\n * Moves to the page after the current page.\n * \n * @return {?} True if the page index was changed successfully.\n */\nmoveToNextPage(): boolean {\n        return this.moveToPage(this.pageIndex + 1);\n    }\n/**\n * Moves to the page at the specified index.\n * \n * @param {?} index Index of the page to move to.\n * @return {?} True if the page index was changed successfully.\n */\nmoveToPage(index: number): boolean {\n        const /** @type {?} */ newIndex = clamp(index, 0, this.pageCount - 1);\n        if (newIndex != this._pgIdx) {\n\n            // honor canChangePage\n            if (!this.canChangePage) {\n                assert(false, 'cannot change pages (canChangePage == false).');\n            }\n\n            // raise pageChanging\n            const /** @type {?} */ e = new PageChangingEventArgs(newIndex);\n            if (this.onPageChanging(e)) {\n\n                // change the page\n                this._pgIdx  = newIndex;\n                this._pgView = this._getPageView();\n                this._idx    = 0;\n\n                // raise pageChanged and collectionChanged, or refresh if grouping\n                if (!this.groupDescriptions || this.groupDescriptions.length == 0) {\n                    this.onPageChanged();\n                    this.onCollectionChanged();\n                } else {\n                    this.refresh();\n                }\n            }\n        }\n        return this._pgIdx == index;\n    }\n/**\n * Moves to the page before the current page.\n * \n * @return {?} True if the page index was changed successfully.\n */\nmoveToPreviousPage(): boolean {\n        return this.moveToPage(this.pageIndex - 1);\n    }\n/**\n * Occurs after the page index changes.\n */\npageChanged = new Event();\n/**\n * Raises the \\@see:pageChanged event.\n * @param {?=} e\n * @return {?}\n */\nonPageChanged(e = EventArgs.empty) {\n        this.pageChanged.raise(this, e);\n    }\n/**\n * Occurs before the page index changes.\n */\npageChanging = new Event();\n/**\n * Raises the \\@see:pageChanging event.\n * \n * @param {?} e \\@see:PageChangingEventArgs that contains the event data.\n * @return {?}\n */\nonPageChanging(e: PageChangingEventArgs): boolean {\n        this.pageChanging.raise(this, e);\n        return !e.cancel;\n    }\n/**\n * @param {?} g\n * @return {?}\n */\n_getFullGroup(g: CollectionViewGroup): CollectionViewGroup {\n\n        // look for the group by level and name\n        // this gets the full (unpaged) and updated group (TFS 109119)\n        const /** @type {?} */ fg = this._getGroupByPath(this._fullGroups, g.level, g._path);\n        if (fg != null) {\n            g = fg;\n        }\n\n        // return the group\n        return g;\n    }\n/**\n * @param {?} groups\n * @param {?} level\n * @param {?} path\n * @return {?}\n */\n_getGroupByPath(groups: CollectionViewGroup[], level: number, path: string) {\n        for (let /** @type {?} */ i = 0; i < groups.length; i++) {\n            let /** @type {?} */ g = groups[i];\n            if (g.level == level && g._path == path) {\n                return g;\n            }\n            if (g.level < level && g._path.indexOf(path) == 0) {\n                g = this._getGroupByPath(g.items, level, path);\n                if (g != null) {\n                    return g;\n                }\n            }\n        }\n        return null;\n    }\n/**\n * @return {?}\n */\n_getPageView() {\n\n        // not paging? return the whole view\n        if (this.pageSize <= 0 || this._pgIdx < 0) {\n            return this._view;\n        }\n\n        // slice the current page out of the view\n        const /** @type {?} */ start = this._pgSz * this._pgIdx, /** @type {?} */\n              end   = Math.min(start + this._pgSz, this._view.length);\n        return this._view.slice(start, end);\n    }\n/**\n * @param {?} items\n * @return {?}\n */\n_createGroups(items: any[]): CollectionViewGroup[] {\n\n        // not grouping? return null\n        if (!this._grpDesc || !this._grpDesc.length) {\n            return null;\n        }\n\n        // build group tree\n        const /** @type {?} */ root: CollectionViewGroup[] = [], /** @type {?} */\n              maps                        = {};\n        let /** @type {?} */ map                           = null;\n        for (let /** @type {?} */ i = 0; i < items.length; i++) {\n\n            // get the item\n            const /** @type {?} */ item   = items[i];\n            let /** @type {?} */ groups   = root;\n            const /** @type {?} */ levels = this._grpDesc.length;\n\n            // add this item to the tree\n            let /** @type {?} */ path = '';\n            for (let /** @type {?} */ level = 0; level < levels; level++) {\n\n                // get the group name for this level\n                const /** @type {?} */ gd   = this._grpDesc[level], /** @type {?} */\n                      name = gd.groupNameFromItem(item, level), /** @type {?} */\n                      last = level == levels - 1;\n\n                // get the group map for this level (optimization)\n                map = maps[path];\n                if (!map && isPrimitive(name)) {\n                    map        = {};\n                    maps[path] = map;\n                }\n\n                // get or create the group\n                const /** @type {?} */ group = this._getGroup(gd, groups, map, name, level, last);\n\n                // keep group path (all names in the hierarchy)\n                path += '/' + name;\n                group._path = path;\n\n                // add data items to last level groups\n                if (last) {\n                    group.items.push(item);\n                }\n\n                // move on to the next group\n                groups = group.groups;\n            }\n        }\n\n        // done\n        return root;\n    }\n/**\n * @param {?} groups\n * @return {?}\n */\nprivate _getGroupsDigest(groups): string {\n        let /** @type {?} */ digest = '';\n        for (let /** @type {?} */ i = 0; groups != null && i < groups.length; i++) {\n            const /** @type {?} */ g = groups[i];\n            digest += '{' + g.name + ':' + (g.items ? g.items.length : '*');\n            if (g.groups.length > 0) {\n                digest += ',';\n                digest += this._getGroupsDigest(g.groups);\n            }\n            digest += '}';\n        }\n        return digest;\n    }\n/**\n * @param {?} groups\n * @return {?}\n */\nprivate _mergeGroupItems(groups: CollectionViewGroup[]): any[] {\n        const /** @type {?} */ items = [];\n        for (let /** @type {?} */ i = 0; i < groups.length; i++) {\n            const /** @type {?} */ g = groups[i];\n            if (!g._isBottomLevel) {\n                const /** @type {?} */ groupItems = this._mergeGroupItems(g.groups);\n                g._items.push.apply(g._items, groupItems);\n            }\n            items.push.apply(items, g._items);\n        }\n        return items;\n    }\n/**\n * @param {?} gd\n * @param {?} groups\n * @param {?} map\n * @param {?} name\n * @param {?} level\n * @param {?} isBottomLevel\n * @return {?}\n */\nprivate _getGroup(gd: GroupDescription, groups: CollectionViewGroup[], map: any, name: string, level: number, isBottomLevel: boolean): CollectionViewGroup {\n        let /** @type {?} */ g: CollectionViewGroup;\n\n        // find existing group\n        if (map && isPrimitive(name)) {\n            g = map[name];\n            if (g) {\n                return g;\n            }\n        } else {\n            for (let /** @type {?} */ i = 0; i < groups.length; i++) {\n                if (gd.namesMatch(groups[i].name, name)) {\n                    return groups[i];\n                }\n            }\n        }\n\n        // not found, create now\n        const /** @type {?} */ group = new CollectionViewGroup(gd, name, level, isBottomLevel);\n        groups.push(group);\n\n        // add group to map\n        if (map) {\n            map[name] = group;\n        }\n\n        // done\n        return group;\n    }\n/**\n * @return {?}\n */\npublic completeAllStream() {\n        this.currentChanged.complete();\n        this.collectionChanged.complete();\n    }\n/**\n * @return {?}\n */\n[$$observable] () {\n        return this;\n    }\n/**\n * @param {?} subscriber\n * @return {?}\n */\npublic _subscribe(subscriber: Subscriber<any>) {\n        subscriber.next(this.items);\n        subscriber.complete();\n    }\n}\n\nfunction CollectionView_tsickle_Closure_declarations() {\n/** @type {?} */\nCollectionView.prototype._src;\n/** @type {?} */\nCollectionView.prototype._ncc;\n/** @type {?} */\nCollectionView.prototype._view;\n/** @type {?} */\nCollectionView.prototype._pgView;\n/** @type {?} */\nCollectionView.prototype._groups;\n/** @type {?} */\nCollectionView.prototype._fullGroups;\n/** @type {?} */\nCollectionView.prototype._digest;\n/** @type {?} */\nCollectionView.prototype._idx;\n/** @type {?} */\nCollectionView.prototype._filter;\n/** @type {?} */\nCollectionView.prototype._srtDsc;\n/** @type {?} */\nCollectionView.prototype._grpDesc;\n/** @type {?} */\nCollectionView.prototype._newItem;\n/** @type {?} */\nCollectionView.prototype._edtItem;\n/** @type {?} */\nCollectionView.prototype._edtClone;\n/** @type {?} */\nCollectionView.prototype._pgSz;\n/** @type {?} */\nCollectionView.prototype._pgIdx;\n/** @type {?} */\nCollectionView.prototype._updating;\n/** @type {?} */\nCollectionView.prototype._itemCreator;\n/** @type {?} */\nCollectionView.prototype._canFilter;\n/** @type {?} */\nCollectionView.prototype._canGroup;\n/** @type {?} */\nCollectionView.prototype._canSort;\n/** @type {?} */\nCollectionView.prototype._canAddNew;\n/** @type {?} */\nCollectionView.prototype._canCancelEdit;\n/** @type {?} */\nCollectionView.prototype._canRemove;\n/** @type {?} */\nCollectionView.prototype._canChangePage;\n/** @type {?} */\nCollectionView.prototype._trackChanges;\n/** @type {?} */\nCollectionView.prototype._chgAdded;\n/** @type {?} */\nCollectionView.prototype._chgRemoved;\n/** @type {?} */\nCollectionView.prototype._chgEdited;\n/** @type {?} */\nCollectionView.prototype._srtCvt;\n/**\n * Occurs when the collection changes.\n * @type {?}\n */\nCollectionView.prototype.collectionChanged;\n/**\n * Occurs after the current item changes.\n * @type {?}\n */\nCollectionView.prototype.currentChanged;\n/**\n * Occurs before the current item changes.\n * @type {?}\n */\nCollectionView.prototype.currentChanging;\n/**\n * Occurs after the page index changes.\n * @type {?}\n */\nCollectionView.prototype.pageChanged;\n/**\n * Occurs before the page index changes.\n * @type {?}\n */\nCollectionView.prototype.pageChanging;\n}\n\n","import {assert} from './assert';\nimport {isInt} from '../lang/is-int';\n/**\n * Asserts that a value is an integer.\n * \n * @param {?} value Value supposed to be an integer.\n * @param {?=} nullOK Whether null values are acceptable.\n * @param {?=} positive Whether to accept only positive integers.\n * @return {?} The number passed in.\n */\nexport function asInt(value: number, nullOK = false, positive = false): number {\n    assert((nullOK && value == null) || isInt(value), 'Integer expected.');\n    if (positive && value && value < 0) throw 'Positive integer expected.';\n    return value;\n}\n","import {isNumber} from './is-number';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isInt(value: any): boolean {\n    return isNumber(value) && value == Math.round(value);\n}\n","\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isString(value: any): boolean {\n    return typeof (value) == 'string';\n}\n","import {assert} from './assert';\nimport {isString} from '../lang/is-string';\n/**\n * Asserts that a value is a string.\n * \n * @param {?} value Value supposed to be a string.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The string passed in.\n */\nexport function asString(value: string, nullOK = true): string {\n    assert((nullOK && value == null) || isString(value), 'String expected.');\n    return value;\n}\n","import {tryCast} from '../../common/Global';\nimport {assert} from './assert';\n/**\n * Asserts that a value is an instance of a given type.\n * \n * @param {?} value Value to be checked.\n * @param {?} type Type of value expected.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The value passed in.\n */\nexport function asType(value: any, type: any, nullOK = false): any {\n    value = tryCast(value, type);\n    assert(nullOK || value != null, type + ' expected.');\n    return value;\n}\n","\n/**\n * Checks whether an element has a class.\n * \n * @param {?} e Element to check.\n * @param {?} className Class to check for.\n * @return {?}\n */\nexport function hasClass(e: HTMLElement, className: string): boolean {\n    // note: using e.getAttribute('class') instead of e.classNames\n    // so this works with SVG as well as regular HTML elements.\n    if (e && e.getAttribute) {\n        const /** @type {?} */ rx = new RegExp('\\\\b' + className + '\\\\b');\n        return e && rx.test(e.getAttribute('class'));\n    }\n    return false;\n}\n","import {hasClass} from './has-class';\n/**\n * Adds a class to an element.\n * \n * @param {?} e Element that will have the class added.\n * @param {?} className Class to add to the element.\n * @return {?}\n */\nexport function addClass(e: HTMLElement, className: string) {\n    // note: using e.getAttribute('class') instead of e.classNames\n    // so this works with SVG as well as regular HTML elements.\n    if (e && e.setAttribute && !hasClass(e, className)) {\n        const /** @type {?} */ cn = e.getAttribute('class');\n        e.setAttribute('class', cn ? cn + ' ' + className : className);\n    }\n}\n","\n/**\n * Checks whether an HTML element contains another.\n * \n * @param {?} parent Parent element.\n * @param {?} child Child element.\n * @return {?} True if the parent element contains the child element.\n */\nexport function contains(parent: any, child: any): boolean {\n    for (let /** @type {?} */ e = /** @type {?} */(( <Node>child)); e; e = e.parentNode) {\n        if (e === parent) return true;\n    }\n    return false;\n}\n/**\n * @param {?} e\n * @return {?}\n */\nexport function containsFocus(e:HTMLElement):boolean{\n  return contains(e, document.activeElement);\n}\n","import {removeClass} from './remove-class';\nimport {addClass} from './add-class';\n/**\n * Adds or removes a class to or from an element.\n * \n * @param {?} e Element that will have the class added.\n * @param {?} className Class to add or remove.\n * @param {?} addOrRemove Whether to add or remove the class.\n * Use true to add class to element and false to remove class from element.\n * @return {?}\n */\nexport function toggleClass(e: HTMLElement, className: string, addOrRemove: boolean) {\n    if (addOrRemove) {\n        addClass(e, className);\n    } else {\n        removeClass(e, className);\n    }\n}\n","import {hasClass} from './has-class';\n/**\n * Removes a class from an element.\n * \n * @param {?} e Element that will have the class removed.\n * @param {?} className Class to remove form the element.\n * @return {?}\n */\nexport function removeClass(e: HTMLElement, className: string) {\n    // note: using e.getAttribute('class') instead of e.classNames\n    // so this works with SVG as well as regular HTML elements.\n    if (e && e.setAttribute && hasClass(e, className)) {\n        const /** @type {?} */ rx = new RegExp('\\\\s?\\\\b' + className + '\\\\b', 'g'), /** @type {?} */\n              cn = e.getAttribute('class');\n        e.setAttribute('class', cn.replace(rx, ''));\n    }\n}\n","import {isString} from '../lang/is-string';\n/**\n * Gets an element from a jQuery-style selector.\n * \n * @param {?} selector An element, a query selector string, or a jQuery object.\n * @return {?}\n */\nexport function getElement(selector: any): HTMLElement {\n    if (selector instanceof HTMLElement) return selector;\n    if (isString(selector)) return /** @type {?} */(( <HTMLElement>document.querySelector(selector)));\n    if (selector && selector.jquery) return /** @type {?} */(( <HTMLElement>selector[0]));\n    return null;\n}\n","import {isDate} from './is-date';\nimport {isBoolean} from './is-boolean';\nimport {isNumber} from './is-number';\nimport {isString} from './is-string';\n/**\n * @param {?} value\n * @return {?}\n */\nexport function isPrimitive(value: any): boolean {\n    return isString(value) || isNumber(value) || isBoolean(value) || isDate(value);\n}\n","\n/**\n * @param {?} value\n * @param {?} min\n * @param {?} max\n * @return {?}\n */\nexport function clamp(value: number, min: number, max: number): number {\n    if (value != null) {\n        if (max != null && value > max) value = max;\n        if (min != null && value < min) value = min;\n    }\n    return value;\n}\n","import {isString} from '../lang/is-string';\n/**\n * Escapes a string by replacing HTML characters as text entities.\n * \n * Strings entered by uses should always be escaped before they are displayed\n * in HTML pages. This ensures page integrity and prevents HTML/javascript\n * injection attacks.\n * \n * @param {?} text Text to escape.\n * @return {?} An HTML-escaped version of the original string.\n */\nexport function escapeHtml(text: string) {\n    if (isString(text)) {\n        text = text.replace(/[&<>\"'\\/]/g, function (s) {\n            return _ENTITYMAP[s];\n        });\n    }\n    return text;\n}\nconst /** @type {?} */ _ENTITYMAP = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;'\n};\n","'use strict';\n/**\n * Gets or sets an object that contains all localizable strings in the Wijmo library.\n * \n * The culture selector is a two-letter string that represents an\n * <a href='http://en.wikipedia.org/wiki/List_of_ISO_639-1_codes'>ISO 639 culture</a>.\n */\nexport let culture: any = {\n    Globalize: {\n        numberFormat: {\n            NumberDecimalSeparator: '.',\n            NumberGroupSeparator: ',',\n            CurrencySymbol: '$',\n            '.': '.',\n            ',': ',',\n            percent: {pattern: ['-n %', 'n %']},\n            currency: {decimals: 2, symbol: '$', pattern: ['($n)', '$n']}\n        },\n        dateTimeFormat: {\n            TimeSeparator: '/',\n            DateSeparator: ':',\n            '/': '/',\n            ':': ':',\n        },\n        calendar: {\n            '/': '/',\n            ':': ':',\n            firstDay: 0,\n            days: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n            daysAbbr: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n            months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n            monthsAbbr: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            am: ['AM', 'A'],\n            pm: ['PM', 'P'],\n            eras: ['A.D.', 'B.C.'],\n            patterns: {\n                d: 'M/d/yyyy', D: 'dddd, MMMM dd, yyyy',\n                f: 'dddd, MMMM dd, yyyy h:mm tt', F: 'dddd, MMMM dd, yyyy h:mm:ss tt',\n                t: 'h:mm tt', T: 'h:mm:ss tt',\n                M: 'MMMM d', m: 'MMMM d',\n                Y: 'MMMM, yyyy', y: 'MMMM, yyyy',\n                g: 'M/d/yyyy h:mm tt', G: 'M/d/yyyy h:mm:ss tt',\n                s: 'yyyy\"-\"MM\"-\"dd\"T\"HH\":\"mm\":\"ss',\n                o: 'yyyy\"-\"MM\"-\"dd\"T\"HH\":\"mm\":\"ss\".\"fffffffK',\n                O: 'yyyy\"-\"MM\"-\"dd\"T\"HH\":\"mm\":\"ss\".\"fffffffK',\n                U: 'dddd, MMMM dd, yyyy h:mm:ss tt'\n            },\n            fiscalYearOffsets: [-3, -3]\n        }\n    },\n    MultiSelect: {\n        itemsSelected: '{count:n0} items selected'\n    },\n    FlexGrid: {\n        groupHeaderFormat: '{name}: <b>{value} </b>({count:n0} items)'\n    },\n    FlexGridFilter: {\n\n        // filter\n        ascending: '\\u2191 Ascending',\n        descending: '\\u2193 Descending',\n        apply: 'Apply',\n        clear: 'Clear',\n        conditions: 'Filter by Condition',\n        values: 'Filter by Value',\n\n        // value filter\n        search: 'Search',\n        selectAll: 'Select All',\n        null: '(nothing)',\n\n        // condition filter\n        header: 'Show items where the value',\n        and: 'And',\n        or: 'Or',\n        stringOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Does not equal', op: 1},\n            {name: 'Begins with', op: 6},\n            {name: 'Ends with', op: 7},\n            {name: 'Contains', op: 8},\n            {name: 'Does not contain', op: 9}\n        ],\n        numberOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Does not equal', op: 1},\n            {name: 'Is Greater than', op: 2},\n            {name: 'Is Greater than or equal to', op: 3},\n            {name: 'Is Less than', op: 4},\n            {name: 'Is Less than or equal to', op: 5}\n        ],\n        dateOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Is Before', op: 4},\n            {name: 'Is After', op: 3}\n        ],\n        booleanOperators: [\n            {name: '(not set)', op: null},\n            {name: 'Equals', op: 0},\n            {name: 'Does not equal', op: 1}\n        ]\n    }\n};\n","import {isArray, isDate} from '../../util/util';\nimport {culture} from '../../globalization/Localization';\n/**\n * Provides date and time utilities.\n */\nexport class DateTime {\n/**\n * Gets a new Date that adds the specified number of days to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} days Number of days to add to the given date.\n * @return {?}\n */\nstatic addDays(value: Date, days: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate() + days);\n    }\n/**\n * Gets a new Date that adds the specified number of months to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} months Number of months to add to the given date.\n * @return {?}\n */\nstatic addMonths(value: Date, months: number): Date {\n        return new Date(value.getFullYear(), value.getMonth() + months, value.getDate());\n    }\n/**\n * Gets a new Date that adds the specified number of years to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} years Number of years to add to the given date.\n * @return {?}\n */\nstatic addYears(value: Date, years: number): Date {\n        return new Date(value.getFullYear() + years, value.getMonth(), value.getDate());\n    }\n/**\n * Gets a new Date that adds the specified number of hours to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} hours Number of hours to add to the given date.\n * @return {?}\n */\nstatic addHours(value: Date, hours: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours() + hours);\n    }\n/**\n * Gets a new Date that adds the specified number of minutes to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} minutes Number of minutes to add to the given date.\n * @return {?}\n */\nstatic addMinutes(value: Date, minutes: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes() + minutes);\n    }\n/**\n * Gets a new Date that adds the specified number of seconds to a given Date.\n * \n * @param {?} value Original date.\n * @param {?} seconds Number of seconds to add to the given date.\n * @return {?}\n */\nstatic addSeconds(value: Date, seconds: number): Date {\n        return new Date(value.getFullYear(), value.getMonth(), value.getDate(), value.getHours(), value.getMinutes(), value.getSeconds() + seconds);\n    }\n/**\n * Returns true if two Date objects refer to the same date (ignoring time).\n * \n * @param {?} d1 First date.\n * @param {?} d2 Second date.\n * @return {?}\n */\nstatic sameDate(d1: Date, d2: Date): boolean {\n        return isDate(d1) && isDate(d2) &&\n            d1.getFullYear() == d2.getFullYear() &&\n            d1.getMonth() == d2.getMonth() &&\n            d1.getDate() == d2.getDate();\n    }\n/**\n * Returns true if two Date objects refer to the same time (ignoring date).\n * \n * @param {?} d1 First date.\n * @param {?} d2 Second date.\n * @return {?}\n */\nstatic sameTime(d1: Date, d2: Date): boolean {\n        return isDate(d1) && isDate(d2) &&\n            d1.getHours() == d2.getHours() &&\n            d1.getMinutes() == d2.getMinutes() &&\n            d1.getSeconds() == d2.getSeconds();\n    }\n/**\n * Returns true if two Date objects refer to the same date and time.\n * \n * @param {?} d1 First date.\n * @param {?} d2 Second date.\n * @return {?}\n */\nstatic equals(d1: Date, d2: Date): boolean {\n        return isDate(d1) && isDate(d2) && d1.getTime() == d2.getTime();\n    }\n/**\n * Gets a Date object with the date and time set on two Date objects.\n * \n * @param {?} date Date object that contains the date (day/month/year).\n * @param {?} time Date object that contains the time (hour:minute:second).\n * @return {?}\n */\nstatic fromDateTime(date: Date, time: Date): Date {\n        if (!date && !time) return null;\n        if (!date) date = time;\n        if (!time) time = date;\n        return new Date(\n            date.getFullYear(), date.getMonth(), date.getDate(),\n            time.getHours(), time.getMinutes(), time.getSeconds());\n    }\n/**\n * Converts a calendar date to a fiscal date using the current culture.\n * \n * @param {?} date Calendar date.\n * @param {?} govt Whether to use the government or corporate fiscal year.\n * @return {?}\n */\nstatic toFiscal(date: Date, govt: boolean) {\n        const /** @type {?} */ cal = culture.Globalize.calendar;\n        return isArray(cal.fiscalYearOffsets)\n            ? DateTime.addMonths(date, -cal.fiscalYearOffsets[govt ? 0 : 1])\n            : date;\n    }\n/**\n * Converts a fiscal year date to a calendar date using the current culture.\n * \n * @param {?} date Fiscal year date.\n * @param {?} govt Whether to use the government or corporate fiscal year.\n * @return {?}\n */\nstatic fromFiscal(date: Date, govt: boolean) {\n        const /** @type {?} */ cal = culture.Globalize.calendar;\n        return isArray(cal.fiscalYearOffsets)\n            ? DateTime.addMonths(date, +cal.fiscalYearOffsets[govt ? 0 : 1])\n            : date;\n    }\n/**\n * Creates a copy of a given Date object.\n * \n * @param {?} date Date object to copy.\n * @return {?}\n */\nstatic clone(date: Date): Date {\n        return DateTime.fromDateTime(date, date);\n    }\n}\n","import {asNumber} from '../../util/util';\n/**\n * Class that represents a size (with width and height).\n */\nexport class Size {\n/**\n * Gets or sets the width of this \\@see:Size.\n */\nwidth: number;\n/**\n * Gets or sets the height of this \\@see:Size.\n */\nheight: number;\n/**\n * Initializes a new instance of a \\@see:Size object.\n * \n * @param {?=} width Width of the new \\@see:Size.\n * @param {?=} height Height of the new \\@see:Size.\n */\nconstructor(width = 0, height = 0) {\n        this.width = asNumber(width);\n        this.height = asNumber(height);\n    }\n/**\n * Returns true if a \\@see:Size has the same dimensions as this \\@see:Size.\n * \n * @param {?} sz \\@see:Size to compare to this \\@see:Size.\n * @return {?}\n */\nequals(sz: Size): boolean {\n        return (sz instanceof Size) && this.width == sz.width && this.height == sz.height;\n    }\n/**\n * Creates a copy of this \\@see:Size.\n * @return {?}\n */\nclone(): Size {\n        return new Size(this.width, this.height);\n    }\n}\n\nfunction Size_tsickle_Closure_declarations() {\n/**\n * Gets or sets the width of this \\@see:Size.\n * @type {?}\n */\nSize.prototype.width;\n/**\n * Gets or sets the height of this \\@see:Size.\n * @type {?}\n */\nSize.prototype.height;\n}\n\n","import {asDate, asNumber, asString, isDate, isString, isNumber, toFixed} from '../util/util';\nimport {DateTime} from '../common/datetime/datetime';\nimport {culture} from './Localization';\n/**\n * Class that implements formatting and parsing of numbers and Dates.\n * \n * By default, \\@see:Globalize uses the American English culture.\n * To switch cultures, include the appropriate <b>wijmo.culture.*.js</b>\n * file after the wijmo files.\n */\nexport class Globalize {\n/**\n * Formats a number or a date.\n * \n * The format strings used with the \\@see:format function are similar to\n * the ones used by <b>Globalize.js</b> and by the .NET Globalization\n * library. The tables below contains links that describe the formats\n * available:\n * \n * <ul>\n * <li><a href=\"http://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx\">\n *      Standard Numeric Format Strings</a></li>\n * <li><a href=\"http://msdn.microsoft.com/en-us/library/az4se3k1(v=vs.110).aspx\">\n *      Standard Date and Time Format Strings</a></li>\n * <li><a href=\"http://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx\">\n *      Custom Date and Time Format Strings</a></li>\n * </ul>\n * \n * @param {?} value Number or Date to format (all other types are converted to strings).\n * @param {?} format Format string to use when formatting numbers or dates.\n * @param {?=} trim Whether to remove trailing zeros from numeric results.\n * @param {?=} truncate Whether to truncate the numeric values rather than round them.\n * @return {?} A string representation of the given value.\n */\nstatic format(value: any, format: string, trim?: boolean, truncate?: boolean): string {\n\n        // if a format was not provided, create one\n        if (!format) {\n            if (isNumber(value)) {\n                format = value == Math.round(value) ? 'n0' : 'n2';\n            }\n            else if (isDate(value)) {\n                format = 'd';\n            }\n        }\n\n        // format numbers and dates, convert others to string\n        if (isNumber(value)) {\n            return Globalize.formatNumber(value, format, trim, truncate);\n        } else if (isDate(value)) {\n            return Globalize.formatDate(value, format);\n        } else {\n            return value != null ? value.toString() : '';\n        }\n    }\n/**\n * Formats a number using the current culture.\n * \n * The \\@see:formatNumber method accepts most .NET-style\n * <a href=\"http://msdn.microsoft.com/en-us/library/dwhawy9k(v=vs.110).aspx\">\n * Standard Numeric Format Strings</a>, except for the 'e' and 'x' formats\n * (scientific notation and hexadecimal) which are not supported.\n * \n * Numeric format strings takes the form <i>Axxccss</i>, where:\n * <ul>\n * <li>\n *  <i>A</i> is a single case-insensitive alphabetic character called the\n *  format specifier.</i>\n * <li>\n *  <i>xx</i> is an optional integer called the precision specifier.\n *  The precision specifier affects the number of digits in the result.</li>\n * <li>\n *  <i>cc</i> is an optional string used to override the currency symbol\n *  when formatting currency values. This is useful when formatting\n *  currency values for cultures different than the current default\n *  (for example, when formatting Euro or Yen values in applications\n *  that use the English culture).</li>\n * <li>\n *  <i>ss</i> is an optional string used to scale the number. If provided,\n *  it must consist of commas. The number is divided by 1000 for each comma\n *  specified.</li>\n * </ul>\n * \n * The following table describes the standard numeric format specifiers and\n * displays sample output produced by each format specifier for the default\n * culture.\n * \n * <b>n</b> Number: <code>formatNumber(1234.5, 'n2') => '1,234.50'</code><br/>\n * <b>f</b> Fixed-point: <code>formatNumber(1234.5, 'f2') => '1234.50'</code><br/>\n * <b>g</b> General (no trailing zeros): <code>formatNumber(1234.5, 'g2') => '1,234.5'</code><br/>\n * <b>d</b> Decimal (integers): <code>formatNumber(-1234, 'd6') => '-001234'</code><br/>\n * <b>x</b> Hexadecimal (integers): <code>formatNumber(1234, 'x6') => '0004d2'</code><br/>\n * <b>c</b> Currency: <code>formatNumber(1234, 'c') => '$ 1,234.00'</code><br/>\n * <b>p</b> Percent: <code>formatNumber(0.1234, 'p2') => '12.34 %'</code>\n * \n * The scaling specifier is especially useful when charting large values. For\n * example, the markup below creates a chart that plots population versus GDP.\n * The raw data expresses the population is units and the GDP in millions.\n * The scaling specified in the axes formats causes the chart to show population\n * in millions and GDP in trillions:\n * \n * <pre>&lt;wj-flex-chart\n *   items-source=\"countriesGDP\" binding-x=\"pop\" chart-type=\"Scatter\"&gt;\n *   &lt;wj-flex-chart-series\n *     name=\"GDP\" binding=\"gdp\"&gt;&lt;/wj-flex-chart-series&gt;\n *   &lt;wj-flex-chart-axis\n *     wj-property=\"axisX\" title=\"Population (millions)\"\n *     format=\"n0,,\"&gt;\n *   &lt;/wj-flex-chart-axis&gt;\n *   &lt;wj-flex-chart-axis\n *     wj-property=\"axisY\" title=\"GDP (US$ trillions)\"\n *     format=\"c0,,\"&gt;\n *   &lt;/wj-flex-chart-axis&gt;\n * &lt;/wj-flex-chart&gt;</pre>\n * \n * @param {?} value Number to format.\n * @param {?} format .NET-style standard numeric format string (e.g. 'n2', 'c4', 'p0', 'g2', 'd2').\n * @param {?=} trim Whether to remove trailing zeros from the result.\n * @param {?=} truncate Whether to truncate the value rather than round it.\n * @return {?} A string representation of the given number.\n */\nstatic formatNumber(value: number, format: string, trim?: boolean, truncate?: boolean): string {\n        asNumber(value);\n        asString(format);\n\n        let /** @type {?} */ result;\n        const /** @type {?} */ m   = format ? format.match(/([a-z])(\\d*)(,*)(.*)/i) : null, /** @type {?} */\n            nf    = culture.Globalize.numberFormat, /** @type {?} */\n            f1    = m ? m[1].toLowerCase() : 'n', /** @type {?} */\n            prec  = (m && m[2]) ? parseInt(m[2]) : (f1 == 'c') ? nf.currency.decimals : value == Math.round(value) ? 0 : 2, /** @type {?} */\n            scale = (m && m[3]) ? 3 * m[3].length : 0, /** @type {?} */\n            curr  = (m && m[4]) ? m[4] : nf.currency.symbol, /** @type {?} */\n            dp    = nf['.'], /** @type {?} */\n            ts    = nf[','];\n\n        // scale (,:thousands ,,:millions ,,,:billions)\n        if (scale) {\n            value /= Math.pow(10, scale);\n        }\n\n        // d, x: integers/hexadecimal\n        if (f1 == 'd' || f1 == 'x') {\n            result = Math.round(Math.abs(value)).toString(f1 == 'd' ? 10 : 16);\n            while (result.length < prec) {\n                result = '0' + result;\n            }\n            if (value < 0) {\n                result = '-' + result;\n            }\n            if (format && format[0] == 'X') {\n                result = result.toUpperCase();\n            }\n            return result;\n        }\n\n        // p: percentage\n        if (f1 == 'p') {\n            value *= 100;\n        }\n\n        // truncate value\n        if (truncate) {\n            value = toFixed(value, prec, true);\n        }\n\n        // get result\n        result = (f1 == 'c' || f1 == 'p')\n            ? Math.abs(value).toFixed(prec)\n            : value.toFixed(prec);\n\n        // g: remove trailing zeros\n        if ((trim || f1 == 'g') && result.indexOf('.') > -1) {\n            result = result.replace(/(\\.[0-9]*?)0+$/g, '$1');\n            result = result.replace(/\\.$/, '');\n        }\n\n        // replace decimal point\n        if (dp != '.') {\n            result = result.replace('.', dp);\n        }\n\n        // n, c, p: thousand separators\n        if (ts && (f1 == 'n' || f1 == 'c' || f1 == 'p')) {\n            const /** @type {?} */ idx = result.indexOf(dp), /** @type {?} */\n                  rx  = /\\B(?=(\\d\\d\\d)+(?!\\d))/g;\n            result    = idx > -1 ? result.substr(0, idx).replace(rx, ts) + result.substr(idx) : result.replace(rx, ts);\n        }\n\n        // c: currency pattern\n        if (f1 == 'c') {\n            var /** @type {?} */ pat = nf.currency.pattern[value < 0 ? 0 : 1];\n            result = pat.replace('n', result).replace('$', curr);\n        }\n\n        // p: percentage pattern\n        if (f1 == 'p') {\n            var /** @type {?} */ pat = nf.percent.pattern[value < 0 ? 0 : 1];\n            result = pat.replace('n', result);\n        }\n\n        // done\n        return result;\n    }\n/**\n * Formats a date using the current culture.\n * \n * The \\@see:format parameter contains a .NET-style\n * <a href=\"http://msdn.microsoft.com/en-us/library/8kb3ddd4(v=vs.110).aspx\">Date format string</a>\n * with the following additions:\n * <ul>\n * <li>\n *  <i>Q, q</i> Calendar quarter.</li>\n *  <i>U</i> Fiscal quarter (government).</li>\n *  <i>u</i> Fiscal quarter (private sector).</li>\n *  <i>EEEE, EEE, EE, E</i> Fiscal year (government).</li>\n *  <i>eeee, eee, ee, e</i> Fiscal year (private sector).</li>\n * </ul>\n * \n * For example:\n * <code>\n * var d = new Date(2015, 9, 1); // Oct 1, 2015\n * console.log(wijmo.Globalize.format(d, '\"FY\"EEEE\"Q\"U') + ' (US culture)');\n * &gt; <b>FY2016Q1 (US culture)</b>\n * </code>\n * \n * @param {?} value Number or Date to format.\n * @param {?} format .NET-style Date format string</a>.\n * @return {?} A string representation of the given date.\n */\nstatic formatDate(value: Date, format: string): string {\n        value = asDate(value);\n\n        // culture-invariant formats\n        switch (format) {\n            case 'r':\n            case 'R':\n                return value.toUTCString();\n            case 'u':\n                return value.toISOString().replace(/\\.\\d{3}/, '');\n        }\n\n        // expand pre-defined formats\n        format = Globalize._expandFormat(format);\n\n        // parse the format string and build return value\n        const /** @type {?} */ parts = Globalize._parseDateFormat(format);\n        let /** @type {?} */ str     = '';\n        for (let /** @type {?} */ i = 0; i < parts.length; i++) {\n            str += Globalize._formatDatePart(value, format, parts[i]);\n        }\n\n        // all done\n        return str;\n    }\n/**\n * Parses a string into an integer.\n * \n * @param {?} value String to convert to an integer.\n * @param {?=} format Format to use when parsing the number.\n * @return {?} The integer represented by the given string,\n * or <b>NaN</b> if the string cannot be parsed into an integer.\n */\nstatic parseInt(value: string, format?: string): number {\n        return Math.round(Globalize.parseFloat(value, format));\n    }\n/**\n * Parses a string into a floating point number.\n * \n * @param {?} value String to convert to a number.\n * @param {?=} format Format to use when parsing the number.\n * @return {?} The floating point number represented by the given string,\n * or <b>NaN</b> if the string cannot be parsed into a floating point number.\n */\nstatic parseFloat(value: string, format?: string): number {\n        const /** @type {?} */ neg   = value.indexOf('-') > -1 || (value.indexOf('(') > -1 && value.indexOf(')') > -1) ? -1 : +1, /** @type {?} */\n              pct   = value.indexOf('%') > -1 ? .01 : 1, /** @type {?} */\n              m     = format ? format.match(/,+/) : null, /** @type {?} */\n              scale = m ? m[0].length * 3 : 0;\n\n        // hex\n        if (format && (format[0] == 'x' || format[0] == 'X')) {\n            value = value.replace(/[^0-9a-f]+.*$/gi, ''); // truncate at first invalid char\n            return parseInt(value, 16) * neg * pct * Math.pow(10, scale);\n        }\n\n        // decimal\n        var /** @type {?} */ dp = culture.Globalize.numberFormat['.'], /** @type {?} */\n            rx = new RegExp('[^\\\\d\\\\' + dp + ']', 'g'), /** @type {?} */\n            value = value.replace(rx, '').replace(dp, '.'); // remove non-digits, replace decimal point\n        return parseFloat(value) * neg * pct * Math.pow(10, scale);\n    }\n/**\n * Parses a string into a Date.\n * \n * @param {?} value String to convert to a Date.\n * @param {?} format Format string used to parse the date.\n * @return {?} The date represented by the given string, or null if the string\n * cannot be parsed into a Date.\n */\nstatic parseDate(value: string, format: string): Date {\n\n        // make sure we have a value\n        value = asString(value);\n        if (!value) {\n            return null;\n        }\n\n        // culture-invariant formats\n        if (format == 'u') {\n            return new Date(value);\n        }\n\n        // parse using RFC 3339 pattern ([yyyy-MM-dd] [hh:mm[:ss]])\n        var /** @type {?} */ d: Date;\n        if (format == 'R' || format == 'r') {\n            const /** @type {?} */ rx    = /(([0-9]+)\\-([0-9]+)\\-([0-9]+))?\\s?(([0-9]+):([0-9]+)(:([0-9]+))?)?/, /** @type {?} */\n                  match = value.match(rx);\n            if (match[1] || match[5]) {\n                var /** @type {?} */ d = match[1] // parse date\n                    ? new Date(parseInt(match[2]), parseInt(match[3]) - 1, parseInt(match[4]))\n                    : new Date();\n                if (match[5]) { // parse time\n                    d.setHours(parseInt(match[6]));\n                    d.setMinutes(parseInt(match[7]));\n                    d.setSeconds(match[8] ? parseInt(match[9]) : 0);\n                }\n            } else {\n                d = new Date(value);\n            }\n            return !isNaN(d.getTime()) ? d : null;\n        }\n\n        // expand the format\n        format = Globalize._expandFormat(format ? format : 'd');\n\n        // get format parts and data parts\n        //\n        // cjk: chars, http://www.rikai.com/library/kanjitables/kanji_codes.unicode.shtml\n        // rxf: format (no dots in strings: 'mm.dd.yyyy' => ['mm', 'dd', 'yyyy']).\n        // rxv: value (dots OK in strings: 'A.D' => 'A.D', but not by themselves)\n        const /** @type {?} */ cal                                                 = culture.Globalize.calendar, /** @type {?} */\n              cjk                                                 = Globalize._CJK, /** @type {?} */\n              rxv                                                 = new RegExp('(\\\\' + cal['/'] + ')|(\\\\' + cal[':'] + ')|' + // date/time separators\n                  '(\\\\d+)|' + // digits\n                  '([' + cjk + '\\\\.]{2,})|' + // strings with dots\n                  '([' + cjk + ']+)', // strings with no dots\n                  'gi'\n              );\n        let /** @type {?} */ vparts                                                = value.match(rxv), /** @type {?} */\n              fparts = Globalize._parseDateFormat(format), /** @type {?} */ offset = 0, /** @type {?} */\n              year                                                = -1, /** @type {?} */ month = 0, /** @type {?} */ day = 1, /** @type {?} */ hour = 0, /** @type {?} */ min = 0;\n        const /** @type {?} */ tzm                                                 = 0;\n        let /** @type {?} */ sec                                                   = 0, /** @type {?} */ ms                                           = 0, /** @type {?} */ era = -1, /** @type {?} */\n              hasDayName, /** @type {?} */ hasDay, /** @type {?} */ hasQuarter, /** @type {?} */ hasMonth, /** @type {?} */ fiscalFmt;\n\n        // basic validation (TFS 81465, 128359)\n        if (!vparts || !vparts.length || !fparts || !fparts.length) {\n            return null;\n        }\n\n        // parse each element\n        for (let /** @type {?} */ i = 0; i < fparts.length && vparts; i++) {\n            const /** @type {?} */ vpi  = i - offset;\n            let /** @type {?} */ pval   = (vpi > -1 && vpi < vparts.length) ? vparts[vpi] : '';\n            const /** @type {?} */ plen = fparts[i].length;\n            switch (fparts[i]) {\n\n                // ** year\n                case 'EEEE': case 'EEE': case 'EE': case 'E': // fiscal (govt)\n                case 'eeee': case 'eee': case 'ee': case 'e': // fiscal (corp)\n                fiscalFmt = fparts[i];\n                // ** fall through **\n                case 'yyyy': case 'yyy': case 'yy': case 'y': // calendar\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                year = parseInt(pval);\n                break;\n\n                // ** month\n                case 'MMMM': case 'MMM':\n                hasMonth = true;\n                const /** @type {?} */ monthName = pval.toLowerCase();\n                month = -1;\n                for (let /** @type {?} */ j = 0; j < 12; j++) {\n                    if (cal.months[j].toLowerCase().indexOf(monthName) == 0) {\n                        month = j;\n                        break;\n                    }\n                }\n                break;\n                case 'MM': case 'M':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                month = parseInt(pval) - 1;\n                hasMonth = true;\n                break;\n\n                // ** day\n                case 'dddd':\n                case 'ddd':\n                    hasDayName = true;\n                    break; // skip day names\n                case 'dd': case 'd':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                day = parseInt(pval);\n                hasDay = true;\n                break;\n\n                // ** hour\n                case 'hh': case 'h':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                hour = parseInt(pval);\n                hour = hour == 12 ? 0 : hour; // 0-12, 12 == midnight\n                break;\n                case 'HH':\n                    if (plen > 1 && pval.length > plen) {\n                        vparts[vpi] = pval.substr(plen);\n                        pval = pval.substr(0, plen);\n                        offset++;\n                    }\n                    hour = parseInt(pval); // 0-24\n                    break;\n                case 'H':\n                    hour = parseInt(pval); // 0-24\n                    break;\n\n                // ** minute\n                case 'mm': case 'm':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                min = parseInt(pval);\n                break;\n\n                // ** second\n                case 'ss': case 's':\n                if (plen > 1 && pval.length > plen) {\n                    vparts[vpi] = pval.substr(plen);\n                    pval = pval.substr(0, plen);\n                    offset++;\n                }\n                sec = parseInt(pval);\n                break;\n\n                // ** millisecond\n                case 'fffffff': case 'FFFFFFF':\n                case 'ffffff': case 'FFFFFF':\n                case 'fffff': case 'FFFFF':\n                case 'ffff': case 'FFFF':\n                case 'fff': case 'FFF':\n                case 'ff': case 'FF':\n                case 'f': case 'F':\n                ms = parseInt(pval) / Math.pow(10, plen - 3);\n                break;\n\n                // ** am/pm\n                case 'tt': case 't':\n                pval = pval.toUpperCase();\n                if ((cal.pm[0] && pval == cal.pm[0] && hour < 12) ||\n                    (cal.pm[1] && pval == cal.pm[1] && hour < 12)) {\n                    hour += 12;\n                }\n                break;\n\n                // ** quarter\n                case 'q': case 'Q': case 'u': case 'U':\n                hasQuarter = true;\n                break;\n\n                // ** era\n                case 'ggg': case 'gg': case 'g':\n                era = cal.eras.length > 1 ? Globalize._getEra(pval, cal) : -1;\n                break;\n\n                // ** localized separators (TFS 131320)\n                case cal['/']:\n                case cal[':']:\n                    if (pval && pval != fparts[i]) {\n                        return null; // present and wrong separator\n                    }\n                    break;\n\n                // ** time zone (skip )\n                case 'K':\n                    break;\n\n                // ** all else: if not a match, keep using the same pval\n                default:\n                    if (Globalize._unquote(fparts[i]) != pval) {\n                        offset++;\n                    }\n                    break;\n            }\n        }\n\n        // allow dates with no times even if the format requires times\n        if (hasMonth && hasDay) {\n            if (isNaN(hour)) hour = 0;\n            if (isNaN(min)) min = 0;\n            if (isNaN(sec)) sec = 0;\n        }\n\n        // basic validation\n        if (month < 0 || month > 11 || isNaN(month) ||\n            day < 0 || day > 31 || isNaN(day) ||\n            hour < 0 || hour > 24 || isNaN(hour) ||\n            min < 0 || min > 60 || isNaN(min) ||\n            sec < 0 || sec > 60 || isNaN(sec)) {\n            return null;\n        }\n\n        // convert fiscal year/month to calendar\n        if (fiscalFmt) {\n            if (!hasMonth) { // need year and month to convert fiscal to calendar\n                return null;\n            }\n            d = new Date(year, month);\n            d = DateTime.fromFiscal(d, fiscalFmt[0] == 'E');\n            year = d.getFullYear();\n            month = d.getMonth();\n        }\n\n        // if the day name was specified but the day wasn't, the result is meaningless\n        if (hasDayName && !hasDay) {\n            return null;\n        }\n\n        // if the quarter was specified but the month wasn't, the result is meaningless\n        if (hasQuarter && !hasMonth) {\n            return null;\n        }\n\n        // if year not found, use current (as Globalize.js)\n        if (year < 0) {\n            year = new Date().getFullYear();\n        }\n\n        // apply era offset if any, or adjust for two-digit years (see Calendar.TwoDigitYearMax)\n        if (era > -1) {\n            year = year + cal.eras[era].start.getFullYear() - 1;\n        } else if (year < 100) {\n            year += year >= 30 ? 1900 : 2000;\n        }\n\n        // return result\n        d = new Date(year, month, day, hour, min + tzm, sec, ms);\n        return isNaN(d.getTime()) ? null : d;\n    }\n\n    // Chinese/Japanese/Korean characters\n    // http://www.rikai.com/library/kanjitables/kanji_codes.unicode.shtml\n    // NOTE: using 'replace' to keep minifier from switching the escaped Unicode chars into real Unicode.\n    static _CJK = 'a-zu00C0-u017Fu3000-u30ffu4e00-u9faf'.replace(/u/g, '\\\\u');\n/**\n * Gets the first day of the week according to the current culture.\n * \n * The value returned is between zero (Sunday) and six (Saturday).\n * @return {?}\n */\nstatic getFirstDayOfWeek(): number {\n        const /** @type {?} */ fdw = culture.Globalize.calendar.firstDay;\n        return fdw ? fdw : 0;\n    }\n/**\n * Gets the symbol used as a decimal separator in numbers.\n * @return {?}\n */\nstatic getNumberDecimalSeparator(): string {\n        const /** @type {?} */ ndc = culture.Globalize.numberFormat['.'];\n        return ndc ? ndc : '.';\n    }\n/**\n * @param {?} s\n * @return {?}\n */\nprivate static _unquote(s: string): string {\n        if (s.length > 1 && s[0] == s[s.length - 1]) {\n            if (s[0] == '\\'' || s[0] == '\\\"') {\n                return s.substr(1, s.length - 2);\n            }\n        }\n        return s;\n    }\nprivate static _dateFomatParts = {};\n/**\n * @param {?} format\n * @return {?}\n */\nprivate static _parseDateFormat(format: string): string[] {\n\n        // use cache whenever possible\n        if (format in Globalize._dateFomatParts) {\n            return Globalize._dateFomatParts[format];\n        }\n\n        // parse the format\n        const /** @type {?} */ parts = [], /** @type {?} */\n              str   = '';\n        let /** @type {?} */ start, /** @type {?} */ end;\n        for (start = 0; start > -1 && start < format.length; start++) {\n            const /** @type {?} */ c = format[start];\n            if (c == '\\'' || c == '\"') { // handle quoted parts\n                end = format.indexOf(c, start + 1); // keep quotes to distinguish from regular date parts\n                if (end > -1) {\n                    parts.push(format.substring(start, end + 1));\n                    start = end;\n                    continue;\n                }\n            }\n            end = start + 1;\n            for (; end < format.length; end++) {\n                if (format[end] != c) break;\n            }\n            parts.push(format.substring(start, end));\n            start = end - 1;\n        }\n\n        // cache and return\n        Globalize._dateFomatParts[format] = parts;\n        return parts;\n    }\n/**\n * @param {?} d\n * @param {?} format\n * @param {?} part\n * @return {?}\n */\nprivate static _formatDatePart(d: Date, format: string, part: string): string {\n        const /** @type {?} */ cal  = culture.Globalize.calendar;\n        let /** @type {?} */ era    = 0, /** @type {?} */ year = 0, /** @type {?} */ ff = 0, /** @type {?} */ fd;\n        const /** @type {?} */ plen = part.length;\n        switch (part) {\n\n            // ** year\n            case 'yyyy': case 'yyy': case 'yy': case 'y': // calendar year\n            case 'EEEE': case 'EEE': case 'EE': case 'E': // fiscal year (govt)\n            case 'eeee': case 'eee': case 'ee': case 'e': // fiscal year (corporate)\n\n            // get the year (calendar or fiscal)\n            fd = part[0] == 'E' ? DateTime.toFiscal(d, true) :\n                part[0] == 'e' ? DateTime.toFiscal(d, false) :\n                    d;\n            year = fd.getFullYear();\n\n            // if the calendar has multiple eras and the format specifies an era,\n            // then adjust the year to count from the start of the era.\n            // if the format has no era, then use the regular (Western) year.\n            if (cal.eras.length > 1 && format.indexOf('g') > -1) {\n                era = Globalize._getEra(d, cal);\n                if (era > -1) {\n                    year = year - cal.eras[era].start.getFullYear() + 1;\n                }\n            }\n\n            // adjust number of digits\n            return Globalize._zeroPad(year, 4).substr(4 - part.length);\n\n            // ** month\n            case 'MMMM':\n                return cal.months[d.getMonth()];\n            case 'MMM':\n                return cal.monthsAbbr[d.getMonth()];\n            case 'MM': case 'M':\n            return Globalize._zeroPad(d.getMonth() + 1, plen);\n\n            // ** day\n            case 'dddd':\n                return cal.days[d.getDay()];\n            case 'ddd':\n                return cal.daysAbbr[d.getDay()];\n            case 'dd':\n                return Globalize._zeroPad(d.getDate(), 2);\n            case 'd':\n                return d.getDate().toString();\n\n            // ** hour\n            case 'hh': case 'h':\n            return Globalize._zeroPad(Globalize._h12(d), plen);\n            case 'HH': case 'H':\n            return Globalize._zeroPad(d.getHours(), plen);\n\n            // ** minute\n            case 'mm': case 'm':\n            return Globalize._zeroPad(d.getMinutes(), plen);\n\n            // ** second\n            case 'ss': case 's':\n            return Globalize._zeroPad(d.getSeconds(), plen);\n\n            // ** millisecond\n            case 'fffffff': case 'FFFFFFF':\n            case 'ffffff': case 'FFFFFF':\n            case 'fffff': case 'FFFFF':\n            case 'ffff': case 'FFFF':\n            case 'fff': case 'FFF':\n            case 'ff': case 'FF':\n            case 'f': case 'F':\n            ff = d.getMilliseconds() * Math.pow(10, plen - 3);\n            return part[0] == 'f' ? Globalize._zeroPad(ff, plen) : ff.toFixed(0);\n\n            // ** am/pm\n            case 'tt':\n                return d.getHours() < 12 ? cal.am[0] : cal.pm[0];\n            case 't':\n                return d.getHours() < 12 ? cal.am[1] : cal.pm[1];\n\n            // ** quarter\n            case 'q': case 'Q': // calendar\n            return (Math.floor(d.getMonth() / 3) + 1).toString();\n            case 'u': case 'U': // quarter (U: govt; u: corp)\n            fd = DateTime.toFiscal(d, part == 'U');\n            return (Math.floor(fd.getMonth() / 3) + 1).toString();\n\n            // ** era\n            case 'ggg': case 'gg': case 'g':\n            if (cal.eras.length > 1) {\n                era = Globalize._getEra(d, cal);\n                if (era > -1) {\n                    return part == 'ggg' ? cal.eras[era].name : part == 'gg' ? cal.eras[era].name[0] : cal.eras[era].symbol;\n                }\n            }\n            return cal.eras[0];\n\n            // ** localized separators\n            case ':':\n            case '/':\n                return cal[part];\n\n            // ** time zone\n            case 'K':\n                const /** @type {?} */ tz = d.toString().match(/(\\+|\\-)(\\d{2})(\\d{2})/);\n                return tz ? tz[1] + tz[2] + tz[3] : '';\n        }\n\n        // unquote part\n        if (plen > 1 && part[0] == part[plen - 1]) {\n            if (part[0] == '\\\"' || part[0] == '\\'') {\n                return part.substr(1, plen - 2);\n            }\n        }\n\n        // return part\n        return part;\n    }\n/**\n * @param {?} d\n * @param {?} cal\n * @return {?}\n */\nprivate static _getEra(d: any, cal: any): number {\n        if (isDate(d)) { // find era by start date\n            for (var /** @type {?} */ i = 0; i < cal.eras.length; i++) {\n                if (d >= cal.eras[i].start) {\n                    return i;\n                }\n            }\n        } else if (isString(d)) { // find era by name or symbol\n            for (var /** @type {?} */ i = 0; i < cal.eras.length; i++) {\n                if (cal.eras[i].name) {\n                    if (cal.eras[i].name.indexOf(d) == 0 || cal.eras[i].symbol.indexOf(d) == 0) {\n                        return i;\n                    }\n                }\n            }\n        }\n        return -1; // not found\n    }\n/**\n * @param {?} format\n * @return {?}\n */\nprivate static _expandFormat(format: string): string {\n        const /** @type {?} */ fmt = culture.Globalize.calendar.patterns[format];\n        return fmt ? fmt : format;\n    }\n/**\n * @param {?} num\n * @param {?} places\n * @return {?}\n */\nprivate static _zeroPad(num: number, places: number) {\n        const /** @type {?} */ n    = num.toFixed(0), /** @type {?} */\n              zero = places - n.length + 1;\n        return zero > 0 ? Array(zero).join('0') + n : n;\n    }\n/**\n * @param {?} d\n * @return {?}\n */\nprivate static _h12(d: Date) {\n        const /** @type {?} */ cal = culture.Globalize.calendar;\n        let /** @type {?} */ h     = d.getHours();\n        if (cal.am && cal.am[0]) {\n            h = h % 12;\n            if (h == 0) h = 12;\n        }\n        return h;\n    }\n}\n\nfunction Globalize_tsickle_Closure_declarations() {\n/** @type {?} */\nGlobalize._CJK;\n/** @type {?} */\nGlobalize._dateFomatParts;\n}\n\n","\n/**\n * Rounds or truncates a number to a specified precision.\n * \n * @param {?} value Value to round or truncate.\n * @param {?} prec Number of decimal digits for the result.\n * @param {?} truncate Whether to truncate or round the original value.\n * @return {?}\n */\nexport function toFixed(value: number, prec: number, truncate: boolean): number {\n    if (truncate) {\n        var /** @type {?} */ s = value.toString(), /** @type {?} */\n            decPos = s.indexOf('.');\n        if (decPos > -1) {\n            s = s.substr(0, decPos + 1 + prec);\n            value = parseFloat(s);\n        }\n    } else {\n        var /** @type {?} */ s = value.toFixed(prec);\n        value = parseFloat(s);\n    }\n    return value;\n}","import {assert} from './assert';\nimport {isDate} from '../lang/is-date';\n/**\n * Asserts that a value is a Date.\n * \n * @param {?} value Value supposed to be a Date.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The Date passed in.\n */\nexport function asDate(value: Date, nullOK = false): Date {\n    assert((nullOK && value == null) || isDate(value), 'Date expected.');\n    return value;\n}\n","import {Size} from './../core/index';\nimport {EventArgs} from '../eventArgs/EventArgs';\nimport {Event} from '../event/Event';\nimport {CollectionView} from '../collections/CollectionView';\nimport {\n    assert,\n    getElement,\n    addClass,\n    createElement,\n    asType,\n    contains,\n    asBoolean,\n    enable,\n    copy,\n    toggleClass\n} from '../core/index';\n/**\n * Base class for all Wijmo controls.\n * \n * The \\@see:Control class handles the association between DOM elements and the\n * actual control. Use the \\@see:hostElement property to get the DOM element\n * that is hosting a control, or the \\@see:getControl method to get the control\n * hosted in a given DOM element.\n * \n * The \\@see:Control class also provides a common pattern for invalidating and\n * refreshing controls, for updating the control layout when its size changes,\n * and for handling the HTML templates that define the control structure.\n */\nexport class Control {\nprivate static _DATA_KEY = 'wj-Control';\nprivate static _REFRESH_INTERVAL = 10;\nprivate static _wme: HTMLElement;           // watermark element\n    static _touching: boolean;\nprivate _focus = false;\nprivate _updating = 0;\nprivate _fullUpdate = false;\nprivate _toInv: number;\nprivate _szCtl: Size;\nprivate _e: HTMLElement;\nprivate _orgOuter: string;\nprivate _orgInner: string;\nprivate _listeners;                         // list of event listeners attached to this control\n    _orgTag: string;                            // host element's original tag (if not DIV)\n    _orgAtts: NamedNodeMap;\n/**\n * Initializes a new instance of a \\@see:Control and attaches it to a DOM element.\n * \n * @param {?} element The DOM element that will host the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options JavaScript object containing initialization data for the control.\n * @param {?=} invalidateOnResize Whether the control should be invalidated when it is resized.\n */\nconstructor(element: any, options = null, invalidateOnResize = false) {\n\n        // check that the element is not in use\n        assert(Control.getControl(element) == null, 'Element is already hosting a control.');\n\n        // get the host element\n        let host = getElement(element);\n        assert(host != null, 'Cannot find the host element.');\n\n        // save host and original content (to restore on dispose)\n        this._orgOuter = host.outerHTML;\n        this._orgInner = host.innerHTML;\n\n        // replace <input> and <select> elements with <div> and save their attributes\n        if (host.tagName == 'INPUT' || host.tagName == 'SELECT') {\n            this._orgAtts = host.attributes;\n            this._orgTag = host.tagName;\n            host = this._replaceWithDiv(host);\n        }\n\n        // save host element and store control instance in element\n        // (to retrieve with Control.getControl(element))\n        this._e = host;\n        host[Control._DATA_KEY] = this;\n\n        // update layout when user resizes the browser\n        if (invalidateOnResize == true) {\n            this._szCtl = new Size(host.offsetWidth, host.offsetHeight);\n            const hr = this._handleResize.bind(this);\n            this.addEventListener(window, 'resize', hr);\n        }\n\n        // fire events for got/lost focus\n        this.addEventListener(host, 'focus', () => {\n            this._updateFocusState();\n        }, true);\n        this.addEventListener(host, 'blur', () => {\n            this._updateFocusState();\n        }, true);\n\n        // handle disabled controls\n        // (pointer-events requires IE11, doesn't prevent wheel at all)\n        const hd = this._handleDisabled.bind(this);\n        this.addEventListener(host, 'mousedown', hd, true);\n        this.addEventListener(host, 'mouseup', hd, true);\n        this.addEventListener(host, 'click', hd, true);\n        this.addEventListener(host, 'dblclick', hd, true);\n        this.addEventListener(host, 'keydown', hd, true);\n        this.addEventListener(host, 'onmousewheel' in document ? 'mousewheel' : 'DOMMouseScroll', hd, true);\n\n        // keep track of touch actions at the document level\n        // (no need to add/remove event handlers to every Wijmo control)\n        if (Control._touching == null) {\n            Control._touching = false;\n            if ('ontouchstart' in window || 'onpointerdown' in window) {\n                const b  = document.body,\n                      ts = this._handleTouchStart,\n                      te = this._handleTouchEnd;\n                if ('ontouchstart' in window) { // Chrome, FireFox, Safari\n                    b.addEventListener('touchstart', ts);\n                    b.addEventListener('touchend', te);\n                    b.addEventListener('touchcancel', te);\n                    b.addEventListener('touchleave', te);\n                } else if ('onpointerdown' in window) { // IE\n                    b.addEventListener('pointerdown', ts);\n                    b.addEventListener('pointerup', te);\n                    b.addEventListener('pointerout', te);\n                    b.addEventListener('pointercancel', te);\n                    b.addEventListener('pointerleave', te);\n                }\n            }\n        }\n\n    }\n/**\n * Gets the HTML template used to create instances of the control.\n * \n * This method traverses up the class hierarchy to find the nearest ancestor that\n * specifies a control template. For example, if you specify a prototype for the\n * \\@see:ComboBox control, it will override the template defined by the \\@see:DropDown\n * base class.\n * @return {?}\n */\ngetTemplate(): string {\n        for (let /** @type {?} */ p = Object.getPrototypeOf(this); p; p = Object.getPrototypeOf(p)) {\n\n           \n\t\t\treturn p.constructor.controlTemplate;\n\t\t\t\n\n        }\n\t\treturn null;\n\t\t}\n/**\n * Applies the template to a new instance of a control, and returns the root element.\n * \n * This method should be called by constructors of templated controls.\n * It is responsible for binding the template parts to the\n * corresponding control members.\n * \n * For example, the code below applies a template to an instance\n * of an \\@see:InputNumber control. The template must contain elements\n * with the 'wj-part' attribute set to 'input', 'btn-inc', and 'btn-dec'.\n * The control members '_tbx', '_btnUp', and '_btnDn' will be assigned\n * references to these elements.\n * \n * <pre>this.applyTemplate('wj-control wj-inputnumber', template, {\n *   _tbx: 'input',\n *   _btnUp: 'btn-inc',\n *   _btnDn: 'btn-dec'\n * }, 'input');</pre>\n * \n * @param {?} classNames Names of classes to add to the control's host element.\n * @param {?} template An HTML string that defines the control template.\n * @param {?} parts A dictionary of part variables and their names.\n * @param {?=} namePart Name of the part to be named after the host element. This\n * determines how the control submits data when used in forms.\n * @return {?}\n */\napplyTemplate(classNames: string, template: string, parts: Object, namePart?: string): HTMLElement {\n        const /** @type {?} */ host = this._e;\n\n        // apply standard classes to host element\n        if (classNames) {\n            addClass(host, classNames);\n        }\n\n        // convert string into HTML template and append to host\n        let /** @type {?} */ tpl = null;\n        if (template) {\n            tpl = createElement(template);\n            tpl = host.appendChild(tpl);\n        }\n\n        // make sure the control can get the focus\n        // this is a little tricky:\n        // - Chrome won't give divs the focus unless we set tabIndex to something > -1\n        // - But if we do set it and the control contains input elements, the back-tab key won't work\n        // so we set the tabIndex to -1 or zero depending on whether the control contains input elements.\n        // http://wijmo.com/topic/shift-tab-not-working-for-input-controls-in-ff-and-chrome/, TFS 123457\n        if (host && !host.getAttribute('tabindex')) {\n            host.tabIndex = host.querySelector('input') ? -1 : 0;\n        }\n\n        // bind control variables to template parts\n        if (parts) {\n            for (let /** @type {?} */ part in parts) {\n                const /** @type {?} */ wjPart = parts[part];\n                this[part]   = tpl.querySelector('[wj-part=\"' + wjPart + '\"]');\n\n                // look in the root as well (querySelector doesn't...)\n                if (this[part] == null && tpl.getAttribute('wj-part') == wjPart) {\n                    this[part] = tpl;\n                }\n\n                // make sure we found the part\n                if (this[part] == null) {\n                    throw 'Missing template part: \"' + wjPart + '\"';\n                }\n\n                // copy/move attributes from host to input element\n                if (wjPart == namePart) {\n\n                    // copy parent element's name attribute to the namePart element\n                    // (to send data when submitting forms).\n                    let /** @type {?} */ att = host.attributes['name'];\n                    if (att && att.value) {\n                        this[part].setAttribute('name', att.value);\n                    }\n\n                    // transfer access key\n                    att = host.attributes['accesskey'];\n                    if (att && att.value) {\n                        this[part].setAttribute('accesskey', att.value);\n                        host.removeAttribute('accesskey');\n                    }\n                }\n            }\n        }\n\n        // return template\n        return tpl;\n    }\n/**\n * Disposes of the control by removing its association with the host element.\n * \n * The \\@see:dispose method automatically removes any event listeners added\n * with the \\@see:addEventListener method.\n * \n * Calling the \\@see:dispose method is important in applications that create\n * and remove controls dynamically. Failing to dispose of the controls may\n * cause memory leaks.\n * @return {?}\n */\ndispose() {\n\n        // dispose of any child controls\n        const /** @type {?} */ cc = this._e.querySelectorAll('.wj-control');\n        for (let /** @type {?} */ i = 0; i < cc.length; i++) {\n            const /** @type {?} */ ctl = Control.getControl(cc[i]);\n            if (ctl) {\n                ctl.dispose();\n            }\n        }\n\n        // cancel any pending refreshes\n        if (this._toInv) {\n            clearTimeout(this._toInv);\n        }\n\n        // remove all HTML event listeners\n        this.removeEventListener();\n\n        // remove all Wijmo event listeners\n        // (without getting the value for all properties)\n        for (var /** @type {?} */ prop in this) {\n            if (prop.length > 2 && prop.indexOf('on') == 0) {\n                var /** @type {?} */ evt = /** @type {?} */(( <Event>this[prop[2].toLowerCase() + prop.substr(3)]));\n                if (evt instanceof Event) {\n                    evt.removeAllHandlers();\n                }\n            }\n        }\n\n        // if the control has a collectionView property, remove handlers to stop receiving notifications\n        // REVIEW: perhaps optimize by caching the CollectionView properties?\n        const /** @type {?} */ cv = /** @type {?} */(( <CollectionView>this['collectionView']));\n        if (cv instanceof CollectionView) {\n            /*for (var prop in cv) {\n                var evt = <Event>cv[prop];\n                if (evt instanceof Event) {\n                    evt.removeHandler(null, this);\n                }\n            }\n\t\t\t*/\n        }\n\n        // restore original content\n        if (this._e.parentNode) {\n            this._e.outerHTML = this._orgOuter;\n        }\n\n        // done\n        this._e[Control._DATA_KEY] = null;\n        this._e = this._orgOuter = this._orgInner = this._orgAtts = this._orgTag = null;\n    }\n/**\n * Gets the control that is hosted in a given DOM element.\n * \n * @param {?} element The DOM element that is hosting the control, or a selector for the host element (e.g. '#theCtrl').\n * @return {?}\n */\nstatic getControl(element: any): Control {\n        const /** @type {?} */ e = getElement(element);\n        return e ? asType(e[Control._DATA_KEY], Control, true) : null;\n    }\n/**\n * Gets the DOM element that is hosting the control.\n * @return {?}\n */\nget hostElement(): HTMLElement {\n        return this._e;\n    }\n/**\n * Sets the focus to this control.\n * @return {?}\n */\nfocus() {\n        this._e.focus();\n    }\n/**\n * Checks whether this control contains the focused element.\n * @return {?}\n */\ncontainsFocus(): boolean {\n\n        // test for disposed controls\n        if (!this._e) {\n            return false;\n        }\n\n        // scan child controls (they may have popups, TFS 112676)\n        const /** @type {?} */ c = this._e.getElementsByClassName('wj-control');\n        for (let /** @type {?} */ i = 0; i < c.length; i++) {\n            const /** @type {?} */ ctl = Control.getControl(c[i]);\n            if (ctl && ctl != this && ctl.containsFocus()) {\n                return true;\n            }\n        }\n\n        // check for actual HTML containment\n        return contains(this._e, /** @type {?} */(( <HTMLElement>document.activeElement)));\n    }\n/**\n * Invalidates the control causing an asynchronous refresh.\n * \n * @param {?=} fullUpdate Whether to update the control layout as well as the content.\n * @return {?}\n */\ninvalidate(fullUpdate = true) {\n        this._fullUpdate = this._fullUpdate || fullUpdate;\n        if (this._toInv) {\n            clearTimeout(this._toInv);\n            this._toInv = null;\n        }\n        if (!this.isUpdating) {\n            this._toInv = window.setTimeout(() => {\n                this.refresh(this._fullUpdate);\n            }, Control._REFRESH_INTERVAL);\n        }\n    }\n/**\n * Refreshes the control.\n * \n * @param {?=} fullUpdate Whether to update the control layout as well as the content.\n * @return {?}\n */\nrefresh(fullUpdate = true) {\n        if (!this.isUpdating && this._toInv) {\n            clearTimeout(this._toInv);\n            this._toInv = null;\n            this._fullUpdate = false;\n        }\n        // derived classes should override this...\n    }\n/**\n * Invalidates all Wijmo controls contained in an HTML element.\n * \n * Use this method when your application has dynamic panels that change\n * the control's visibility or dimensions. For example, splitters, accordions,\n * and tab controls usually change the visibility of its content elements.\n * In this case, failing to notify the controls contained in the element\n * may cause them to stop working properly.\n * \n * If this happens, you must handle the appropriate event in the dynamic\n * container and call the \\@see:Control.invalidateAll method so the contained\n * Wijmo controls will update their layout information properly.\n * \n * @param {?=} e Container element. If set to null, all Wijmo controls\n * on the page will be invalidated.\n * @return {?}\n */\nstatic invalidateAll(e? : HTMLElement) {\n        if (!e) e = document.body;\n        const /** @type {?} */ ctl = Control.getControl(e);\n        if (ctl) {\n            ctl.invalidate();\n        }\n        if (e.children) {\n            for (let /** @type {?} */ i = 0; i < e.children.length; i++) {\n                Control.invalidateAll( /** @type {?} */((<HTMLElement>e.children[i])));\n            }\n        }\n    }\n/**\n * Refreshes all Wijmo controls contained in an HTML element.\n * \n * This method is similar to \\@see:invalidateAll, except the controls\n * are updated immediately rather than after an interval.\n * \n * @param {?=} e Container element. If set to null, all Wijmo controls\n * on the page will be invalidated.\n * @return {?}\n */\nstatic refreshAll(e?: HTMLElement) {\n        if (!e) e = document.body;\n        const /** @type {?} */ ctl = Control.getControl(e);\n        if (ctl) {\n            ctl.refresh();\n        }\n        if (e.children) {\n            for (let /** @type {?} */ i = 0; i < e.children.length; i++) {\n                Control.refreshAll( /** @type {?} */((<HTMLElement>e.children[i])));\n            }\n        }\n    }\n/**\n * Disposes of all Wijmo controls contained in an HTML element.\n * \n * @param {?=} e Container element.\n * @return {?}\n */\nstatic disposeAll(e?: HTMLElement) {\n        const /** @type {?} */ ctl = Control.getControl(e);\n        if (ctl) {\n            ctl.dispose();\n        } else if (e.children) {\n            for (let /** @type {?} */ i = 0; i < e.children.length; i++) {\n                Control.disposeAll( /** @type {?} */((<HTMLElement>e.children[i])));\n            }\n        }\n    }\n/**\n * Suspends notifications until the next call to \\@see:endUpdate.\n * @return {?}\n */\nbeginUpdate() {\n        this._updating++;\n    }\n/**\n * Resumes notifications suspended by calls to \\@see:beginUpdate.\n * @return {?}\n */\nendUpdate() {\n        this._updating--;\n        if (this._updating <= 0) {\n            this.invalidate();\n        }\n    }\n/**\n * Gets a value that indicates whether the control is currently being updated.\n * @return {?}\n */\nget isUpdating(): boolean {\n        return this._updating > 0;\n    }\n/**\n * Executes a function within a \\@see:beginUpdate/\\@see:endUpdate block.\n * \n * The control will not be updated until the function has been executed.\n * This method ensures \\@see:endUpdate is called even if the function throws.\n * \n * @param {?} fn Function to be executed.\n * @return {?}\n */\ndeferUpdate(fn: Function) {\n        try {\n            this.beginUpdate();\n            fn();\n        } finally {\n            this.endUpdate();\n        }\n    }\n/**\n * Gets a value that indicates whether the control is currently handling a touch event.\n * @return {?}\n */\nget isTouching(): boolean {\n        return Control._touching;\n    }\n/**\n * Gets or sets whether the control is disabled.\n * \n * Disabled controls cannot get mouse or keyboard events.\n * @return {?}\n */\nget disabled(): boolean {\n        return this._e && this._e.getAttribute('disabled') != null;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset disabled(value: boolean) {\n        value = asBoolean(value, true);\n        if (value != this.disabled) {\n            enable(this._e, !value);\n        }\n    }\n/**\n * Initializes the control by copying the properties from a given object.\n * \n * This method allows you to initialize controls using plain data objects\n * instead of setting the value of each property in code.\n * \n * For example:\n * <pre>\n * grid.initialize({\n *   itemsSource: myList,\n *   autoGenerateColumns: false,\n *   columns: [\n *     { binding: 'id', header: 'Code', width: 130 },\n *     { binding: 'name', header: 'Name', width: 60 }\n *   ]\n * });\n * // is equivalent to\n * grid.itemsSource = myList;\n * grid.autoGenerateColumns = false;\n * // etc.\n * </pre>\n * \n * The initialization data is type-checked as it is applied. If the\n * initialization object contains unknown property names or invalid\n * data types, this method will throw.\n * \n * @param {?} options Object that contains the initialization data.\n * @return {?}\n */\ninitialize(options: any) {\n        if (options) {\n            this.beginUpdate();\n            copy(this, options);\n            this.endUpdate();\n        }\n    }\n/**\n * Adds an event listener to an element owned by this \\@see:Control.\n * \n * The control keeps a list of attached listeners and their handlers,\n * making it easier to remove them when the control is disposed (see the\n * \\@see:dispose and \\@see:removeEventListener method).\n * \n * Failing to remove event listeners may cause memory leaks.\n * \n * @param {?} target Target element for the event.\n * @param {?} type String that specifies the event.\n * @param {?} fn Function to execute when the event occurs.\n * @param {?=} capture Whether the listener is capturing.\n * @return {?}\n */\naddEventListener(target: EventTarget, type: string, fn: any, capture = false) {\n            if (target) {\n                target.addEventListener(type, fn, capture);\n                if (this._listeners == null) {\n                    this._listeners = [];\n                }\n                this._listeners.push({ target: target, type: type, fn: fn, capture: capture });\n            }\n        }\n/**\n * Removes one or more event listeners attached to elements owned by this \\@see:Control.\n * \n * @param {?=} target Target element for the event. If null, removes listeners attached to all targets.\n * @param {?=} type String that specifies the event. If null, removes listeners attached to all events.\n * @param {?=} capture Whether the listener is capturing. If null, removes capturing and non-capturing listeners.\n * @return {?}\n */\nremoveEventListener(target?: EventTarget, type?: string, capture?: boolean) {\n        if (this._listeners) {\n            for (let /** @type {?} */ i = 0; i < this._listeners.length; i++) {\n                const /** @type {?} */ l = this._listeners[i];\n                if (target == null || target == l.target) {\n                    if (type == null || type == l.type) {\n                        if (capture == null || capture == l.capture) {\n                            l.target.removeEventListener(l.type, l.fn, l.capture);\n                            this._listeners.splice(i, 1);\n                            i--;\n                        }\n                    }\n                }\n            }\n        }\n    }\n/**\n * Occurs when the control gets the focus.\n */\ngotFocus = new Event();\n/**\n * Raises the \\@see:gotFocus event.\n * @param {?=} e\n * @return {?}\n */\nonGotFocus(e?: EventArgs) {\n        this.gotFocus.raise(this, e);\n    }\n/**\n * Occurs when the control loses the focus.\n */\nlostFocus = new Event();\n/**\n * Raises the \\@see:lostFocus event.\n * @param {?=} e\n * @return {?}\n */\nonLostFocus(e?: EventArgs) {\n        this.lostFocus.raise(this, e);\n    }\n/**\n * @return {?}\n */\n_handleResize() {\n        if (this._e.parentElement) {\n            const /** @type {?} */ sz = new Size(this._e.offsetWidth, this._e.offsetHeight);\n            if (!sz.equals(this._szCtl)) {\n                this._szCtl = sz;\n                this.invalidate();\n            }\n        }\n    }\n/**\n * @return {?}\n */\n_updateFocusState() {\n\n        // use a timeOut since Chrome and FF sometimes move the focus to the body\n        // before moving it to the new focused element\n        setTimeout(() => {\n\n            // update state for this control\n            const /** @type {?} */ focus = this.containsFocus();\n            if (focus != this._focus) {\n                this._focus = focus;\n                if (focus) {\n                    this.onGotFocus();\n                } else {\n                    this.onLostFocus();\n                }\n                toggleClass(this._e, 'wj-state-focused', focus);\n            }\n\n            // update state for any parent controls as well\n            if (this._e) {\n                for (let /** @type {?} */ e = this._e.parentElement; e; e = e.parentElement) {\n                    const /** @type {?} */ ctl = Control.getControl(e);\n                    if (ctl) {\n                        ctl._updateFocusState();\n                        break;\n                    }\n                }\n            }\n        });\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _handleTouchStart(e) {\n        if (e.pointerType == null || e.pointerType == 'touch') {\n            Control._touching = true;\n            console.log('touching = true');\n        }\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _handleTouchEnd(e) {\n        if (e.pointerType == null || e.pointerType == 'touch') {\n            setTimeout(function () {\n                Control._touching = false;\n                console.log('touching = false');\n            }, 400); // 300ms click event delay on IOS, plus some safety\n        }\n    }\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _handleDisabled(e: any) {\n        if (this.disabled) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n/**\n * @param {?} element\n * @return {?}\n */\nprivate _replaceWithDiv(element: HTMLElement) {\n\n        // replace the element\n        const /** @type {?} */ p   = element.parentElement, /** @type {?} */\n              div = document.createElement('div');\n        p.replaceChild(div, element);\n\n        // copy children\n        div.innerHTML = element.innerHTML;\n\n        // copy id and style, or all attributes\n        const /** @type {?} */ atts = element.attributes;\n        for (let /** @type {?} */ i = 0; i < atts.length; i++) {\n            const /** @type {?} */ name = atts[i].name;\n            if (name == 'id' || name == 'style') {\n                div.setAttribute(name, atts[i].value);\n            }\n        }\n\n        // return new div\n        return div;\n    }\n/**\n * @param {?} e\n * @return {?}\n */\n_copyOriginalAttributes(e: HTMLElement) {\n        const /** @type {?} */ atts = this._orgAtts;\n        if (atts) {\n            for (let /** @type {?} */ i = 0; i < atts.length; i++) {\n                const /** @type {?} */ name = atts[i].name.toLowerCase();\n                if (name != 'id' && name != 'style' && name != 'type') {\n                    e.setAttribute(name, atts[i].value);\n                }\n            }\n        }\n    }\n}\n\nfunction Control_tsickle_Closure_declarations() {\n/** @type {?} */\nControl._DATA_KEY;\n/** @type {?} */\nControl._REFRESH_INTERVAL;\n/** @type {?} */\nControl._wme;\n/** @type {?} */\nControl._touching;\n/** @type {?} */\nControl.prototype._focus;\n/** @type {?} */\nControl.prototype._updating;\n/** @type {?} */\nControl.prototype._fullUpdate;\n/** @type {?} */\nControl.prototype._toInv;\n/** @type {?} */\nControl.prototype._szCtl;\n/** @type {?} */\nControl.prototype._e;\n/** @type {?} */\nControl.prototype._orgOuter;\n/** @type {?} */\nControl.prototype._orgInner;\n/** @type {?} */\nControl.prototype._listeners;\n/** @type {?} */\nControl.prototype._orgTag;\n/** @type {?} */\nControl.prototype._orgAtts;\n/**\n * Occurs when the control gets the focus.\n * @type {?}\n */\nControl.prototype.gotFocus;\n/**\n * Occurs when the control loses the focus.\n * @type {?}\n */\nControl.prototype.lostFocus;\n}\n\n","\n/**\n * Creates an element from an HTML string.\n * \n * @param {?} html HTML fragment to convert into an HTMLElement.\n * @return {?} The new element.\n */\nexport function createElement(html: string) : HTMLElement {\n    const /** @type {?} */ div     = document.createElement('div');\n    div.innerHTML = html;\n    return /** @type {?} */(( <HTMLElement>div.removeChild(div.firstChild)));\n}\n","import {toggleClass} from './toggle-class';\n/**\n * Enables or disables an element.\n * \n * @param {?} e Element to enable or disable.\n * @param {?} enable Whether to enable or disable the element.\n * @return {?}\n */\nexport function enable(e: HTMLElement, enable: boolean) {\n    if (enable) {\n        e.removeAttribute('disabled');\n    } else {\n        e.setAttribute('disabled', 'true');\n    }\n    toggleClass(e, 'wj-state-disabled', !enable);\n}\n","import {isObject} from './lang/is-object';\nimport {isFunction} from './lang/is-function';\nimport {assert} from './asserts/assert';\n/**\n * Copies properties from an object to another.\n * \n * This method is typically used to initialize controls and other Wijmo objects\n * by setting their properties and assigning event handlers.\n * \n * The destination object must define all the properties defined in the source,\n * or an error will be thrown.\n * \n * @param {?} dst The destination object.\n * @param {?} src The source object.\n * @return {?}\n */\nexport function copy(dst: any, src: any) {\n    for (let /** @type {?} */ key in src) {\n        assert(key in dst, 'Unknown key \"' + key + '\".');\n        const /** @type {?} */ value = src[key];\n        if (!dst._copy || !dst._copy(key, value)) { // allow overrides\n            if (dst[key] instanceof Event && isFunction(value)) {\n                dst[key].addHandler(value); // add event handler\n            } else if (isObject(value) && dst[key]) {\n                copy(dst[key], value); // copy sub-objects\n            } else {\n                dst[key] = value; // assign values\n            }\n        }\n    }\n}\n","\nexport type Key = number;\nexport let Key: any = {};\nKey.Back = 8;\nKey.Tab = 9;\nKey.Enter = 13;\nKey.Escape = 27;\nKey.Space = 32;\nKey.PageUp = 33;\nKey.PageDown = 34;\nKey.End = 35;\nKey.Home = 36;\nKey.Left = 37;\nKey.Up = 38;\nKey.Right = 39;\nKey.Down = 40;\nKey.Delete = 46;\nKey.F1 = 112;\nKey.F2 = 113;\nKey.F3 = 114;\nKey.F4 = 115;\nKey.F5 = 116;\nKey.F6 = 117;\nKey.F7 = 118;\nKey.F8 = 119;\nKey.F9 = 120;\nKey.F10 = 121;\nKey.F11 = 122;\nKey.F12 = 123;\nKey[Key.Back] = \"Back\";\nKey[Key.Tab] = \"Tab\";\nKey[Key.Enter] = \"Enter\";\nKey[Key.Escape] = \"Escape\";\nKey[Key.Space] = \"Space\";\nKey[Key.PageUp] = \"PageUp\";\nKey[Key.PageDown] = \"PageDown\";\nKey[Key.End] = \"End\";\nKey[Key.Home] = \"Home\";\nKey[Key.Left] = \"Left\";\nKey[Key.Up] = \"Up\";\nKey[Key.Right] = \"Right\";\nKey[Key.Down] = \"Down\";\nKey[Key.Delete] = \"Delete\";\nKey[Key.F1] = \"F1\";\nKey[Key.F2] = \"F2\";\nKey[Key.F3] = \"F3\";\nKey[Key.F4] = \"F4\";\nKey[Key.F5] = \"F5\";\nKey[Key.F6] = \"F6\";\nKey[Key.F7] = \"F7\";\nKey[Key.F8] = \"F8\";\nKey[Key.F9] = \"F9\";\nKey[Key.F10] = \"F10\";\nKey[Key.F11] = \"F11\";\nKey[Key.F12] = \"F12\";\n","import {Color} from '../../core';\nimport {Control} from '../Control';\n//import {showPopup, hidePopup} from '../../core/popup'\n\nimport {setSelectionRange} from '../../core';\nimport {CancelEventArgs} from '../../eventArgs/CancelEventArgs';\nimport {asBoolean} from '../../core';\nimport {EventArgs} from '../../eventArgs/EventArgs';\nimport {contains} from '../../core';\nimport {Key} from '../../enum/Key';\nimport {Event} from '../../event/Event';\n/**\n * DropDown control (abstract).\n * \n * Contains an input element and a button used to show or hide the drop-down.\n * \n * Derived classes must override the _createDropDown method to create whatever\n * editor they want to show in the drop down area (a list of items, a calendar,\n * a color editor, etc).\n */\nexport class DropDown extends Control {\n\n    // child elements\n    _tbx: HTMLInputElement;\n    _elRef: HTMLElement;\n    _btn: HTMLElement;\n    _dropDown: HTMLElement;\n\n    // property storage\n    _showBtn    = true;\n    _autoExpand = true;\n\n    // private stuff\n    _oldText: string;\n/**\n * Gets or sets the template used to instantiate \\@see:DropDown controls.\n */\nstatic controlTemplate = '<div style=\"position:relative\" class=\"wj-template\">' +\n        '<div class=\"wj-input\">' +\n        '<div class=\"wj-input-group wj-input-btn-visible\">' +\n        '<input wj-part=\"input\" type=\"text\" class=\"wj-form-control\" />' +\n        '<span wj-part=\"btn\" class=\"wj-input-group-btn\" tabindex=\"-1\">' +\n        '<button class=\"wj-btn wj-btn-default\" type=\"button\" tabindex=\"-1\">' +\n        '<span class=\"wj-glyph-down\"></span>' +\n        '</button>' +\n        '</span>' +\n        '</div>' +\n        '</div>' +\n        '<div wj-part=\"dropdown\" class=\"wj-content wj-dropdown-panel\" ' +\n        'style=\"display:none;position:absolute;z-index:100;width:auto\">' +\n        '</div>' +\n        '</div>';\n/**\n * Initializes a new instance of a \\@see:DropDown control.\n * \n * @param {?} element The DOM element that hosts the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options The JavaScript object containing initialization data for the control.\n */\nconstructor(element: any, options?) {\n        super(element, null, true);\n\n        // instantiate and apply template\n        const tpl = this.getTemplate();\n        this.applyTemplate(\n            'wj-control wj-dropdown wj-content', tpl, {\n                _tbx     : 'input',\n                _btn     : 'btn',\n                _dropDown: 'dropdown'\n            }, 'input'\n        );\n\n        // set reference element (used for positioning the drop-down)\n        this._elRef = this._tbx;\n\n        // disable autocomplete (important for mobile browsers including Chrome/Android)\n        this._tbx.autocomplete = 'off';\n\n        // create drop-down element, update button display\n        this._createDropDown();\n        this._updateBtn();\n\n        // update focus state when the drop-down loses focus\n        this.addEventListener(\n            this._dropDown, 'blur', () => {\n                this._updateFocusState();\n            }, true\n        );\n\n        // keyboard events (the same handlers are used for the control and for the drop-down)\n        const kd = this._keydown.bind(this);\n        this.addEventListener(this.hostElement, 'keydown', kd);\n        this.addEventListener(this.dropDown, 'keydown', kd);\n\n        // textbox events\n        this.addEventListener(\n            this._tbx, 'input', () => {\n                this._setText(this.text, false);\n            }\n        );\n        this.addEventListener(\n            this._tbx, 'click', () => {\n                if (this._autoExpand) {\n                    this._expandSelection(); // expand the selection to the whole number/word that was clicked\n                }\n            }\n        );\n\n        // in case the drop-down is shown but the control is not (e.g. context menu)\n        this.addEventListener(\n            this.dropDown, 'focus', () => {\n                this._updateFocusState();\n            }\n        );\n\n        // IE 9 does not fire an input event when the user removes characters from input\n        // filled by keyboard, cut, or drag operations.\n        // https://developer.mozilla.org/en-US/docs/Web/Events/input\n        // so subscribe to keyup and set the text just in case (TFS 111189)\n        if (document.doctype && navigator.appVersion.indexOf('MSIE 9') > -1) {\n            this.addEventListener(\n                this._tbx, 'keyup', () => {\n                    this._setText(this.text, false);\n                }\n            );\n        }\n\n        // handle clicks on the drop-down button\n        this.addEventListener(this._btn, 'click', this._btnclick.bind(this));\n\n        // stop propagation of clicks on the drop-down element\n        // (since they are not children of the hostElement, which can confuse\n        // elements such as Bootstrap menus)\n        this.addEventListener(\n            this._dropDown, 'click', (e) => {\n                e.stopPropagation();\n            }\n        );\n\n        // initializing from <input> tag\n        if (this._orgTag == 'INPUT') {\n            this._copyOriginalAttributes(this._tbx);\n        }\n    }\n/**\n * Gets or sets the text shown on the control.\n * @return {?}\n */\nget text(): string {\n        return this._tbx.value;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset text(value: string) {\n        if (value != this.text) {\n            this._setText(value, true);\n        }\n    }\n/**\n * Gets the HTML input element hosted by the control.\n * \n * Use this property in situations where you want to customize the\n * attributes of the input element.\n * @return {?}\n */\nget inputElement(): HTMLInputElement {\n        return this._tbx;\n    }\n/**\n * Gets or sets the string shown as a hint when the control is empty.\n * @return {?}\n */\nget placeholder(): string {\n        return this._tbx.placeholder;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset placeholder(value: string) {\n        this._tbx.placeholder = value;\n    }\n/**\n * Gets or sets a value that indicates whether the drop down is currently visible.\n * @return {?}\n */\nget isDroppedDown(): boolean {\n        return this._dropDown.style.display != 'none';\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset isDroppedDown(value: boolean) {\n        value = asBoolean(value) && !this.disabled;\n\t\tconsole.log(\"is_dropped_down\");\n        if (value != this.isDroppedDown && this.onIsDroppedDownChanging(new CancelEventArgs())) {\n            const /** @type {?} */ dd = this._dropDown;\n            if (value) {\n                if (!dd.style.minWidth) {\n                    dd.style.minWidth = this.hostElement.getBoundingClientRect().width + 'px';\n                }\n\t\t\t\tconsole.log(\"dropped_down_setting_block\");\n                dd.style.display = 'block';\n                this._updateDropDown();\n            } else {\n                if (this.containsFocus()) {\n                    if (!this.isTouching || !this.showDropDownButton) {\n                        this.selectAll();\n                    }\n                }\n               // hidePopup(dd);\n\t\t\t   console.log(\"dropped_down_setting_none\");\n\t\t\t      dd.style.display='none';\n            }\n            this._updateFocusState();\n            this.onIsDroppedDownChanged();\n        }\n    }\n/**\n * Gets the drop down element shown when the \\@see:isDroppedDown\n * property is set to true.\n * @return {?}\n */\nget dropDown(): HTMLElement {\n        return this._dropDown;\n    }\n/**\n * Gets or sets a value that indicates whether the control should display a drop-down button.\n * @return {?}\n */\nget showDropDownButton(): boolean {\n        return this._showBtn;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset showDropDownButton(value: boolean) {\n        this._showBtn = asBoolean(value);\n        this._updateBtn();\n    }\n/**\n * Gets or sets a value that indicates whether the control should automatically expand the\n * selection to whole words/numbers when the control is clicked.\n * @return {?}\n */\nget autoExpandSelection(): boolean {\n        return this._autoExpand;\n    }\n/**\n * @param {?} value\n * @return {?}\n */\nset autoExpandSelection(value: boolean) {\n        this._autoExpand = asBoolean(value);\n    }\n/**\n * Sets the focus to the control and selects all its content.\n * @return {?}\n */\nselectAll() {\n        if (this._elRef == this._tbx) {\n            setSelectionRange(this._tbx, 0, this.text.length);\n        }\n    }\n/**\n * Occurs when the value of the \\@see:text property changes.\n */\ntextChanged = new Event();\n/**\n * Raises the \\@see:textChanged event.\n * @param {?=} e\n * @return {?}\n */\nonTextChanged(e?: EventArgs) {\n        this.textChanged.raise(this, e);\n    }\n/**\n * Occurs before the drop down is shown or hidden.\n */\nisDroppedDownChanging = new Event();\n/**\n * Raises the \\@see:isDroppedDownChanging event.\n * @param {?} e\n * @return {?}\n */\nonIsDroppedDownChanging(e: CancelEventArgs): boolean {\n        this.isDroppedDownChanging.raise(this, e);\n        return !e.cancel;\n    }\n/**\n * Occurs after the drop down is shown or hidden.\n */\nisDroppedDownChanged = new Event();\n/**\n * Raises the \\@see:isDroppedDownChanged event.\n * @param {?=} e\n * @return {?}\n */\nonIsDroppedDownChanged(e?: EventArgs) {\n        this.isDroppedDownChanged.raise(this, e);\n    }\n/**\n * @param {?=} e\n * @return {?}\n */\nonGotFocus(e?: EventArgs) {\n        if (!this.isTouching) {\n            this.selectAll();\n        }\n        super.onGotFocus(e);\n    }\n/**\n * @param {?=} e\n * @return {?}\n */\nonLostFocus(e?: EventArgs) {\n        this._commitText();\n        if (!this.containsFocus()) {\n            this.isDroppedDown = false;\n        }\n        super.onLostFocus(e);\n    }\n/**\n * @return {?}\n */\ncontainsFocus(): boolean {\n        return super.containsFocus() || contains(this._dropDown, document.activeElement);\n    }\n/**\n * @return {?}\n */\ndispose() {\n        this.isDroppedDown = false;\n        super.dispose();\n    }\n/**\n * @param {?=} fullUpdate\n * @return {?}\n */\nrefresh(fullUpdate = true) {\n        super.refresh(fullUpdate);\n\n        // update popup/focus\n        if (this.isDroppedDown) {\n            if (getComputedStyle(this.hostElement).display != 'none') {\n                const /** @type {?} */ ae = /** @type {?} */(( <HTMLElement>document.activeElement));\n               // showPopup(this._dropDown, this.hostElement);\n                if (ae instanceof HTMLElement && ae != document.activeElement) {\n                    ae.focus();\n                }\n            }\n        }\n    }\n/**\n * @return {?}\n */\n_handleResize() {\n        if (this.isDroppedDown) {\n            this.refresh();\n        }\n    }\n/**\n * @return {?}\n */\n_expandSelection() {\n        const /** @type {?} */ tbx = this._tbx, /** @type {?} */\n              val = tbx.value;\n        let /** @type {?} */ start = tbx.selectionStart, /** @type {?} */\n              end = tbx.selectionEnd;\n        if (val && start == end) {\n            const /** @type {?} */ ct = this._getCharType(val, start);\n            if (ct > -1) {\n                for (; end < val.length; end++) {\n                    if (this._getCharType(val, end) != ct) {\n                        break;\n                    }\n                }\n                for (; start > 0; start--) {\n                    if (this._getCharType(val, start - 1) != ct) {\n                        break;\n                    }\n                }\n                if (start != end) {\n                    tbx.setSelectionRange(start, end);\n                }\n            }\n        }\n    }\n/**\n * @param {?} text\n * @param {?} pos\n * @return {?}\n */\n_getCharType(text: string, pos: number) {\n        const /** @type {?} */ chr = text[pos];\n        if (chr >= '0' && chr <= '9') return 0;\n        if ((chr >= 'a' && chr <= 'z') || (chr >= 'A' && chr <= 'Z')) return 1;\n        return -1;\n    }\n/**\n * @param {?} e\n * @return {?}\n */\n_keydown(e: KeyboardEvent) {\n\n        // honor defaultPrevented\n        if (e.defaultPrevented) return;\n\n        // handle key\n        switch (e.keyCode) {\n\n            // close dropdown on tab, escape, enter\n            case Key.Tab:\n            case Key.Escape:\n            case Key.Enter:\n                this.isDroppedDown = false;\n                break;\n\n            // toggle drop-down on F4, alt up/down\n            case Key.F4:\n            case Key.Down:\n            case Key.Up:\n                if (e.keyCode == Key.F4 || e.altKey) {\n                    this.isDroppedDown = !this.isDroppedDown;\n                    if (!this.isDroppedDown) {\n                        this._tbx.focus();\n                    }\n                    e.preventDefault();\n                }\n                break;\n        }\n    }\n/**\n * @param {?} e\n * @return {?}\n */\n_btnclick(e: MouseEvent) {\n        this.isDroppedDown = !this.isDroppedDown;\n    }\n/**\n * @param {?} text\n * @param {?} fullMatch\n * @return {?}\n */\n_setText(text: string, fullMatch: boolean) {\n\n        // make sure we have a string\n        if (text == null) text = '';\n        text = text.toString();\n\n        // update element\n        if (text != this._tbx.value) {\n            this._tbx.value = text;\n        }\n\n        // fire change event\n        if (text != this._oldText) {\n            this._oldText = text;\n            this.onTextChanged();\n        }\n    }\n/**\n * @return {?}\n */\n_updateBtn() {\n        this._btn.tabIndex      = -1;\n        this._btn.style.display = this._showBtn ? '' : 'none';\n    }\n/**\n * @return {?}\n */\n_createDropDown() {\n        // override in derived classes\n    }\n/**\n * @return {?}\n */\n_commitText() {\n        // override in derived classes\n    }\n/**\n * @return {?}\n */\n_updateDropDown() {\n        if (this.isDroppedDown) {\n            this._commitText();\n           // showPopup(this._dropDown, this.hostElement);\n\t\t   console.log(\"dropped_down_1\");\n        }else{\n\t\tconsole.log(\"dropped_down_2\");\n\t\t}\n    }\n}\n\nfunction DropDown_tsickle_Closure_declarations() {\n/**\n * Gets or sets the template used to instantiate \\@see:DropDown controls.\n * @type {?}\n */\nDropDown.controlTemplate;\n/** @type {?} */\nDropDown.prototype._tbx;\n/** @type {?} */\nDropDown.prototype._elRef;\n/** @type {?} */\nDropDown.prototype._btn;\n/** @type {?} */\nDropDown.prototype._dropDown;\n/** @type {?} */\nDropDown.prototype._showBtn;\n/** @type {?} */\nDropDown.prototype._autoExpand;\n/** @type {?} */\nDropDown.prototype._oldText;\n/**\n * Occurs when the value of the \\@see:text property changes.\n * @type {?}\n */\nDropDown.prototype.textChanged;\n/**\n * Occurs before the drop down is shown or hidden.\n * @type {?}\n */\nDropDown.prototype.isDroppedDownChanging;\n/**\n * Occurs after the drop down is shown or hidden.\n * @type {?}\n */\nDropDown.prototype.isDroppedDownChanged;\n}\n\n","import {asNumber, asType} from '../core/index';\nimport {EventArgs} from '../eventArgs/EventArgs';\n/**\n * Provides arguments for the \\@see:formatItem event.\n */\nexport class FormatItemEventArgs extends EventArgs {\n\t_index: number;\n\t_data: any;\n\t_item: HTMLElement;\n/**\n * Initializes a new instance of a \\@see:FormatItemEventArgs.\n * \n * @param {?} index Index of the item being formatted.\n * @param {?} data Data item being formatted.\n * @param {?} item Element that represents the list item to be formatted.\n */\nconstructor(index: number, data: any, item: HTMLElement) {\n\t\tsuper();\n\t\tthis._index = asNumber(index);\n\t\tthis._data = data;\n\t\tthis._item = asType(item, HTMLElement);\n\t}\n/**\n * Gets the index of the data item in the list.\n * @return {?}\n */\nget index():  number {\n\t\treturn this._index;\n\t}\n/**\n * Gets the data item being formatted.\n * @return {?}\n */\nget data(): any {\n\t\treturn this._data;\n\t}\n/**\n * Gets a reference to the element that represents the list item to be formatted.\n * @return {?}\n */\nget item(): HTMLElement {\n\t\treturn this._item;\n\t}\n}\n\nfunction FormatItemEventArgs_tsickle_Closure_declarations() {\n/** @type {?} */\nFormatItemEventArgs.prototype._index;\n/** @type {?} */\nFormatItemEventArgs.prototype._data;\n/** @type {?} */\nFormatItemEventArgs.prototype._item;\n}\n\n","\nimport {Color} from '../../core';\nimport {Control} from '../Control';\nimport {isPresent} from '../../core';\nimport {FormatItemEventArgs} from './../FormatItemEventArgs';\nimport {asCollectionView} from '../../core';\nimport {asFunction} from '../../core';\nimport {asString} from '../../core';\nimport {hasItems} from '../../core';\nimport {asNumber} from '../../core';\nimport {toggleClass} from '../../core';\nimport {contains} from '../../core';\nimport {isObject} from '../../core';\nimport {asArray} from '../../core';\nimport {EventArgs} from '../../eventArgs/EventArgs';\nimport {escapeHtml} from '../../core';\nimport {hasClass} from '../../core';\nimport {Key} from '../../enum/Key';\nimport {tryCast} from '../../core';\nimport {Event} from '../../event/Event';\nimport {asBoolean} from '../../core';\n\nimport {ICollectionView} from '../../collections/interface/ICollectionView';\nimport {IEditableCollectionView} from '../../collections/interface/IEditableCollectionView';\nimport {NotifyCollectionChangedEventArgs} from '../../collections/eventArgs/NotifyCollectionChangedEventArgs';\nimport {Subscription} from 'rxjs/Subscription';\n/**\n * The \\@see:ListBox control displays a list of items which may contain\n * plain text or HTML, and allows users to select items with the mouse or\n * the keyboard.\n * \n * Use the \\@see:selectedIndex property to determine which item is currently\n * selected.\n * \n * You can populate a \\@see:ListBox using an array of strings or you can use\n * an array of objects, in which case the \\@see:displayPath property determines\n * which object property is displayed on the list.\n * \n * To display HTML rather than plain text, set the \\@see:isContentHtml property\n * to true.\n * \n * The example below creates a \\@see:ListBox control and populates it using\n * a 'countries' array. The control updates its \\@see:selectedIndex and\n * \\@see:selectedItem properties as the user moves the selection.\n * \n * \\@fiddle:8HnLx\n */\nexport class ListBox extends Control {\n\n\t// property storage\n\t_items: any; // any[] or ICollectionView\n\t_cv: ICollectionView;\n\t_itemFormatter: Function;\n\t_pathDisplay: string;\n\t_pathValue: string;\n\t_pathChecked: string;\n\t_html = false;\n\n\t// work variables\n\t_checking: boolean;\n\t_search = '';\n\t_toSearch: number;\nprivate subscription1 = new Subscription();\nprivate subscription2 = new Subscription();\n/**\n * Initializes a new instance of a \\@see:ListBox.\n * \n * @param {?} element The DOM element that hosts the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options The JavaScript object containing initialization data for the control.\n */\nconstructor(element: any, options?) {\n\t\tsuper(element);\n\n\t\t// instantiate and apply template\n\t\tthis.applyTemplate('wj-control wj-listbox wj-content', null, null);\n\n\t\t// initializing from <select> tag\n\t\tif (this._orgTag == 'SELECT') {\n\t\t\tthis._copyOriginalAttributes(this.hostElement);\n\t\t\tthis._populateSelectElement(this.hostElement);\n\t\t}\n\n\t\t// handle mouse and keyboard\n\t\tconst host = this.hostElement;\n\t\tthis.addEventListener(host, 'click', this._click.bind(this));\n\t\tthis.addEventListener(host, 'keydown', this._keydown.bind(this));\n\t\tthis.addEventListener(host, 'keypress', this._keypress.bind(this));\n\n\t\t// prevent wheel from propagating to parent elements\n\t\tthis.addEventListener(host, 'onmousewheel' in document ? 'mousewheel' : 'DOMMouseScroll', (e: MouseWheelEvent) => {\n\t\t\tif (host.scrollHeight > host.clientHeight) {\n\t\t\t\tif ((e.wheelDelta > 0 && host.scrollTop == 0) ||\n\t\t\t\t\t(e.wheelDelta < 0 && host.scrollTop + host.clientHeight >= host.scrollHeight)) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// initialize control options\n\t\tthis.initialize(options);\n\t}\n/**\n * Refreshes the list.\n * @return {?}\n */\nrefresh() {\n\t\tsuper.refresh();\n\t\tthis._populateList();\n\t}\n/**\n * Gets or sets the array or \\@see:ICollectionView object that contains the list items.\n * @return {?}\n */\nget itemsSource(): any {\n\t\treturn this._items;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset itemsSource(value: any) {\n\t\tif (this._items != value) {\n\n\t\t\t// unbind current collection view\n\t\t\tif (this._cv) {\n\t\t\t\tthis.subscription1.unsubscribe();\n\t\t\t\tthis.subscription2.unsubscribe();\n\t\t\t\t//this._cv.collectionChanged.removeHandler(this._cvCollectionChanged, this);\n\t\t\t\tthis._cv = null;\n\t\t\t}\n\n\t\t\t// save new data source and collection view\n\t\t\tthis._items = value;\n\t\t\tthis._cv = asCollectionView(value);\n\n\t\t\t// bind new collection view\n\t\t\tif (this._cv != null) {\n\t\t\t\tthis.subscription1 = this._cv.currentChanged.subscribe(data => this._cvCurrentChanged(this,data));\n\t\t\t\tthis.subscription2 = this._cv.collectionChanged.subscribe(data => this._cvCollectionChanged(this,data));\n\t\t\t}\n\n\t\t\t// update the list\n\t\t\tthis._populateList();\n\t\t\tthis.onItemsChanged();\n\t\t\tthis.onSelectedIndexChanged();\n\t\t}\n\t}\n/**\n * @param {?} index\n * @return {?}\n */\nprivate removeAt(index : number){\n\t\tconst /** @type {?} */ ecv = /** @type {?} */(( <IEditableCollectionView>tryCast(this._cv, 'IEditableCollectionView')));\n\t\tecv.removeAt(index);\n\t}\n/**\n * Gets the \\@see:ICollectionView object used as the item source.\n * @return {?}\n */\nget collectionView(): ICollectionView {\n\t\treturn this._cv;\n\t}\n/**\n * Gets or sets a value indicating whether items contain plain text or HTML.\n * @return {?}\n */\nget isContentHtml(): boolean {\n\t\treturn this._html;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset isContentHtml(value: boolean) {\n\t\tif (value != this._html) {\n\t\t\tthis._html = asBoolean(value);\n\t\t\tthis._populateList();\n\t\t}\n\t}\n/**\n * Gets or sets a function used to customize the values shown on the list.\n * The function takes two arguments, the item index and the default text or html, and\n * returns the new text or html to display.\n * \n * If the formatting function needs a scope (i.e. a meaningful 'this'\n * value), then remember to set the filter using the 'bind' function to\n * specify the 'this' object. For example:\n * \n * <pre>\n *   listBox.itemFormatter = customItemFormatter.bind(this);\n *   function customItemFormatter(index, content) {\n *     if (this.makeItemBold(index)) {\n *       content = '&lt;b&gt;' + content + '&lt;/b&gt;';\n *     }\n *     return content;\n *   }\n * </pre>\n * @return {?}\n */\nget itemFormatter(): Function {\n\t\treturn this._itemFormatter;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset itemFormatter(value: Function) {\n\t\tif (value != this._itemFormatter) {\n\t\t\tthis._itemFormatter = asFunction(value);\n\t\t\tthis._populateList();\n\t\t}\n\t}\n/**\n * Gets or sets the name of the property to use as the visual representation of the items.\n * @return {?}\n */\nget displayMemberPath(): string {\n\t\treturn this._pathDisplay;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset displayMemberPath(value: string) {\n\t\tif (value != this._pathDisplay) {\n\t\t\tthis._pathDisplay = asString(value);\n\t\t\tthis._populateList();\n\t\t}\n\t}\n/**\n * Gets or sets the name of the property used to get the \\@see:selectedValue\n * from the \\@see:selectedItem.\n * @return {?}\n */\nget selectedValuePath(): string {\n\t\treturn this._pathValue;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValuePath(value: string) {\n\t\tthis._pathValue = asString(value);\n\t}\n/**\n * Gets or sets the name of the property used to control the checkboxes\n * placed next to each item.\n * \n * Use this property to create multi-select lisboxes.\n * When an item is checked or unchecked, the control raises the \\@see:itemChecked event.\n * Use the \\@see:selectedItem property to retrieve the item that was checked or unchecked,\n * or use the \\@see:checkedItems property to retrieve the list of items that are currently\n * checked.\n * @return {?}\n */\nget checkedMemberPath() {\n\t\treturn this._pathChecked;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset checkedMemberPath(value: string) {\n\t\tif (value != this._pathChecked) {\n\t\t\tthis._pathChecked = asString(value);\n\t\t\tthis._populateList();\n\t\t}\n\t}\n/**\n * Gets the string displayed for the item at a given index.\n * \n * The string may be plain text or HTML, depending on the setting\n * of the \\@see:isContentHtml property.\n * \n * @param {?} index The index of the item.\n * @return {?}\n */\ngetDisplayValue(index: number): string {\n\n\t\t// get the text or html\n\t\tlet /** @type {?} */ item = null;\n\t\tif (index > -1 && hasItems(this._cv)) {\n\t\t\titem = this._cv.items[index];\n\t\t\tif (this.displayMemberPath) {\n\t\t\t\titem = item[this.displayMemberPath];\n\t\t\t}\n\t\t}\n\t\tlet /** @type {?} */ text = item != null ? item.toString() : '';\n\n\t\t// allow caller to override/modify the text or html\n\t\tif (this.itemFormatter) {\n\t\t\ttext = this.itemFormatter(index, text);\n\t\t}\n\n\t\t// return the result\n\t\treturn text;\n\t}\n/**\n * Gets the text displayed for the item at a given index (as plain text).\n * \n * @param {?} index The index of the item.\n * @return {?}\n */\ngetDisplayText(index: number): string {\n\t\tconst /** @type {?} */ children = this.hostElement.children, /** @type {?} */\n              item     = index > -1 && index < children.length\n                  ? /** @type {?} */(( <HTMLElement>children[index]))\n                  : null;\n\t\treturn item != null ? item.textContent : '';\n\t}\n/**\n * Gets or sets the index of the currently selected item.\n * @return {?}\n */\nget selectedIndex(): number {\n\t\treturn this._cv ? this._cv.currentPosition : -1;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number) {\n\t\tif (this._cv) {\n\t\t\tthis._cv.moveCurrentToPosition(asNumber(value));\n\t\t}\n\t}\n/**\n * Gets or sets the item that is currently selected.\n * @return {?}\n */\nget selectedItem(): any {\n\t\treturn this._cv ? this._cv.currentItem: null;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedItem(value: any) {\n\t\tif (this._cv) {\n\t\t\tthis._cv.moveCurrentTo(value);\n\t\t}\n\t}\n/**\n * Gets or sets the value of the \\@see:selectedItem obtained using the \\@see:selectedValuePath.\n * @return {?}\n */\nget selectedValue(): any {\n\t\tlet /** @type {?} */ item = this.selectedItem;\n\t\tif (item && this.selectedValuePath) {\n\t\t\titem = item[this.selectedValuePath];\n\t\t}\n\t\treturn item;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValue(value: any) {\n\t\tlet /** @type {?} */ path  = this.selectedValuePath, /** @type {?} */\n            index = -1;\n\t\tif (this._cv) {\n\t\t\tfor (let /** @type {?} */ i = 0; i < this._cv.items.length; i++) {\n\t\t\t\tconst /** @type {?} */ item = this._cv.items[i];\n\t\t\t\tif ((path && item[path] == value) || (!path && item == value)) {\n\t\t\t\t\tindex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.selectedIndex = index;\n\t\t}\n\t}\n/**\n * Gets or sets the maximum height of the list.\n * @return {?}\n */\nget maxHeight(): number {\n\t\tconst /** @type {?} */ host = this.hostElement;\n\t\treturn host ? parseFloat(host.style.maxHeight) : null;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset maxHeight(value: number) {\n\t\tconst /** @type {?} */ host = this.hostElement;\n\t\tif (host) {\n\t\t\thost.style.maxHeight = asNumber(value) + 'px';\n\t\t}\n\t}\n/**\n * Highlights the selected item and scrolls it into view.\n * @return {?}\n */\nshowSelection() {\n\t\tconst /** @type {?} */ index    = this.selectedIndex, /** @type {?} */\n              host     = this.hostElement, /** @type {?} */\n              children = host.children;\n        let /** @type {?} */ e: HTMLElement;\n\n\t\t// highlight\n\t\tfor (let /** @type {?} */ i = 0; i < children.length; i++) {\n\t\t\te = /** @type {?} */(( <HTMLElement>children[i]));\n\t\t\ttoggleClass(e, 'wj-state-selected', i == index);\n\t\t}\n\n\t\t// scroll into view\n\t\tif (index > -1 && index < children.length) {\n\t\t\te = /** @type {?} */(( <HTMLElement>children[index]));\n\t\t\tconst /** @type {?} */ rco = e.getBoundingClientRect();\n\t\t\tconst /** @type {?} */ rcc = this.hostElement.getBoundingClientRect();\n\t\t\tif (rco.bottom > rcc.bottom) {\n\t\t\t\thost.scrollTop += rco.bottom - rcc.bottom;\n\t\t\t} else if (rco.top < rcc.top) {\n\t\t\t\thost.scrollTop -= rcc.top - rco.top;\n\t\t\t}\n\t\t}\n\n\t\t// make sure the focus is within the selected element (TFS 135278)\n\t\tif (index > -1 && this.containsFocus()) {\n\t\t\te = /** @type {?} */(( <HTMLElement>children[index]));\n\t\t\tif (e instanceof HTMLElement && !contains(e, document.activeElement)) {\n\t\t\t\te.focus();\n\t\t\t}\n\t\t}\n\t}\n/**\n * Gets the checked state of an item on the list.\n * \n * This method is applicable only on multi-select listboxes\n * (see the \\@see:checkedMemberPath property).\n * \n * @param {?} index Item index.\n * @return {?}\n */\ngetItemChecked(index: number): boolean {\n\t\tconst /** @type {?} */ item = this._cv.items[index];\n\t\tif (isObject(item) && this.checkedMemberPath) {\n\t\t\treturn item[this.checkedMemberPath];\n\t\t}\n\t\tconst /** @type {?} */ cb = this._getCheckbox(index);\n\t\treturn cb ? cb.checked : false;\n\t}\n/**\n * Sets the checked state of an item on the list.\n * \n * This method is applicable only on multi-select listboxes\n * (see the \\@see:checkedMemberPath property).\n * \n * @param {?} index Item index.\n * @param {?} checked Item's new checked state.\n * @return {?}\n */\nsetItemChecked(index: number, checked: boolean) {\n\t\tthis._setItemChecked(index, checked, true);\n\t}\n/**\n * Toggles the checked state of an item on the list.\n * This method is applicable only to multi-select listboxes\n * (see the \\@see:checkedMemberPath property).\n * \n * @param {?} index Item index.\n * @return {?}\n */\ntoggleItemChecked(index: number) {\n\t\tthis.setItemChecked(index, !this.getItemChecked(index));\n\t}\n/**\n * Gets or sets an array containing the items that are currently checked.\n * @return {?}\n */\nget checkedItems(): any[] {\n\t\tconst /** @type {?} */ arr = [];\n\t\tif (this._cv) {\n\t\t\tfor (let /** @type {?} */ i = 0; i < this._cv.items.length; i++) {\n\t\t\t\tif (this.getItemChecked(i)) {\n\t\t\t\t\tarr.push(this._cv.items[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn arr;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset checkedItems(value: any[]) {\n\t\tconst /** @type {?} */ cv  = this._cv, /** @type {?} */\n              arr = asArray(value, false);\n\t\tif (cv && arr) {\n\t\t\tconst /** @type {?} */ pos = cv.currentPosition;\n\t\t\tfor (let /** @type {?} */ i = 0; i < cv.items.length; i++) {\n\t\t\t\tconst /** @type {?} */ item = cv.items[i];\n\t\t\t\tthis._setItemChecked(i, arr.indexOf(item) > -1, false);\n\t\t\t}\n\t\t\tcv.moveCurrentToPosition(pos);\n\t\t\tthis.onCheckedItemsChanged();\n\t\t}\n\t}\n/**\n * Occurs when the value of the \\@see:selectedIndex property changes.\n */\nselectedIndexChanged = new Event();\n/**\n * Raises the \\@see:selectedIndexChanged event.\n * @param {?=} e\n * @return {?}\n */\nonSelectedIndexChanged(e?: EventArgs) {\n\t\tthis.selectedIndexChanged.raise(this, e);\n\t}\n/**\n * Occurs when the list of items changes.\n */\nitemsChanged = new Event();\n/**\n * Raises the \\@see:itemsChanged event.\n * @param {?=} e\n * @return {?}\n */\nonItemsChanged(e?: EventArgs) {\n\t\tthis.itemsChanged.raise(this, e);\n\t}\n/**\n * Occurs before the list items are generated.\n */\nloadingItems = new Event();\n/**\n * Raises the \\@see:loadingItems event.\n * @param {?=} e\n * @return {?}\n */\nonLoadingItems(e?: EventArgs) {\n\t\tthis.loadingItems.raise(this, e);\n\t}\n/**\n * Occurs after the list items are generated.\n */\nloadedItems = new Event();\n/**\n * Raises the \\@see:loadedItems event.\n * @param {?=} e\n * @return {?}\n */\nonLoadedItems(e?: EventArgs) {\n\t\tthis.loadedItems.raise(this, e);\n\t}\n/**\n * Occurs when the current item is checked or unchecked by the user.\n * \n * This event is raised when the \\@see:checkedMemberPath is set to the name of a\n * property to add checkboxes to each item in the control.\n * \n * Use the \\@see:selectedItem property to retrieve the item that was checked or\n * unchecked.\n */\nitemChecked = new Event();\n/**\n * Raises the \\@see:itemCheched event.\n * @param {?=} e\n * @return {?}\n */\nonItemChecked(e?: EventArgs) {\n\t\tthis.itemChecked.raise(this, e);\n\t}\n/**\n * Occurs when the value of the \\@see:checkedItems property changes.\n */\ncheckedItemsChanged = new Event();\n/**\n * Raises the \\@see:checkedItemsChanged event.\n * @param {?=} e\n * @return {?}\n */\nonCheckedItemsChanged(e?: EventArgs) {\n\t\tthis.checkedItemsChanged.raise(this, e);\n\t}\n/**\n * Occurs when an element representing a list item has been created.\n * \n * This event can be used to format list items for display. It is similar\n * in purpose to the \\@see:itemFormatter property, but has the advantage\n * of allowing multiple independent handlers.\n */\nformatItem = new Event();\n/**\n * Raises the \\@see:formatItem event.\n * \n * @param {?} e \\@see:FormatItemEventArgs that contains the event data.\n * @return {?}\n */\nonFormatItem(e: FormatItemEventArgs) {\n\t\tthis.formatItem.raise(this, e);\n\t}\n/**\n * @param {?} index\n * @param {?} checked\n * @param {?=} notify\n * @return {?}\n */\n_setItemChecked(index: number, checked: boolean, notify = true) {\n\n\t\t// update data item\n\t\tconst /** @type {?} */ item = this._cv.items[index];\n\t\tif (isObject(item)) {\n\t\t\tconst /** @type {?} */ ecv = /** @type {?} */(( <IEditableCollectionView>tryCast(this._cv, 'IEditableCollectionView')));\n\t\t\tif (item[this.checkedMemberPath] != checked) {\n\t\t\t\tthis._checking = true;\n\t\t\t\tif (ecv) {\n\t\t\t\t\tecv.editItem(item);\n\t\t\t\t\titem[this.checkedMemberPath] = checked;\n\t\t\t\t\tecv.commitEdit();\n\t\t\t\t} else {\n\t\t\t\t\titem[this.checkedMemberPath] = checked;\n\t\t\t\t\tthis._cv.refresh();\n\t\t\t\t}\n\t\t\t\tthis._checking = false;\n\t\t\t}\n\t\t}\n\n\t\t// update checkbox value\n\t\tconst /** @type {?} */ cb = this._getCheckbox(index);\n\t\tif (cb && cb.checked != checked) {\n\t\t\tcb.checked = checked;\n\t\t}\n\n\t\t// fire events\n\t\tif (notify) {\n\t\t\tthis.onItemChecked();\n\t\t\tthis.onCheckedItemsChanged();\n\t\t}\n\t}\n/**\n * @param {?} sender\n * @param {?} e\n * @return {?}\n */\nprivate _cvCollectionChanged(sender: any, e: NotifyCollectionChangedEventArgs) {\n\t\tconsole.log(\"list_box_collection_view_changed_start\");\n\t\t\n\t\tif(e.action !=1){\n\t\tif (!this._checking) {\n\t\t\tthis._populateList();\n\t\t\tthis.onItemsChanged();\n\t\t}\n\t\t}else{\n\t\t\tconsole.log(\"list_box_collection_view_changed_is_remove\");\n\t\t}\n\t}\n/**\n * @param {?} sender\n * @param {?} e\n * @return {?}\n */\nprivate _cvCurrentChanged(sender: any, e: EventArgs) {\n\tconsole.log(\"cv_current_changed\");\n\t\n\t\tthis.showSelection();\n\t\tthis.onSelectedIndexChanged();\n\t}\n/**\n * @return {?}\n */\nprivate _populateList() {\n\t\tconsole.log(\"list_box_populate_list_start\");\n\t\t// get ready to populate\n\t\tconst /** @type {?} */ host = this.hostElement;\n\t\tif (host) {\n\n\t\t\t// remember if we have focus\n\t\t\tconst /** @type {?} */ focus = this.containsFocus();\n\n\t\t\t// fire event so user can clean up any current items\n\t\t\tthis.onLoadingItems();\n\n\t\t\t// populate\n\t\t\thost.innerHTML = '';\n\t\t\tif (this._cv) {\n\t\t\t\tfor (let /** @type {?} */ i = 0; i < this._cv.items.length; i++) {\n\t\t\t\t\tconsole.log(\"list_box_populate_list:\"+i);\n\t\t\t\t\t// get item text\n\t\t\t\t\tlet /** @type {?} */ text = this.getDisplayValue(i);\n\t\t\t\t\tif (this._html != true) {\n\t\t\t\t\t\ttext = escapeHtml(text);\n\t\t\t\t\t}\n\n\t\t\t\t\t// add checkbox (without tabindex attribute: TFS 135857)\n\t\t\t\t\tif (this.checkedMemberPath) {\n\t\t\t\t\t\tconst /** @type {?} */ checked = this._cv.items[i][this.checkedMemberPath];\n\t\t\t\t\t\ttext          = '<label><input type=\"checkbox\"' + (checked ? ' checked' : '') + '> ' + text + '</label>';\n\t\t\t\t\t}\n\n\t\t\t\t\t// build item\n\t\t\t\t\tconst /** @type {?} */ item = document.createElement('div');\n\t\t\t\t\titem.innerHTML = text;\n\t\t\t\t\titem.className = 'wj-listbox-item';\n\t\t\t\t\tif (hasClass( /** @type {?} */((<HTMLElement>item.firstChild)), 'wj-separator')) {\n\t\t\t\t\t\titem.className += ' wj-separator';\n\t\t\t\t\t}\n\n\t\t\t\t\t// allow custom formatting\n\t\t\t\t\tif (this.formatItem.hasHandlers) {\n\t\t\t\t\t\tconst /** @type {?} */ e = new FormatItemEventArgs(i, this._cv.items[i], item);\n\t\t\t\t\t\tthis.onFormatItem(e);\n\t\t\t\t\t}\n\n\t\t\t\t\t// add item to list\n\t\t\t\t\thost.appendChild(item);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// make sure the list is not totally empty\n\t\t\t// or min-height/max-height won't work properly in IE/Edge\n\t\t\tif (host.children.length == 0) {\n\t\t\t\thost.appendChild(document.createElement('div'));\n\t\t\t}\n\n\t\t\t// restore focus\n\t\t\tif (focus && !this.containsFocus()) {\n\t\t\t\tthis.focus();\n\t\t\t}\n\n\t\t\t// scroll selection into view\n\t\t\tthis.showSelection();\n\n\t\t\t// fire event so user can hook up to items\n\t\t\tthis.onLoadedItems();\n\t\t}\n\t\tconsole.log(\"list_box_populate_list_finish\");\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _click(e: MouseEvent) {\n\n\t\t// select the item that was clicked\n\t\tconst /** @type {?} */ children = this.hostElement.children;\n\t\tfor (let /** @type {?} */ index = 0; index < children.length; index++) {\n\t\t\tif (contains(children[index], e.target)) {\n\t\t\t\tthis.selectedIndex = index;\t\t\t\t\n\t\t\t\tthis.removeAt(index);\n\t\t\t\tthis._cv.refresh();\t\t\n\t\t\t//\tthis.refresh();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// handle checkboxes\n\t\tif (this.checkedMemberPath && this.selectedIndex > -1) {\n\t\t\tconst /** @type {?} */ cb = this._getCheckbox(this.selectedIndex);\n\t\t\tif (cb == e.target) {\n\t\t\t\tthis.setItemChecked(this.selectedIndex, cb.checked);\n\t\t\t}\n\t\t}\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _keydown(e: KeyboardEvent) {\n\n\t\t// honor defaultPrevented\n\t\tif (e.defaultPrevented) return;\n\n\t\t// not interested in meta keys\n\t\tif (e.ctrlKey || e.shiftKey || e.altKey || e.metaKey) return;\n\n\t\t// handle the event\n\t\tvar /** @type {?} */ index = this.selectedIndex, /** @type {?} */\n\t\t\thost = this.hostElement, /** @type {?} */\n\t\t\tchildren = host.children;\n\t\tswitch (e.keyCode) {\n\t\t\tcase Key.Down:\n\t\t\t\te.preventDefault();\n\t\t\t\tif (index < children.length - 1) {\n\t\t\t\t\tthis.selectedIndex++;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase Key.Up:\n\t\t\t\te.preventDefault();\n\t\t\t\tif (index > 0) {\n\t\t\t\t\tthis.selectedIndex--;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase Key.Home:\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.selectedIndex = 0;\n\t\t\t\tbreak;\n\t\t\tcase Key.End:\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.selectedIndex = children.length - 1;\n\t\t\t\tbreak;\n\t\t\tcase Key.PageDown:\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.selectedIndex > -1) {\n\t\t\t\t\tvar /** @type {?} */ index = this.selectedIndex, /** @type {?} */\n\t\t\t\t\t\theight = host.offsetHeight, /** @type {?} */\n\t\t\t\t\t\toffset = 0;\n\t\t\t\t\tfor (var /** @type {?} */ i = index + 1; i < this._cv.items.length; i++) {\n\t\t\t\t\t\tvar /** @type {?} */ itemHeight = children[i].scrollHeight;\n\t\t\t\t\t\tif (offset + itemHeight > height) {\n\t\t\t\t\t\t\tthis.selectedIndex = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset += itemHeight;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.selectedIndex == index) {\n\t\t\t\t\t\tthis._cv.moveCurrentToLast();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase Key.PageUp:\n\t\t\t\te.preventDefault();\n\t\t\t\tif (this.selectedIndex > -1) {\n\t\t\t\t\tvar /** @type {?} */ index = this.selectedIndex, /** @type {?} */\n\t\t\t\t\t\theight = host.offsetHeight, /** @type {?} */\n\t\t\t\t\t\toffset = 0;\n\t\t\t\t\tfor (var /** @type {?} */ i = index - 1; i > 0; i--) {\n\t\t\t\t\t\tvar /** @type {?} */ itemHeight = children[i].scrollHeight;\n\t\t\t\t\t\tif (offset + itemHeight > height) {\n\t\t\t\t\t\t\tthis.selectedIndex = i;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toffset += itemHeight;\n\t\t\t\t\t}\n\t\t\t\t\tif (this.selectedIndex == index) {\n\t\t\t\t\t\tthis._cv.moveCurrentToFirst();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase Key.Space:\n\t\t\t\tif (this.checkedMemberPath && this.selectedIndex > -1) {\n\t\t\t\t\tconst /** @type {?} */ cb = this._getCheckbox(this.selectedIndex);\n\t\t\t\t\tif (cb) {\n\t\t\t\t\t\tthis.hostElement.focus(); // take focus from the checkbox (FireFox, TFS 135857)\n\t\t\t\t\t\tthis.setItemChecked(this.selectedIndex, !cb.checked);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\nprivate _keypress(e: KeyboardEvent) {\n\n\t\t// honor defaultPrevented\n\t\tif (e.defaultPrevented) return;\n\n\t\t// don't interfere with inner input elements (TFS 132081)\n\t\tif (e.target instanceof HTMLInputElement) return;\n\n\t\t// auto search\n\t\tif (e.charCode > 32 || (e.charCode == 32 && this._search)) {\n\t\t\te.preventDefault();\n\n\t\t\t// update search string\n\t\t\tthis._search += String.fromCharCode(e.charCode).toLowerCase();\n\t\t\tif (this._toSearch) {\n\t\t\t\tclearTimeout(this._toSearch);\n\t\t\t}\n\t\t\tthis._toSearch = window.setTimeout(() => {\n\t\t\t\tthis._toSearch = 0;\n\t\t\t\tthis._search = '';\n\t\t\t}, 600);\n\n\t\t\t// perform search\n\t\t\tif (this.hostElement) {\n\t\t\t\tconst /** @type {?} */ cnt = this.hostElement.childElementCount;\n\t\t\t\tfor (let /** @type {?} */ off = this._search.length > 1 ? 0 : 1; off < cnt; off++) {\n\t\t\t\t\tconst /** @type {?} */ idx = (this.selectedIndex + off) % cnt, /** @type {?} */\n                          txt = this.getDisplayText(idx).trim().toLowerCase();\n\t\t\t\t\tif (txt.indexOf(this._search) == 0) {\n\t\t\t\t\t\tthis.selectedIndex = idx;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n/**\n * @param {?} index\n * @return {?}\n */\nprivate _getCheckbox(index: number) {\n\t\tif (!this.hostElement) {\n\t\t\treturn null;\n\t\t}\n\t\tconst /** @type {?} */ li = this.hostElement.children[index];\n\t\treturn /** @type {?} */(( <HTMLInputElement>li.querySelector('input[type=checkbox]')));\n\t}\n/**\n * @param {?} hostElement\n * @return {?}\n */\n_populateSelectElement(hostElement: HTMLElement) {\n\t\tconst /** @type {?} */ children = hostElement.children, /** @type {?} */\n              items    = [];\n        let /** @type {?} */ selIndex   = -1;\n\t\tfor (let /** @type {?} */ i = 0; i < children.length; i++) {\n\t\t\tconst /** @type {?} */ child = /** @type {?} */(( <HTMLElement>children[i]));\n\t\t\tif (child.tagName == 'OPTION') {\n\n\t\t\t\t// keep track of selected item\n\t\t\t\tif (child.hasAttribute('selected')) {\n\t\t\t\t\tselIndex = items.length;\n\t\t\t\t}\n\n\t\t\t\t// add option to collectionView\n\t\t\t\tif (child.innerHTML) {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\thdr: child.innerHTML,\n\t\t\t\t\t\tval: child.getAttribute('value'),\n\t\t\t\t\t\tcmdParam: child.getAttribute('cmd-param')\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\titems.push({\n\t\t\t\t\t\thdr: '<div class=\"wj-separator\"/>'\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// remove child from host\n\t\t\t\thostElement.removeChild(child);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\t// apply items to control\n\t\tif (items) {\n\t\t\tthis.displayMemberPath = 'hdr';\n\t\t\tthis.selectedValuePath = 'val';\n\t\t\tthis.itemsSource = items;\n\t\t\tthis.selectedIndex = selIndex;\n\t\t}\n\t}\n\n\t//#endregion\n}\n\nfunction ListBox_tsickle_Closure_declarations() {\n/** @type {?} */\nListBox.prototype._items;\n/** @type {?} */\nListBox.prototype._cv;\n/** @type {?} */\nListBox.prototype._itemFormatter;\n/** @type {?} */\nListBox.prototype._pathDisplay;\n/** @type {?} */\nListBox.prototype._pathValue;\n/** @type {?} */\nListBox.prototype._pathChecked;\n/** @type {?} */\nListBox.prototype._html;\n/** @type {?} */\nListBox.prototype._checking;\n/** @type {?} */\nListBox.prototype._search;\n/** @type {?} */\nListBox.prototype._toSearch;\n/** @type {?} */\nListBox.prototype.subscription1;\n/** @type {?} */\nListBox.prototype.subscription2;\n/**\n * Occurs when the value of the \\@see:selectedIndex property changes.\n * @type {?}\n */\nListBox.prototype.selectedIndexChanged;\n/**\n * Occurs when the list of items changes.\n * @type {?}\n */\nListBox.prototype.itemsChanged;\n/**\n * Occurs before the list items are generated.\n * @type {?}\n */\nListBox.prototype.loadingItems;\n/**\n * Occurs after the list items are generated.\n * @type {?}\n */\nListBox.prototype.loadedItems;\n/**\n * Occurs when the current item is checked or unchecked by the user.\n * \n * This event is raised when the \\@see:checkedMemberPath is set to the name of a\n * property to add checkboxes to each item in the control.\n * \n * Use the \\@see:selectedItem property to retrieve the item that was checked or\n * unchecked.\n * @type {?}\n */\nListBox.prototype.itemChecked;\n/**\n * Occurs when the value of the \\@see:checkedItems property changes.\n * @type {?}\n */\nListBox.prototype.checkedItemsChanged;\n/**\n * Occurs when an element representing a list item has been created.\n * \n * This event can be used to format list items for display. It is similar\n * in purpose to the \\@see:itemFormatter property, but has the advantage\n * of allowing multiple independent handlers.\n * @type {?}\n */\nListBox.prototype.formatItem;\n}\n\n","import {isArray} from '../lang/is-array';\nimport {ICollectionView} from '../../../../collections/interface/ICollectionView';\nimport {tryCast} from '../../common/global';\nimport {assert} from './assert';\nimport {CollectionView} from '../../../../collections/CollectionView';\n/**\n * Asserts that a value is an \\@see:ICollectionView or an Array.\n * \n * @param {?} value Array or \\@see:ICollectionView.\n * @param {?=} nullOK Whether null values are acceptable.\n * @return {?} The \\@see:ICollectionView that was passed in or a \\@see:CollectionView\n * created from the array that was passed in.\n */\nexport function asCollectionView(value: any, nullOK = true): ICollectionView {\n    if (value == null && nullOK) {\n        return null;\n    }\n    const /** @type {?} */ cv = tryCast(value, 'ICollectionView');\n    if (cv != null) {\n        return cv;\n    }\n    if (!isArray(value)) {\n        assert(false, 'Array or ICollectionView expected.');\n    }\n    return new CollectionView(value);\n}\n\n","\nimport {Color} from '../../core';\nimport {DropDown} from './../DropDown/DropDown';\nimport {ListBox} from './../ListBox/ListBox';\nimport {hasItems} from '../../core';\nimport {setSelectionRange} from '../../core';\nimport {clamp} from '../../core';\nimport {ICollectionView} from '../../collections/interface/ICollectionView';\nimport {asBoolean} from '../../core';\nimport {asFunction} from '../../core';\nimport {EventArgs} from '../../eventArgs/EventArgs';\nimport {CancelEventArgs} from '../../eventArgs/CancelEventArgs';\nimport {Key} from '../../enum/Key';\nimport {asNumber} from '../../core';\nimport {asString} from '../../core';\nimport {Event} from '../../event/Event';\n/**\n * The \\@see:ComboBox control allows users to pick strings from lists.\n * \n * The control automatically completes entries as the user types, and allows users\n * to show a drop-down list with the items available.\n * \n * Use the \\@see:selectedIndex or the \\@see:text properties to determine which\n * item is currently selected.\n * \n * The \\@see:isEditable property determines whether users can enter values that\n * are not present in the list.\n * \n * The example below creates a \\@see:ComboBox control and populates it with a list\n * of countries. The \\@see:ComboBox searches for the country as the user types.\n * The <b>isEditable</b> property is set to false, so the user is forced to\n * select one of the items in the list.\n * \n * The example also shows how to create and populate a \\@see:ComboBox using\n * an HTML <b>&lt;select;&gt</b> element with <b>&lt;option;&gt</b> child\n * elements.\n * \n * \\@fiddle:8HnLx\n */\nexport class ComboBox extends DropDown {\n\n\t// child elements\n\t_lbx: ListBox;\n\n\t// property storage\n\t_required = true;\n\t_editable = false;\n\n\t// private stuff\n\t_composing = false;\n\t_deleting = false;\n\t_settingText = false;\n\t_cvt: HTMLElement;\n\t_hdrPath: string;\n/**\n * Initializes a new instance of a \\@see:ComboBox control.\n * \n * @param {?} element The DOM element that hosts the control, or a selector for the host element (e.g. '#theCtrl').\n * @param {?=} options The JavaScript object containing initialization data for the control.\n */\nconstructor(element: any, options?) {\n\t\tsuper(element);\n\n\t\t// disable auto-expand by default\n\t\tthis.autoExpandSelection = false;\n\n\t\t// handle IME\n\t\tthis.addEventListener(this._tbx, 'compositionstart', () => {\n\t\t\tthis._composing = true;\n\t\t});\n\t\tthis.addEventListener(this._tbx, 'compositionend', () => {\n\t\t\tthis._composing = false;\n\t\t\tthis._setText(this.text, true);\n\t\t});\n\n\t\t// use wheel to scroll through the items\n\t\tconst evt = 'onmousewheel' in document ? 'mousewheel' : 'DOMMouseScroll';\n\t\tthis.addEventListener(this.hostElement, evt, (e: MouseWheelEvent) => {\n\t\t\tif (this.containsFocus() && !this.isDroppedDown && !e.defaultPrevented) {\n\t\t\t\tif (this.selectedIndex > -1) {\n\t\t\t\t\tconst step         = clamp(e.wheelDelta || -e.detail, -1, +1);\n\t\t\t\t\tthis.selectedIndex = clamp(this.selectedIndex - step, 0, this.collectionView.items.length - 1);\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// initializing from <select> tag\n\t\tif (this._orgTag == 'SELECT') {\n\t\t\tthis._copyOriginalAttributes(this.hostElement);\n\t\t\tthis._lbx._populateSelectElement(this.hostElement);\n\t\t}\n\n\t\t// initialize control options\n\t\tthis.initialize(options);\n\t}\n/**\n * Gets or sets the array or \\@see:ICollectionView object that contains the items to select from.\n * @return {?}\n */\nget itemsSource(): any {\n\t\treturn this._lbx.itemsSource;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset itemsSource(value: any) {\n\t\tthis._lbx.itemsSource = value;\n\t\tthis._updateBtn();\n\t}\n/**\n * Gets the \\@see:ICollectionView object used as the item source.\n * @return {?}\n */\nget collectionView(): ICollectionView {\n\t\treturn this._lbx.collectionView;\n\t}\n/**\n * Gets or sets the name of the property to use as the visual representation of the items.\n * @return {?}\n */\nget displayMemberPath(): string {\n\t\treturn this._lbx.displayMemberPath;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset displayMemberPath(value: string) {\n\t\tthis._lbx.displayMemberPath = value;\n\t\tconst /** @type {?} */ text = this.getDisplayText();\n\t\tif (this.text != text) {\n\t\t\tthis._setText(text, true);\n\t\t}\n\t}\n/**\n * Gets or sets the name of a property to use for getting the value displayed in the\n * control's input element.\n * \n * The default value for this property is null, which causes the control to display\n * the same content in the input element as in the selected item of the drop-down list.\n * \n * Use this property if you want to de-couple the value shown in the input element\n * from the values shown in the drop-down list. For example, the input element could\n * show an item's name and the drop-down list could show additional detail.\n * @return {?}\n */\nget headerPath(): string {\n\t\treturn this._hdrPath;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset headerPath(value: string) {\n\t\tthis._hdrPath = asString(value);\n\t\tconst /** @type {?} */ text = this.getDisplayText();\n\t\tif (this.text != text) {\n\t\t\tthis._setText(text, true);\n\t\t}\n\t}\n/**\n * Gets or sets the name of the property used to get the \\@see:selectedValue from the \\@see:selectedItem.\n * @return {?}\n */\nget selectedValuePath(): string {\n\t\treturn this._lbx.selectedValuePath;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValuePath(value: string) {\n\t\tthis._lbx.selectedValuePath = value;\n\t}\n/**\n * Gets or sets a value indicating whether the drop-down list displays items as plain text or as HTML.\n * @return {?}\n */\nget isContentHtml(): boolean {\n\t\treturn this._lbx.isContentHtml;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset isContentHtml(value: boolean) {\n\t\tif (value != this.isContentHtml) {\n\t\t\tthis._lbx.isContentHtml = asBoolean(value);\n\t\t\tlet /** @type {?} */ text = this.getDisplayText();\n\t\t\tif (this.text != text) {\n\t\t\t\tthis._setText(text, true);\n\t\t\t}\n\t\t}\n\t}\n/**\n * Gets or sets a function used to customize the values shown in the drop-down list.\n * The function takes two arguments, the item index and the default text or html, and\n * returns the new text or html to display.\n * \n * If the formatting function needs a scope (i.e. a meaningful 'this'\n * value), then remember to set the filter using the 'bind' function to\n * specify the 'this' object. For example:\n * \n * <pre>\n *   comboBox.itemFormatter = customItemFormatter.bind(this);\n *   function customItemFormatter(index, content) {\n *     if (this.makeItemBold(index)) {\n *       content = '&lt;b&gt;' + content + '&lt;/b&gt;';\n *     }\n *     return content;\n *   }\n * </pre>\n * @return {?}\n */\nget itemFormatter(): Function {\n\t\treturn this._lbx.itemFormatter;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset itemFormatter(value: Function) {\n\t\tthis._lbx.itemFormatter = asFunction(value);\n\t}\n/**\n * Gets or sets the index of the currently selected item in the drop-down list.\n * @return {?}\n */\nget selectedIndex(): number {\n\t\treturn this._lbx.selectedIndex;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedIndex(value: number) {\n\t\tif (value != this.selectedIndex) {\n\t\t\tthis._lbx.selectedIndex = value;\n\t\t}\n\t\tconst /** @type {?} */ text = this.getDisplayText(value);\n\t\tif (this.text != text) {\n\t\t\tthis._setText(text, true);\n\t\t}\n\t}\n/**\n * Gets or sets the item that is currently selected in the drop-down list.\n * @return {?}\n */\nget selectedItem(): any {\n\t\treturn this._lbx.selectedItem;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedItem(value: any) {\n\t\tthis._lbx.selectedItem = value;\n\t}\n/**\n * Gets or sets the value of the \\@see:selectedItem, obtained using the \\@see:selectedValuePath.\n * @return {?}\n */\nget selectedValue(): any {\n\t\treturn this._lbx.selectedValue;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset selectedValue(value: any) {\n\t\tthis._lbx.selectedValue = value;\n\t}\n/**\n * Gets or sets whether the control value must be set to a non-null value\n * or whether it can be set to null (by deleting the content of the control).\n * @return {?}\n */\nget required(): boolean {\n\t\treturn this._required;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset required(value: boolean) {\n\t\tthis._required = asBoolean(value);\n\t}\n/**\n * Gets or sets a value that enables or disables editing of the text\n * in the input element of the \\@see:ComboBox (defaults to false).\n * @return {?}\n */\nget isEditable(): boolean {\n\t\treturn this._editable;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset isEditable(value: boolean) {\n\t\tthis._editable = asBoolean(value);\n\t}\n/**\n * Gets or sets the maximum height of the drop-down list.\n * @return {?}\n */\nget maxDropDownHeight(): number {\n\t\treturn this._lbx.maxHeight;\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset maxDropDownHeight(value: number) {\n\t\tthis._lbx.maxHeight = asNumber(value);\n\t}\n/**\n * Gets or sets the maximum width of the drop-down list.\n * \n * The width of the drop-down list is also limited by the width of\n * the control itself (that value represents the drop-down's minimum width).\n * @return {?}\n */\nget maxDropDownWidth(): number {\n\t\tconst /** @type {?} */ lbx = /** @type {?} */(( <HTMLElement>this._dropDown));\n\t\treturn parseInt(lbx.style.maxWidth);\n\t}\n/**\n * @param {?} value\n * @return {?}\n */\nset maxDropDownWidth(value: number) {\n\t\tconst /** @type {?} */ lbx          = /** @type {?} */(( <HTMLElement>this._dropDown));\n\t\tlbx.style.maxWidth = asNumber(value) + 'px';\n\t}\n/**\n * Gets the string displayed in the input element for the item at a\n * given index (always plain text).\n * \n * @param {?=} index The index of the item to retrieve the text for.\n * @return {?}\n */\ngetDisplayText(index = this.selectedIndex): string {\n\n\t\t// get display text directly from the headerPath if that was specified\n\t\tif (this.headerPath && index > -1 && hasItems(this.collectionView)) {\n\t\t\tconst /** @type {?} */ item = this.collectionView.items[index][this.headerPath];\n            let /** @type {?} */ text   = item != null ? item.toString() : '';\n\t\t\tif (this.isContentHtml) {\n\t\t\t\tif (!this._cvt) {\n\t\t\t\t\tthis._cvt = document.createElement('div');\n\t\t\t\t}\n\t\t\t\tthis._cvt.innerHTML = text;\n\t\t\t\ttext = this._cvt.textContent;\n\t\t\t}\n\t\t\treturn text;\n\t\t}\n\n\t\t// headerPath not specified, get text straight from the ListBox\n\t\treturn this._lbx.getDisplayText(index);\n\t}\n/**\n * Occurs when the value of the \\@see:selectedIndex property changes.\n */\nselectedIndexChanged = new Event();\n/**\n * Raises the \\@see:selectedIndexChanged event.\n * @param {?=} e\n * @return {?}\n */\nonSelectedIndexChanged(e?: EventArgs) {\n\t\tthis._updateBtn();\n\t\tthis.selectedIndexChanged.raise(this, e);\n\t\tconsole.log(\"droppped_down_setting_to_false\");\n\t\t//this.isDroppedDown = false;\n\t}\n/**\n * Gets the index of the first item that matches a given string.\n * \n * @param {?} text The text to search for.\n * @param {?} fullMatch A value indicating whether to look for a full match or just the start of the string.\n * @return {?} The index of the item, or -1 if not found.\n */\nindexOf(text: string, fullMatch: boolean): number {\n\t\tconst /** @type {?} */ cv = this.collectionView;\n\t\tif (hasItems(cv) && text) {\n\t\t\ttext = text.toString().toLowerCase();\n\t\t\tfor (let /** @type {?} */ i = 0; i < cv.items.length; i++) {\n\t\t\t\tconst /** @type {?} */ t = this.getDisplayText(i).toLowerCase();\n\t\t\t\tif (fullMatch) {\n\t\t\t\t\tif (t == text) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (t.indexOf(text) == 0) {\n\t\t\t\t\t\treturn i;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t}\n/**\n * Gets the \\@see:ListBox control shown in the drop-down.\n * @return {?}\n */\nget listBox(): ListBox {\n\t\treturn this._lbx;\n\t}\n/**\n * @param {?=} e\n * @return {?}\n */\nonLostFocus(e?: EventArgs) {\n\t\tif (this.isEditable && this.required && !this.text) {\n\t\t\tif (hasItems(this.collectionView)) {\n\t\t\t\tthis.selectedIndex = 0;\n\t\t\t}\n\t\t}\n\t\tsuper.onLostFocus(e);\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\nonIsDroppedDownChanging(e: CancelEventArgs): boolean {\n\t\tconsole.log(\"combo_box_dropped_down_changing:\"+e);\n\t\tvar /** @type {?} */ changing = hasItems(this.collectionView)\n\t\t\t? super.onIsDroppedDownChanging(e)\n\t\t\t: false;\n\t\tif(hasItems(this.collectionView)==0){\n\t\t\tconsole.log(\"combo_box_dropped_down_changing_is_empty\");\n\t\t\tchanging = true;\n\t\t}\n\t\t\n\t\tconsole.log(\"combo_box_dropped_down:\"+changing);\n\t\treturn changing;\n\t}\n/**\n * @param {?=} e\n * @return {?}\n */\nonIsDroppedDownChanged(e?: EventArgs) {\n\t\n\t\tsuper.onIsDroppedDownChanged(e);\n\t\tconsole.log(\"combo_box_dropped_down_changed\");\n\t\t\n\t\t\n\t\tif (this.isDroppedDown) {\n\t\t\tthis._lbx.showSelection();\n\t\t\tif (!this.isTouching) {\n\t\t\t\tthis.selectAll();\n\t\t\t}\n\t\t}\n\t}\n/**\n * @return {?}\n */\n_updateBtn() {\n\t\tconst /** @type {?} */ cv                = this.collectionView;\n\t\tconsole.log(\"combo_box_update_btn\");\n\t\tconsole.log(\"combo_box_update_btn:\"+hasItems(cv));\n\t\tconsole.log(\"combo_box_update_btn:\"+this._showBtn);\n\t\t\n\t\tthis._btn.style.display = this._showBtn && hasItems(cv) ? '' : 'none';\n\t\tconsole.log(\"combo_box_update_btn_display:\"+this._btn.style.display);\n\t}\n/**\n * @return {?}\n */\n_createDropDown() {\n\n\t\t// create the drop-down element\n\t\tthis._lbx = new ListBox(this._dropDown);\n\n\t\t// limit the size of the drop-down\n\t\tthis._lbx.maxHeight = 200;\n\n\t\t// update our selection when user picks an item from the ListBox\n\t\t// or when the selected index changes because the list changed\n\t\tthis._lbx.selectedIndexChanged.addHandler(() => {\n\t\t\tthis._updateBtn();\n\t\t\tthis.selectedIndex = this._lbx.selectedIndex;\n\t\t\tthis.onSelectedIndexChanged();\n\t\t});\n\n\t\t// update button display when item list changes\n\t\tthis._lbx.itemsChanged.addHandler(() => {\n\t\t\tthis._updateBtn();\n\t\t});\n\n\t\t// close the drop-down when the user clicks to select an item\n\t\tthis.addEventListener(this._dropDown, 'click', (e: MouseEvent) => {\n\t\t\tif (e.target != this._dropDown) { // an item, not the list itself...\n\t\t\t\t\n\t\t\t\tthis.isDroppedDown = false;\n\t\t\t}\n\t\t});\n\t}\n/**\n * @param {?} text\n * @param {?} fullMatch\n * @return {?}\n */\n_setText(text: string, fullMatch: boolean) {\n\n\t\t// not while composing IME text...\n\t\tif (this._composing) return;\n\n\t\t// prevent reentrant calls while moving CollectionView cursor\n\t\tif (this._settingText) return;\n\t\tthis._settingText = true;\n\n\t\t// make sure we have a string\n\t\tif (text == null) text = '';\n\t\ttext = text.toString();\n\n\t\t// get variables we need\n\t\tlet /** @type {?} */ index = this.selectedIndex;\n        const /** @type {?} */ cv = this.collectionView;\n        let /** @type {?} */ start = this._getSelStart(), /** @type {?} */\n            len   = -1;\n\n\t\t// require full match if deleting (to avoid auto-completion)\n\t\tif (this._deleting) {\n\t\t\tfullMatch = true;\n\t\t}\n\n\t\t// try autocompletion\n\t\tif (this._deleting) {\n\t\t\tindex = this.indexOf(text, true);\n\t\t} else {\n\t\t\tindex = this.indexOf(text, fullMatch);\n\t\t\tif (index < 0 && fullMatch) { // not found, try partial match\n\t\t\t\tindex = this.indexOf(text, false);\n\t\t\t}\n\t\t\tif (index < 0 && start > 0) { // not found, try up to cursor\n\t\t\t\tindex = this.indexOf(text.substr(0, start), false);\n\t\t\t}\n\t\t}\n\n\t\t// not found and not editable? restore old text and move cursor to matching part\n\t\tif (index < 0 && !this.isEditable && hasItems(cv) && this._oldText) {\n\t\t\tif (this.required || text) { // allow removing the value if not required\n\t\t\t\tindex = Math.max(0, this.indexOf(this._oldText, false));\n\t\t\t\tfor (let /** @type {?} */ i = 0; i < text.length && i < this._oldText.length; i++) {\n\t\t\t\t\tif (text[i] != this._oldText[i]) {\n\t\t\t\t\t\tstart = i;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (index > -1) {\n\t\t\tlen = start;\n\t\t\ttext = this.getDisplayText(index);\n\t\t}\n\n\t\t// update collectionView\n\t\tif (cv) {\n\t\t\tcv.moveCurrentToPosition(index);\n\t\t}\n\n\t\t// update element\n\t\tif (text != this._tbx.value) {\n\t\t\tthis._tbx.value = text;\n\t\t}\n\n\t\t// update text selection\n\t\tif (len > -1 && this.containsFocus() && !this.isTouching) {\n\t\t\tthis._setSelectionRange(len, text.length);\n\t\t}\n\n\t\t// call base class to fire textChanged event\n\t\tsuper._setText(text, fullMatch);\n\n\t\t// clear flags\n\t\tthis._deleting = false;\n\t\tthis._settingText = false;\n\t}\n/**\n * @param {?} text\n * @param {?} step\n * @return {?}\n */\nprivate _findNext(text: string, step: number): number {\n\t\tif (this.collectionView) {\n\t\t\ttext = text.toLowerCase();\n\t\t\tconst /** @type {?} */ len = this.collectionView.items.length;\n            let /** @type {?} */ index: number, /** @type {?} */\n                  t: string;\n\t\t\tfor (let /** @type {?} */ i = 1; i <= len; i++) {\n\t\t\t\tindex = (this.selectedIndex + i * step + len) % len;\n\t\t\t\tt = this.getDisplayText(index).toLowerCase();\n\t\t\t\tif (t.indexOf(text) == 0) {\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn this.selectedIndex;\n\t}\n/**\n * @param {?} e\n * @return {?}\n */\n_keydown(e: KeyboardEvent) {\n\n\t\t// allow base class\n\t\tsuper._keydown(e);\n\n\t\t// if the base class handled this, we're done\n\t\tif (e.defaultPrevented) {\n\t\t\treturn;\n\t\t}\n\n\t\t// if the input element is not visible, we're done (e.g. menu)\n\t\tif (this._elRef != this._tbx) {\n\t\t\treturn;\n\t\t}\n\n\t\t// remember we pressed a key when handling the TextChanged event\n\t\tif (e.keyCode == Key.Back || e.keyCode == Key.Delete) {\n\t\t\tthis._deleting = true;\n\t\t}\n\n\t\t// not if we have no items\n\t\tlet /** @type {?} */ cv = this.collectionView;\n\t\tif (!cv || !cv.items) {\n\t\t\treturn;\n\t\t}\n\n\t\t// handle key\n\t\tlet /** @type {?} */ start = -1;\n\t\tswitch (e.keyCode) {\n\n\t\t\t// select previous item (or wrap back to the last)\n\t\t\tcase Key.Up:\n\t\t\t\tstart = this._getSelStart();\n\t\t\t\tthis.selectedIndex = this._findNext(this.text.substr(0, start), -1);\n\t\t\t\tthis._setSelectionRange(start, this.text.length);\n\t\t\t\te.preventDefault();\n\t\t\t\tbreak;\n\n\t\t\t// select next item (or wrap back to the first, or show dropdown)\n\t\t\tcase Key.Down:\n\t\t\t\tstart = this._getSelStart();\n\t\t\t\tthis.selectedIndex = this._findNext(this.text.substr(0, start), +1);\n\t\t\t\tthis._setSelectionRange(start, this.text.length);\n\t\t\t\te.preventDefault();\n\t\t\t\tbreak;\n\t\t}\n\t}\n/**\n * @param {?} start\n * @param {?} end\n * @return {?}\n */\nprivate _setSelectionRange(start: number, end: number) {\n\t\tif (this._elRef == this._tbx) {\n\t\t\tsetSelectionRange(this._tbx, start, end);\n\t\t}\n\t}\n/**\n * @return {?}\n */\nprivate _getSelStart(): number {\n\t\treturn this._tbx && this._tbx.value\n\t\t\t? this._tbx.selectionStart\n\t\t\t: 0;\n\t}\n\n\t//#endregion ** implementation\n}\n\nfunction ComboBox_tsickle_Closure_declarations() {\n/** @type {?} */\nComboBox.prototype._lbx;\n/** @type {?} */\nComboBox.prototype._required;\n/** @type {?} */\nComboBox.prototype._editable;\n/** @type {?} */\nComboBox.prototype._composing;\n/** @type {?} */\nComboBox.prototype._deleting;\n/** @type {?} */\nComboBox.prototype._settingText;\n/** @type {?} */\nComboBox.prototype._cvt;\n/** @type {?} */\nComboBox.prototype._hdrPath;\n/**\n * Occurs when the value of the \\@see:selectedIndex property changes.\n * @type {?}\n */\nComboBox.prototype.selectedIndexChanged;\n}\n\n"],"names":["ClrResponsiveNavCodes","Object","defineProperty","get","ClrResponsiveNavControlMessage","_controlCode","_navLevel","this","prototype","ClrResponsiveNavigationService","responsiveNavList","registerNavSubject","Subject","controlNavSubject","closeAllNavs","asObservable","registerNav","navLevel","isNavRegistered","push","next","indexOf","console","error","unregisterNav","index","splice","sendControlMessage","controlCode","message","NAV_CLOSE_ALL","decorators","type","Injectable","ctorParameters","ClarityModule","forRoot","ngModule","providers","forChild","isArray","value","Array","isDate","Date","isNaN","valueOf","isObject","isFunction","assert","condition","msg","Error","isNumber","asFunction","nullOK","asNumber","positive","asArray","isBoolean","asBoolean","NgModule","args","imports","CommonModule","FormsModule","declarations","exports","Binding","path","_path","set","_parts","split","i","length","part","ib","substr","parseInt","_key","getValue","object","setValue","Aggregate","tryCast","isString","implementsInterface","hasItems","items","setSelectionRange","e","start","end","asType","HTMLInputElement","contains","document","body","disabled","style","display","focus","x","None","Sum","Cnt","Avg","Max","Min","Rng","Std","Var","StdPop","VarPop","EventHandler","handler","self","EventArgs","empty","Event$1","_handlers","addHandler","removeHandler","l","removeAllHandlers","raise","sender","call","CancelEventArgs","_super","_this","apply","arguments","cancel","__extends","ArrayBase","pop","count","slice","begin","searchElement","fromIndex","sort","compareFn","reverse","NotifyCollectionChangedAction","Add","Remove","Change","Reset","Splice","NotifyCollectionChangedEventArgs","action","removed","added","reset","ObservableArray","data","collectionChanged","EventEmitter","concat","item","rv","onCollectionChanged","_i","insert","remove","removeAt","setAt","clear","emit","GroupDescription","groupNameFromItem","level","namesMatch","groupName","itemName","PageChangingEventArgs","newIndex","newPageIndex","SortDescription","property","ascending","_bnd","_asc","CollectionViewGroup","groupDescription","name","isBottomLevel","_gd","_name","_level","_isBottomLevel","_groups","_items","getAggregate","aggType","binding","view","cv","CollectionView","cnt","cntn","sum","sum2","min","max","bnd","val","avg","Math","sqrt","_getFullGroup","sourceCollection","_idx","_srtDsc","_grpDesc","_newItem","_edtItem","_pgSz","_pgIdx","_updating","_canFilter","_canGroup","_canSort","_canAddNew","_canCancelEdit","_canRemove","_canChangePage","_trackChanges","_chgAdded","_chgRemoved","_chgEdited","currentChanged","currentChanging","pageChanged","Event","pageChanging","subscribe","arr","canSort","refresh","canGroup","_itemCreator","_srtCvt","interfaceName","clearChanges","_raiseCollectionChanged","_pgView","moveCurrentTo","_filter","canFilter","_createGroups","_view","_src","currentPosition","commitEdit","commitNew","_ncc","_sourceChanged","bind","log","moveCurrentToFirst","onCurrentChanged","s","moveCurrentToPosition","moveCurrentToLast","moveCurrentToNext","onCurrentChanging","moveCurrentToPrevious","_performRefresh","current","currentItem","_performFilter","_performSort","_fullGroups","_mergeGroupItems","clamp","pageCount","_getPageView","_digest","_getGroupsDigest","groups","_compareItems","srtDsc","srtCvt","init","a","b","sd","v1","v2","lc1","toLowerCase","lc2","cmp","filter","beginUpdate","endUpdate","deferUpdate","fn","addNew","canAddNew","newItemCreator","constructor","g","cancelEdit","canCancelEdit","_edtClone","_extend","cancelNew","sameContent","_sameContent","digest","_trackItemChanged","idx","editItem","pendingNew","canRemove","idxAdded","idxEdited","pageSize","asInt","dst","src","key","_sameValue","DateTime","equals","ceil","totalItemCount","moveToFirstPage","moveToPage","moveToLastPage","moveToNextPage","pageIndex","canChangePage","onPageChanging","groupDescriptions","onPageChanged","moveToPreviousPage","fg","_getGroupByPath","root","maps","map","levels","gd","last","isPrimitive","group","_getGroup","groupItems","completeAllStream","complete","$$observable","_subscribe","subscriber","round","asString","hasClass","className","getAttribute","rx","RegExp","test","addClass","setAttribute","cn","parent","child","parentNode","toggleClass","addOrRemove","replace","removeClass","getElement","selector","HTMLElement","querySelector","jquery","_ENTITYMAP","&","<",">","\"","'","/","culture","Globalize","numberFormat","NumberDecimalSeparator","NumberGroupSeparator","CurrencySymbol",".",",","percent","pattern","currency","decimals","symbol","dateTimeFormat","TimeSeparator","DateSeparator",":","calendar","firstDay","days","daysAbbr","months","monthsAbbr","am","pm","eras","patterns","d","D","f","F","t","T","M","m","Y","y","G","o","O","U","fiscalYearOffsets","MultiSelect","itemsSelected","FlexGrid","groupHeaderFormat","FlexGridFilter","descending","conditions","values","search","selectAll","null","header","and","or","stringOperators","op","numberOperators","dateOperators","booleanOperators","addDays","getFullYear","getMonth","getDate","addMonths","addYears","years","addHours","hours","getHours","addMinutes","minutes","getMinutes","addSeconds","seconds","getSeconds","sameDate","d1","d2","sameTime","getTime","fromDateTime","date","time","toFiscal","govt","cal","fromFiscal","clone","Size","width","height","sz","format","trim","truncate","formatNumber","formatDate","toString","result","match","nf","f1","prec","scale","curr","dp","ts","pow","abs","toUpperCase","decPos","parseFloat","toFixed","toUTCString","toISOString","_expandFormat","parts","_parseDateFormat","str","_formatDatePart","neg","pct","parseDate","setHours","setMinutes","setSeconds","hasDayName","hasDay","hasQuarter","hasMonth","fiscalFmt","cjk","_CJK","rxv","vparts","fparts","offset","year","month","day","hour","sec","ms","era","vpi","pval","plen","monthName","j","_getEra","_unquote","getFirstDayOfWeek","fdw","getNumberDecimalSeparator","ndc","_dateFomatParts","c","substring","fd","ff","_zeroPad","getDay","_h12","getMilliseconds","floor","tz","fmt","num","places","n","zero","join","h","Binding$1","Control","element","options","invalidateOnResize","_focus","_fullUpdate","gotFocus","lostFocus","getControl","host","_orgOuter","outerHTML","_orgInner","innerHTML","tagName","_orgAtts","attributes","_orgTag","_replaceWithDiv","_e","_DATA_KEY","_szCtl","offsetWidth","offsetHeight","hr","_handleResize","addEventListener","window","_updateFocusState","hd","_handleDisabled","_touching","_handleTouchStart","te","_handleTouchEnd","getTemplate","p","getPrototypeOf","controlTemplate","applyTemplate","classNames","template","namePart","html","div","tpl","createElement","removeChild","firstChild","appendChild","tabIndex","wjPart","att","removeAttribute","dispose","cc","querySelectorAll","ctl","prop","_toInv","clearTimeout","removeEventListener","evt","containsFocus","getElementsByClassName","invalidate","fullUpdate","isUpdating","setTimeout","_REFRESH_INTERVAL","invalidateAll","children","refreshAll","disposeAll","enable","initialize","copy","_copy","target","capture","_listeners","onGotFocus","onLostFocus","parentElement","pointerType","preventDefault","stopPropagation","stopImmediatePropagation","replaceChild","atts","_copyOriginalAttributes","Key","Back","Tab","Enter","Escape","Space","PageUp","PageDown","End","Home","Left","Up","Right","Down","Delete","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","DropDown","_showBtn","_autoExpand","textChanged","isDroppedDownChanging","isDroppedDownChanged","_tbx","_btn","_dropDown","_elRef","autocomplete","_createDropDown","_updateBtn","kd","_keydown","hostElement","dropDown","_setText","text","_expandSelection","doctype","navigator","appVersion","_btnclick","placeholder","isDroppedDown","onIsDroppedDownChanging","dd","minWidth","getBoundingClientRect","_updateDropDown","isTouching","showDropDownButton","onIsDroppedDownChanged","onTextChanged","_commitText","activeElement","getComputedStyle","ae","tbx","selectionStart","selectionEnd","ct","_getCharType","pos","chr","defaultPrevented","keyCode","altKey","fullMatch","_oldText","FormatItemEventArgs","_index","_data","_item","ListBox","_html","_search","subscription1","Subscription","subscription2","selectedIndexChanged","itemsChanged","loadingItems","loadedItems","itemChecked","checkedItemsChanged","formatItem","_populateSelectElement","_click","_keypress","scrollHeight","clientHeight","wheelDelta","scrollTop","_populateList","_cv","unsubscribe","asCollectionView","_cvCurrentChanged","_cvCollectionChanged","onItemsChanged","onSelectedIndexChanged","_itemFormatter","_pathDisplay","_pathValue","_pathChecked","getDisplayValue","displayMemberPath","itemFormatter","getDisplayText","textContent","selectedItem","selectedValuePath","selectedIndex","maxHeight","showSelection","rco","rcc","bottom","top","getItemChecked","checkedMemberPath","cb","_getCheckbox","checked","setItemChecked","_setItemChecked","toggleItemChecked","onCheckedItemsChanged","onLoadingItems","onLoadedItems","onItemChecked","onFormatItem","notify","ecv","_checking","hasHandlers","ctrlKey","shiftKey","metaKey","itemHeight","charCode","String","fromCharCode","_toSearch","childElementCount","off","selIndex","hasAttribute","hdr","cmdParam","itemsSource","ComboBox","_required","_editable","_composing","_deleting","_settingText","autoExpandSelection","step","detail","collectionView","_lbx","_hdrPath","isContentHtml","selectedValue","lbx","maxWidth","headerPath","_cvt","isEditable","required","changing","_getSelStart","len","_setSelectionRange","_findNext"],"mappings":"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"}
